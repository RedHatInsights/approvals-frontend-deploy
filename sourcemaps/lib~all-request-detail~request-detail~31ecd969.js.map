{"version":3,"sources":["webpack:///./src/messages/form.messages.js","webpack:///./src/helpers/request/request-helper.js","webpack:///./src/redux/actions/request-actions.js","webpack:///./src/messages/action-modal.messages.js","webpack:///./src/smart-components/request/request-actions.js","webpack:///./src/forms/request-comment-form.schema.js","webpack:///./src/smart-components/request/action-modal.js","webpack:///./src/smart-components/request/request-detail/request-info-bar.js","webpack:///./src/smart-components/request/request-detail/action-transcript.js","webpack:///./src/smart-components/request/request-detail/request.js","webpack:///./src/smart-components/request/request-detail/request-list.js","webpack:///./src/smart-components/request/request-detail/request-transcript.js","webpack:///./src/smart-components/request/request-detail/request-detail.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/PageHeader.js"],"names":["formMessages","defineMessages","require","createApprovalTitle","id","defaultMessage","generalInformation","setGroups","enterInfo","approvalProcessName","enterApprovalName","description","nameTaken","selectPlaceholder","summary","groups","create","actionApi","getActionApi","graphqlInstance","getGraphqlInstance","sortPropertiesMapper","property","opened","requester","status","filterQuery","filterValue","query","name","push","decision","forEach","dec","join","fetchRequests","filter","pagination","defaultSettings","persona","undefined","sortBy","paginationQuery","Math","max","limit","offset","sortQuery","direction","fetchUrl","APPROVAL_API_BASE","fetchHeaders","getAxiosInstance","method","url","headers","fetchRequestTranscript","requestId","parent_id","APPROVAL_APPROVER_PERSONA","APPROVAL_REQUESTER_PERSONA","data","then","requests","fetchRequestCapabilities","isParent","fetchRequestWithSubrequests","a","requestData","length","number_of_children","result","map","request","find","item","metadata","createRequestAction","actionIn","createAction","dispatch","getState","requestReducer","finalPagination","meta","type","ActionTypes","payload","RequestHelper","fetchRequest","apiProps","fetchRequestContent","actionName","intl","notifications","fulfilled","variant","title","formatMessage","actionModalMessages","successTitle","fulfilledAction","rejected","failedTitle","failedAction","sortRequests","setFilterValueRequests","clearFilterValueRequests","resetRequestList","requestTitle","requestActionTitle","RequestActions","denyLink","approveLink","commentLink","canApproveDeny","canComment","useIntl","state","approveDenyAllowed","isRequestStateActive","commentAllowed","style","display","Fragment","to","pathname","search","className","aria-label","requestsMessages","approveRequest","approveTitle","denyTitle","commentTitle","propTypes","PropTypes","string","object","isRequired","bool","defaultProps","createRequestCommentSchema","isDeny","fields","component","componentTypes","TEXTAREA","label","reasonTitle","validate","validatorTypes","REQUIRED","actionTypeToMsg","Approve","Deny","ActionModal","actionType","closeUrl","postMethod","useHistory","useQuery","onCancel","Modal","isOpen","onClose","schema","onSubmit","operationType","addCommentTitle","operation","formContainer","routes","index","func","oneOfType","shape","patname","connect","bindActionCreators","RequestInfoBar","requestContent","Stack","hasGutter","StackItem","key","Card","CardBody","Title","headingLevel","size","TextContent","Text","commonMessages","product","TextVariants","p","portfolio","platform","requesterColumn","requester_name","orderNumber","order_id","CardTitle","parameters","params","Object","keys","param","operationInfo","memo","displayName","commentFrom","icon","approve","approvedBy","deny","deniedBy","notify","notifiedBy","skip","skippedBy","start","startedBy","cancel","canceledBy","error","errorBy","ActionTranscript","actionList","actionItem","small","timeAgo","created_at","untranslatedMessage","operationDisplayName","by","processed_by","comments","EmptyTable","centered","noRecords","array","Request","isExpanded","toggleExpand","indexpath","userRoles","useContext","UserContext","isApprovalAdmin","useIsApprovalAdmin","checkCapability","capability","user_capabilities","DataListItem","aria-labelledby","DataListItemRow","DataListToggle","onClick","toogleDetailsFor","DataListItemCells","dataListCells","DataListCell","group_name","textTransform","addComment","DataListContent","requestContentDetails","isHidden","h6","actions","requestActions","RequestList","isLoading","items","noItems","useState","expanded","setExpanded","indexOf","newExpanded","slice","PageHeader","DataList","expandableDataList","idx","isActive","includes","active_request","number","RequestTranscript","requestTranscript","content","initialState","isFetching","requestState","action","RequestDetail","requestBreadcrumbs","useReducer","stateDispatch","useSelector","selectedRequest","location","useLocation","useDispatch","useEffect","Promise","all","approvalPersona","exact","path","render","props","breadcrumbs","paddingBottom","Section","Grid","backgroundColor","minHeight","GridItem","md","lg","_interopDefault","e","default","defineProperty","exports","value","_extends","objectWithoutProperties","React__default","classNames","configContext","Title_js","t","r","children","_objectWithoutProperties","s","createElement","ThemeContext","Consumer","arguments","_defineProperty","concat","any","PageHeaderTitle","node"],"mappings":"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","file":"js/lib~all-request-detail~request-detail~31ecd969.06962fa697b9a3298d29.js","sourcesContent":["const { defineMessages } = require('react-intl');\n\nconst formMessages = defineMessages({\n  createApprovalTitle: {\n    id: 'formMessages.createApprovalTitle',\n    defaultMessage: 'Create approval process'\n  },\n  generalInformation: {\n    id: 'formMessages.generalInformation',\n    defaultMessage: 'General information'\n  },\n  setGroups: {\n    id: 'formMessages.setGroups',\n    defaultMessage: 'Set groups'\n  },\n  enterInfo: {\n    id: 'formMessages.enterInfo',\n    defaultMessage: 'Enter your information'\n  },\n  approvalProcessName: {\n    id: 'formMessages.approvalProcessName',\n    defaultMessage: 'Name'\n  },\n  enterApprovalName: {\n    id: 'formMessages.enterApprovalName',\n    defaultMessage: 'Enter a name for the approval process'\n  },\n  description: {\n    id: 'formMessages.description',\n    defaultMessage: 'Description'\n  },\n  nameTaken: {\n    id: 'formMessages.nameTaken',\n    defaultMessage: 'Name has already been taken'\n  },\n  selectPlaceholder: {\n    id: 'formMessages.selectPlaceholder',\n    defaultMessage: 'Select...'\n  },\n  summary: {\n    id: 'formMessages.summary',\n    defaultMessage: 'Summary'\n  },\n  groups: {\n    id: 'formMessages.groups',\n    defaultMessage: 'Groups'\n  },\n  create: {\n    id: 'formMessages.create',\n    defaultMessage: 'Create'\n  }\n});\n\nexport default formMessages;\n","import { getActionApi, getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_REQUESTER_PERSONA, APPROVAL_APPROVER_PERSONA } from '../shared/helpers';\n\nconst actionApi = getActionApi();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sortPropertiesMapper = (property) => ({\n  'request-id': 'id',\n  opened: 'created_at',\n  requester: 'requester_name',\n  status: 'state'\n}[property] || property\n);\n\nconst filterQuery = (filterValue) => {\n  const query = [];\n  if (filterValue.name) {\n    query.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.requester) {\n    query.push(`filter[requester_name][contains_i]=${filterValue.requester}`);\n  }\n\n  if (filterValue.decision) {\n    filterValue.decision.forEach(dec => {\n      query.push(`filter[decision][eq][]=${dec}`);\n    });\n  }\n\n  return query.join('&');\n};\n\nexport function fetchRequests(filter = {}, pagination = defaultSettings, persona = undefined, sortBy) {\n  const paginationQuery = `&limit=${Math.max(pagination.limit, 10)}&offset=${pagination.offset}`;\n  const sortQuery = `&sort_by=${sortPropertiesMapper(sortBy.property)}:${sortBy.direction}`;\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/?${filterQuery(filter)}${paginationQuery}${sortQuery}`;\n  const fetchHeaders = persona ? { 'x-rh-persona': persona } : undefined;\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n}\n\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    id\n    name\n    number_of_children\n    decision\n    description\n    group_name\n    number_of_finished_children\n    state\n    requester_name\n    actions {\n      id\n      operation\n      comments\n      created_at\n      processed_by\n    }\n    requests {\n      id\n      name\n      number_of_children\n      decision\n      description\n      group_name\n      number_of_finished_children\n      state\n      workflow_id\n      parent_id\n      actions {\n        id\n        operation\n        comments\n        created_at\n        processed_by\n      }\n    }\n  }\n}`;\n\nexport const fetchRequestTranscript = (requestId, persona) => {\n  const fetchHeaders = (persona && persona !== APPROVAL_APPROVER_PERSONA) ? { 'x-rh-persona': persona }\n    : { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return graphqlInstance({ method: 'post', url: `${APPROVAL_API_BASE}/graphql`,\n    headers: fetchHeaders, data: { query: requestTranscriptQuery(requestId) }})\n  .then(({ data: { requests }}) => requests);\n};\n\nexport const fetchRequestContent = (id) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}/content`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport const fetchRequestCapabilities = (id, isParent) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}${isParent ? '/requests' : ''}`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport async function fetchRequestWithSubrequests(id, persona) {\n  const requestData = await fetchRequestTranscript(id, persona);\n\n  if (!requestData || requestData.length === 0) { return {}; }\n\n  if (persona === APPROVAL_APPROVER_PERSONA) {\n    if (requestData && requestData.length > 0 && requestData[0].number_of_children > 0) {\n      const result = await fetchRequestCapabilities(id, true);\n\n      if (result && result.data) {\n        requestData[0].requests = requestData[0].requests.map(request => {\n          return {\n            ...result.data.find((item) => (item.id === request.id) && item.metadata),\n            ...request\n          };\n        });\n      }\n    }\n    else {\n      const request = await fetchRequestCapabilities(id, false);\n      if (request) {\n        requestData[0] = { ...requestData[0], metadata: request.metadata };\n      }\n    }\n  }\n\n  return requestData[0];\n}\n\nexport const createRequestAction = (requestId, actionIn) => actionApi.createAction(requestId, actionIn);\n","import * as ActionTypes from '../action-types';\nimport * as RequestHelper from '../../helpers/request/request-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport actionModalMessages from '../../messages/action-modal.messages';\n\nexport const fetchRequests = (persona, pagination) => (dispatch, getState) => {\n  const { sortBy, requests, filterValue } = getState().requestReducer;\n\n  let finalPagination = pagination || defaultSettings;\n\n  if (!pagination && requests) {\n    const { limit, offset } = requests.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_REQUESTS,\n    payload: RequestHelper.fetchRequests(filterValue, finalPagination, persona, sortBy)\n  });\n};\n\nexport const fetchRequest = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST,\n  payload: RequestHelper.fetchRequestWithSubrequests(apiProps, persona)\n});\n\nexport const fetchRequestContent = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST_CONTENT,\n  payload: RequestHelper.fetchRequestContent(apiProps, persona)\n});\n\nexport const createRequestAction = (actionName, requestId, actionIn, intl) => ({\n  type: ActionTypes.CREATE_REQUEST_ACTION,\n  payload: RequestHelper.createRequestAction(requestId, actionIn),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(actionModalMessages.successTitle),\n        description: intl.formatMessage(actionModalMessages.fulfilledAction, { actionName })\n      },\n      rejected: {\n        variant: 'danger',\n        title: intl.formatMessage(actionModalMessages.failedTitle, { actionName }),\n        description: intl.formatMessage(actionModalMessages.failedAction, { actionName })\n      }\n    }\n  }\n});\n\nexport const sortRequests = (sortBy) => ({\n  type: ActionTypes.SORT_REQUESTS,\n  payload: sortBy\n});\n\nexport const setFilterValueRequests = (filterValue, type) => ({\n  type: ActionTypes.SET_FILTER_REQUESTS,\n  payload: { filterValue, type }\n});\n\nexport const clearFilterValueRequests = () => ({\n  type: ActionTypes.CLEAR_FILTER_REQUESTS\n});\n\nexport const resetRequestList = () => ({\n  type: ActionTypes.RESET_REQUEST_LIST\n});\n","const { defineMessages } = require('react-intl');\n\nconst actionModalMessages = defineMessages({\n  requestTitle: {\n    id: 'actionModal.requestTitle',\n    defaultMessage: 'Request #{id}'\n  },\n  requestActionTitle: {\n    id: 'actionModal.requestTitle',\n    defaultMessage: '{actionType} Request #{id}'\n  },\n  actionName: {\n    id: 'actionModal.actionName',\n    defaultMessage: '{actionType} Request'\n  },\n  fulfilledAction: {\n    id: 'actionModal.fullfiledAction',\n    defaultMessage: 'The {actionName} was successful.'\n  },\n  failedAction: {\n    id: 'actionModal.failedAction',\n    defaultMessage: 'The {actionName} action failed.'\n  },\n  successTitle: {\n    id: 'actionModal.successTitle',\n    defaultMessage: 'Success'\n  },\n  failedTitle: {\n    id: 'actionModal.failedTitle',\n    defaultMessage: '{actionName} error'\n  }\n});\n\nexport default actionModalMessages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Button } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nimport requestsMessages from '../../messages/requests.messages';\nimport { isRequestStateActive } from '../../helpers/shared/helpers';\n\nconst RequestActions = ({\n  denyLink,\n  approveLink,\n  commentLink,\n  request,\n  canApproveDeny,\n  canComment\n}) => {\n  const intl = useIntl();\n\n  const { id, state } = request;\n  const approveDenyAllowed = isRequestStateActive(state) && canApproveDeny;\n  const commentAllowed = isRequestStateActive(state) && canComment;\n\n  return (\n    <div style={ { display: 'flex' } }>\n      { approveDenyAllowed && (<React.Fragment>\n        <Link\n          to={ { pathname: approveLink, search: `request=${id}` } }\n          className=\"pf-u-mr-sm\"\n          id={ `approve-${request.id}` }\n        >\n          <Button\n            variant=\"primary\"\n            aria-label={ intl.formatMessage(requestsMessages.approveRequest) }\n          >\n            { intl.formatMessage(requestsMessages.approveTitle) }\n          </Button>\n        </Link>\n        <Link\n          to={ { pathname: denyLink, search: `request=${id}` } }\n          className=\"pf-u-mr-sm\"\n          id={ `deny-${request.id}` }\n        >\n          <Button\n            variant=\"danger\"\n            aria-label={ intl.formatMessage(requestsMessages.denyTitle) }\n          >\n            { intl.formatMessage(requestsMessages.denyTitle) }\n          </Button>\n        </Link>\n      </React.Fragment>) }\n      { commentAllowed && <Link\n        to={ { pathname: commentLink, search: `request=${id}` } }\n        id={ `comment-${request.id}` }\n      >\n        <Button\n          variant=\"secondary\"\n          aria-label={ intl.formatMessage(requestsMessages.commentTitle) }\n        >\n          { intl.formatMessage(requestsMessages.commentTitle) }\n        </Button>\n      </Link> }\n    </div>\n  );\n};\n\nRequestActions.propTypes = {\n  denyLink: PropTypes.string,\n  approveLink: PropTypes.string,\n  commentLink: PropTypes.string,\n  request: PropTypes.object.isRequired,\n  canApproveDeny: PropTypes.bool,\n  canComment: PropTypes.bool\n};\n\nRequestActions.defaultProps = {\n  canApproveDeny: true,\n  canComment: true\n};\n\nexport default RequestActions;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport requestsMessages from '../messages/requests.messages';\n\nexport const createRequestCommentSchema = (isDeny = false, intl) => ({\n  fields: [{\n    component: componentTypes.TEXTAREA,\n    name: 'comments',\n    isRequired: isDeny,\n    label: isDeny ? intl.formatMessage(requestsMessages.reasonTitle) : intl.formatMessage(requestsMessages.commentTitle),\n    ...(isDeny && { validate: [{ type: validatorTypes.REQUIRED }]})\n  }]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal } from '@patternfly/react-core';\nimport { createRequestAction } from '../../redux/actions/request-actions';\nimport { createRequestCommentSchema } from '../../forms/request-comment-form.schema';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\nimport { useIntl } from 'react-intl';\nimport actionModalMessages from '../../messages/action-modal.messages';\nimport requestsMessages from '../../messages/requests.messages';\n\nconst actionTypeToMsg = {\n  Approve: requestsMessages.approveTitle,\n  Deny: requestsMessages.denyTitle\n};\n\nconst ActionModal = ({\n  actionType,\n  createRequestAction,\n  closeUrl,\n  postMethod\n}) => {\n  const intl = useIntl();\n  const { push } = useHistory();\n  const [{ request: id }] = useQuery([ 'request' ]);\n\n  const onSubmit = (data) => {\n    const operationType = { 'Add Comment': 'memo', Approve: 'approve', Deny: 'deny' };\n    const actionName = actionType === 'Add Comment'\n      ? intl.formatMessage(requestsMessages.addCommentTitle)\n      : intl.formatMessage(actionModalMessages.actionName, { actionName: intl.formatMessage(actionTypeToMsg[actionType]) }) ;\n\n    return postMethod ?\n      createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data },\n        intl\n      ).then(() => postMethod()).then(() => push(closeUrl))\n      : createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data },\n        intl\n      ).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => push(closeUrl);\n\n  return (\n    <Modal\n      variant=\"large\"\n      title={ actionType === 'Add Comment'\n        ? intl.formatMessage(actionModalMessages.requestTitle, { id })\n        : intl.formatMessage(actionModalMessages.requestActionTitle, { id, actionType: intl.formatMessage(actionTypeToMsg[actionType]) })\n      }\n      isOpen\n      onClose={ onCancel }\n    >\n      <FormRenderer\n        schema={ createRequestCommentSchema(actionType === 'Deny', intl) }\n        onSubmit={ onSubmit }\n        onCancel={ onCancel }\n        formContainer=\"modal\"\n      />\n    </Modal>\n  );\n};\n\nActionModal.defaultProps = {\n  closeUrl: routes.requests.index\n};\n\nActionModal.propTypes = {\n  createRequestAction: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  actionType: PropTypes.string,\n  closeUrl: PropTypes.oneOfType([ PropTypes.string, PropTypes.shape({ patname: PropTypes.string, search: PropTypes.string }) ])\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  createRequestAction\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(ActionModal);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardBody, CardTitle,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\nimport commonMessages from '../../../messages/common.message';\nimport formMessages from '../../../messages/form.messages';\n\nconst RequestInfoBar = ({ request, requestContent }) => {\n  const intl = useIntl();\n\n  return (\n    <Stack hasGutter>\n      <StackItem key={ 'request-detail-panel' }>\n        <Card>\n          <CardBody>\n            <Stack hasGutter>\n              <StackItem key={ 'request-summary' }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  { intl.formatMessage(formMessages.summary) }\n                </Title>\n              </StackItem>\n              <StackItem key={ 'request-product' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>\n                    { intl.formatMessage(commonMessages.product) }\n                  </Text>\n                  <Text id='portfolio-item-name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.product : '' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-portfolio' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>\n                    { intl.formatMessage(commonMessages.portfolio) }\n                  </Text>\n                  <Text id='portfolio-name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.portfolio : '' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-platform' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>\n                    { intl.formatMessage(commonMessages.platform) }\n                  </Text>\n                  <Text id='source-name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.platform : ' ' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-requester' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>{ intl.formatMessage(requestsMessages.requesterColumn) }</Text>\n                  <Text id='requester_name' component={ TextVariants.p }>\n                    { request.requester_name }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-order' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>{ intl.formatMessage(requestsMessages.orderNumber) }</Text>\n                  <Text id='requester_name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.order_id : '' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n            </Stack>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem key={ 'request-parameters' }>\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h5\" size=\"lg\">{ intl.formatMessage(requestsMessages.parameters) }</Title>\n          </CardTitle>\n          <CardBody>\n            <Stack hasGutter>\n              { requestContent.params && Object.keys(requestContent.params).map(param => {\n                return ((requestContent.params[param]) &&\n                      <StackItem key={ `request-${requestContent.params[param]}` }>\n                        <TextContent>\n                          <Text key={ param } className={ 'font-14' }>\n                            { `${param}` }\n                          </Text>\n                          <Text id={ param } component={ TextVariants.p }>\n                            { `${requestContent.params[param]}` }\n                          </Text>\n                        </TextContent>\n                      </StackItem>\n                );\n              })\n              }\n            </Stack>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </Stack>\n  );};\n\nRequestInfoBar.propTypes = {\n  request: PropTypes.shape({\n    requester_name: PropTypes.string,\n    order_id: PropTypes.string\n  }).isRequired,\n  requestContent: PropTypes.object\n};\nexport default RequestInfoBar;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { timeAgo }  from '../../../helpers/shared/helpers';\nimport {\n  Stack,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport { CheckCircleIcon,\n  CommentIcon,\n  EnvelopeIcon,\n  OutlinedTimesCircleIcon,\n  AngleDoubleRightIcon,\n  OnRunningIcon,\n  ErrorCircleOIcon,\n  ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\nimport { useIntl } from 'react-intl';\nimport commonMessages from '../../../messages/common.message';\nimport requestsMessages from '../../../messages/requests.messages';\nimport { untranslatedMessage } from '../../../utilities/constants';\n\nconst operationInfo = {\n  memo: { displayName: requestsMessages.commentFrom, icon: <CommentIcon/> },\n  approve: { displayName: requestsMessages.approvedBy, icon: <CheckCircleIcon className=\"pf-u-mr-0 icon-success-fill\"/> },\n  deny: { displayName: requestsMessages.deniedBy, icon: <OutlinedTimesCircleIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  notify: { displayName: requestsMessages.notifiedBy, icon: <EnvelopeIcon/> },\n  skip: { displayName: requestsMessages.skippedBy, icon: <AngleDoubleRightIcon/> },\n  start: { displayName: requestsMessages.startedBy, icon: <OnRunningIcon/> },\n  cancel: { displayName: requestsMessages.canceledBy, icon: <ErrorCircleOIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  error: { displayName: requestsMessages.errorBy, icon: <ExclamationCircleIcon className=\"pf-u-mr-0 icon-danger-fill\"/> }\n};\n\nconst operationIcon = (operation) => operationInfo[operation] ? operationInfo[operation].icon : '';\nconst operationDisplayName = (operation) => operationInfo[operation] ? operationInfo[operation].displayName : untranslatedMessage();\n\nexport const ActionTranscript = ({ actionList }) => {\n  const intl = useIntl();\n\n  return actionList ? (\n    <Stack>\n      { actionList.map(actionItem =>\n        <div key={ `${actionItem.id}-action` }>\n          <TextContent>\n            <Text key={ `${actionItem.id}-action-created_at` }\n              className=\"pf-u-mb-0\" component={ TextVariants.small }>\n              { timeAgo(actionItem.created_at) }\n            </Text>\n            <Text key={ `${actionItem.id}-action-operation` }\n              className=\"pf-u-mb-md\">\n              { operationIcon(actionItem.operation) }&nbsp;\n              { intl.formatMessage(operationDisplayName(actionItem.operation), { by: actionItem.processed_by }) }\n            </Text>\n            { actionItem.comments && (<Text\n              key={ `${actionItem.id}-action-comments` }\n              className=\"pf-u-pt-0\"\n              component={ TextVariants.p }\n            >\n              { actionItem.comments }\n            </Text>) }\n          </TextContent>\n        </div>)\n      }\n    </Stack>\n  ) : <EmptyTable centered aria-label={ intl.formatMessage(commonMessages.noRecords) }/>;\n};\n\nActionTranscript.propTypes = {\n  actionList: PropTypes.array\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIsApprovalAdmin } from '../../../helpers/shared/helpers';\nimport { ActionTranscript } from './action-transcript';\n\nimport {\n  Stack,\n  StackItem,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListToggle,\n  DataListItemCells,\n  DataListContent,\n  TextVariants,\n  TextContent\n} from '@patternfly/react-core';\nimport UserContext from '../../../user-context';\nimport routes from '../../../constants/routes';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\nimport { untranslatedMessage } from '../../../utilities/constants';\nimport RequestActions from '../request-actions';\n\nexport const Request = ({ item, isExpanded, toggleExpand, indexpath }) => {\n  const { userRoles: userRoles } = useContext(UserContext);\n  const isApprovalAdmin = useIsApprovalAdmin(userRoles);\n  const intl = useIntl();\n\n  const checkCapability = (item, capability) => {\n    if (isApprovalAdmin) {\n      return true;\n    }\n\n    return item.metadata && item.metadata.user_capabilities && item.metadata.user_capabilities[capability];\n  };\n\n  return (\n    <DataListItem key={ `request-${item.id}` }\n      aria-labelledby={ `check-request-${item.id}` }\n      isExpanded={ isExpanded }>\n      <DataListItemRow>\n        <DataListToggle\n          onClick={ () => toggleExpand(`request-${item.id}`) }\n          isExpanded={ isExpanded }\n          id={ `request-${item.id}` }\n          aria-labelledby={ `request-${item.id} request-${item.id}` }\n          aria-label={ intl.formatMessage(requestsMessages.toogleDetailsFor) }\n        />\n        <DataListItemCells\n          dataListCells={ [\n            <DataListCell key={ item.id }>\n              <span id={ `${item.id}-name` }>{ item.group_name ? item.group_name : item.name }</span>\n            </DataListCell>,\n            <DataListCell key={ `${item.id}-state` }>\n              <span style={ { textTransform: 'capitalize' } } id={ `${item.id}-state` }>\n                { intl.formatMessage(requestsMessages[item.state] || untranslatedMessage(item.state)) }\n              </span>\n            </DataListCell>,\n            <DataListCell key={ `${item.id}-action` }>\n              <RequestActions\n                approveLink={ indexpath.approve }\n                denyLink={ indexpath.deny }\n                commentLink={ indexpath.addComment }\n                request={ item }\n                canApproveDeny={ checkCapability(item, 'approve') }\n                canComment={ checkCapability(item, 'memo') }\n              />\n            </DataListCell>\n          ] }/>\n      </DataListItemRow>\n      <DataListContent aria-label={ intl.formatMessage(requestsMessages.requestContentDetails) }\n        isHidden={ !isExpanded }>\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent component={ TextVariants.h6 }>\n              <ActionTranscript actionList={ item.actions }/>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </DataListContent>\n    </DataListItem>\n  );\n};\n\nRequest.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    state: PropTypes.string,\n    actions: PropTypes.array,\n    group_name: PropTypes.string.isRequired,\n    requestActions: PropTypes.shape({\n      data: PropTypes.array\n    }),\n    metadata: PropTypes.shape({\n      user_capabilities: PropTypes.object\n    })\n  }).isRequired,\n  isExpanded: PropTypes.bool.isRequired,\n  toggleExpand: PropTypes.func.isRequired,\n  indexpath: PropTypes.object\n};\n\nRequest.defaultProps = {\n  indexpath: routes.request\n};\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/cjs/PageHeader';\nimport { DataList } from '@patternfly/react-core';\nimport { Request }  from './request';\nimport { DataListLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\n\nconst RequestList = ({ isLoading, items, noItems, indexpath }) => {\n  const [ expanded, setExpanded ] = useState([]);\n  const intl = useIntl();\n\n  const toggleExpand = id => {\n    const index = expanded.indexOf(id);\n    const newExpanded =\n      index >= 0 ? [ ...expanded.slice(0, index), ...expanded.slice(index + 1, expanded.length) ] : [ ...expanded, id ];\n\n    setExpanded(newExpanded);\n  };\n\n  const isExpanded = key => expanded.includes(key);\n\n  return (\n    <Fragment>\n      <div>\n        { isLoading && (\n          <Fragment>\n            <PageHeader>\n              <PageHeaderTitle title={ noItems }/>\n            </PageHeader>\n            <DataListLoader/>\n          </Fragment>\n        ) }\n      </div>\n      { items.length > 0 && (\n        <DataList aria-label={ intl.formatMessage(requestsMessages.expandableDataList) }>\n          { items.map((item, idx) => (\n            <Request\n              key={ item.id }\n              item={ item }\n              idx={ idx }\n              isActive={ idx === 0 }\n              isExpanded={ isExpanded(`request-${item.id}`) }\n              toggleExpand={ toggleExpand }\n              indexpath={ indexpath }\n            />)) }\n        </DataList>)\n      }\n    </Fragment>\n  );\n};\n\nRequestList.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  noItems: PropTypes.string,\n  active_request: PropTypes.number,\n  indexpath: PropTypes.object\n};\n\nRequestList.defaultProps = {\n  items: []\n};\n\nexport default RequestList;\n\n","import React, { Fragment }  from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport RequestList from './request-list';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\n\nconst RequestTranscript = ({ request, indexpath }) => {\n  const intl = useIntl();\n\n  return (<Fragment>\n    <Title headingLevel=\"h5\" size=\"lg\" className=\"pf-u-pl-lg pf-u-pb-lg\">{ intl.formatMessage(requestsMessages.requestTranscript) }</Title>\n    <RequestList items={ request.requests && request.requests.length > 0 ? request.requests : [ request ] } indexpath={ indexpath } />\n  </Fragment>);\n};\n\nRequestTranscript.propTypes = {\n  request: PropTypes.shape({\n    content: PropTypes.object,\n    requests: PropTypes.array\n  }).isRequired,\n  indexpath: PropTypes.object\n};\n\nexport default RequestTranscript;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { Route, useLocation, Switch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport ActionModal from '../action-modal';\nimport RequestInfoBar from './request-info-bar';\nimport RequestTranscript from './request-transcript';\nimport { fetchRequest, fetchRequestContent } from '../../../redux/actions/request-actions';\nimport { RequestLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { TopToolbar, TopToolbarTitle } from '../../../presentational-components/shared/top-toolbar';\nimport UserContext from '../../../user-context';\nimport useQuery from '../../../utilities/use-query';\nimport { approvalPersona } from '../../../helpers/shared/helpers';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst requestState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst RequestDetail = ({ requestBreadcrumbs, indexpath }) => {\n  const [{ isFetching }, stateDispatch ] = useReducer(requestState, initialState);\n\n  const { selectedRequest, requestContent } = useSelector(\n    ({\n      requestReducer: {\n        requestContent: requestContent,\n        selectedRequest: selectedRequest\n      }\n    }) => ({ selectedRequest, requestContent })\n  );\n\n  const [{ request: id }] = useQuery([ 'request' ]);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { userRoles: userRoles } = useContext(UserContext);\n  const intl = useIntl();\n\n  useEffect(() => {\n    Promise.all([ dispatch(fetchRequest(id, approvalPersona(userRoles))), dispatch(fetchRequestContent(id, approvalPersona(userRoles))) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderRequestDetails = () => {\n    if (isFetching || !selectedRequest || Object.keys(selectedRequest).length === 0) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <RequestLoader />\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Fragment>\n          <GridItem md={ 4 } lg={ 3 } className=\"info-bar pf-u-p-0\">\n            <RequestInfoBar request={ selectedRequest } requestContent={ requestContent }/>\n          </GridItem>\n          <GridItem md={ 8 } lg={ 9 } className=\"detail-pane pf-u-p-lg\">\n            <RequestTranscript request={ selectedRequest } url={ location.url } indexpath={ indexpath }/>\n          </GridItem>\n        </Fragment>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Switch>\n        <Route exact path={ indexpath.addComment }>\n          <ActionModal actionType={ 'Add Comment' }\n            closeUrl={ { pathname: indexpath.index, search: `?request=${selectedRequest.id}` } }/>\n        </Route>\n        <Route exact path={ indexpath.approve } render={ props =>\n          <ActionModal { ...props } actionType={ 'Approve' }\n            closeUrl={ { pathname: indexpath.index, search: `?request=${selectedRequest.id}` } } /> } />\n        <Route exact path={ indexpath.deny } render={ props =>\n          <ActionModal { ...props } actionType={ 'Deny' }\n            closeUrl={ { pathname: indexpath.index, search: `?request=${selectedRequest.id}` } } /> } />\n      </Switch>\n      <TopToolbar\n        breadcrumbs={ requestBreadcrumbs }\n        paddingBottom={ true }\n      >\n        <TopToolbarTitle title={ intl.formatMessage(requestsMessages.requestTitle, { id }) } />\n      </TopToolbar>\n      <Section type=\"content\">\n        <Grid hasGutter>\n          { renderRequestDetails() }\n        </Grid>\n      </Section>\n    </Fragment>\n  );\n};\n\nRequestDetail.propTypes = {\n  requestBreadcrumbs: PropTypes.array,\n  indexpath: PropTypes.object\n};\n\nexport default RequestDetail;\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\");var _extends=require(\"./extends-7fa7e501.js\"),defineProperty=require(\"./defineProperty-cf06dcaa.js\"),objectWithoutProperties=require(\"./objectWithoutProperties-9e2b4e81.js\"),React=require(\"react\"),React__default=_interopDefault(React),PropTypes=_interopDefault(require(\"prop-types\")),classNames=_interopDefault(require(\"classnames\")),configContext=require(\"./configContext-2e7dee54.js\"),Title_js=require(\"@patternfly/react-core/dist/js/components/Title/Title.js\"),PageHeader=function PageHeader(e){var t=e.className,r=e.children,a=objectWithoutProperties._objectWithoutProperties(e,[\"className\",\"children\"]),s=classNames(t,\"pf-l-page-header\",\"pf-c-page-header\",\"pf-l-page__main-section\",\"pf-c-page__main-section\");return React__default.createElement(configContext.ThemeContext.Consumer,null,(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"light\",t=classNames(defineProperty._defineProperty({},\"pf-m-\".concat(e,\"-200\"),\"dark\"===e),defineProperty._defineProperty({},\"pf-m-light\",\"light\"===e));return React__default.createElement(\"section\",_extends._extends({},a,{className:\"\".concat(s,\" \").concat(t),\"widget-type\":\"InsightsPageHeader\"}),r)}))};PageHeader.propTypes={children:PropTypes.any.isRequired,className:PropTypes.string};var PageHeaderTitle=function PageHeaderTitle(e){var t=e.className,r=e.title,a=classNames(t);return React__default.createElement(Title_js.Title,{headingLevel:\"h1\",size:\"2xl\",className:a,\"widget-type\":\"InsightsPageHeaderTitle\"},\" \",r,\" \")};PageHeaderTitle.propTypes={title:PropTypes.node.isRequired,className:PropTypes.string},exports.PageHeader=PageHeader,exports.PageHeaderTitle=PageHeaderTitle;\n"],"sourceRoot":""}