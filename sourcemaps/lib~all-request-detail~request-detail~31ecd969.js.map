{"version":3,"sources":["webpack:///./src/smart-components/request/request-detail/request-info-bar.js","webpack:///./src/smart-components/request/request-detail/action-transcript.js","webpack:///./src/smart-components/request/request-detail/request.js","webpack:///./src/smart-components/request/request-detail/request-list.js","webpack:///./src/smart-components/request/request-detail/request-transcript.js","webpack:///./src/smart-components/request/request-detail/request-detail.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/PageHeader.js"],"names":["RequestInfoBar","request","requestContent","intl","useIntl","Stack","hasGutter","StackItem","key","Card","CardBody","Title","headingLevel","size","formatMessage","formMessages","summary","TextContent","Text","className","commonMessages","product","id","component","TextVariants","p","portfolio","platform","requestsMessages","requesterColumn","requester_name","orderNumber","order_id","CardTitle","parameters","params","Object","keys","map","param","propTypes","PropTypes","shape","string","isRequired","object","operationInfo","memo","displayName","commentFrom","icon","approve","approvedBy","deny","deniedBy","notify","notifiedBy","skip","skippedBy","start","startedBy","cancel","canceledBy","error","errorBy","ActionTranscript","actionList","actionItem","small","timeAgo","created_at","operation","untranslatedMessage","operationDisplayName","by","processed_by","comments","EmptyTable","centered","aria-label","noRecords","array","Request","item","isExpanded","toggleExpand","indexpath","userRoles","useContext","UserContext","isApprovalAdmin","useIsApprovalAdmin","checkCapability","capability","metadata","user_capabilities","DataListItem","aria-labelledby","DataListItemRow","DataListToggle","onClick","toogleDetailsFor","DataListItemCells","dataListCells","DataListCell","group_name","name","style","textTransform","state","approveLink","denyLink","commentLink","addComment","canApproveDeny","canComment","DataListContent","requestContentDetails","isHidden","h6","actions","requestActions","data","bool","func","defaultProps","routes","RequestList","isLoading","items","noItems","useState","expanded","setExpanded","index","indexOf","newExpanded","slice","length","PageHeader","title","DataList","expandableDataList","idx","isActive","includes","active_request","number","RequestTranscript","requestTranscript","requests","content","initialState","isFetching","requestState","action","type","payload","RequestDetail","requestBreadcrumbs","useReducer","stateDispatch","useSelector","requestReducer","selectedRequest","useQuery","location","useLocation","dispatch","useDispatch","useEffect","Promise","all","fetchRequest","approvalPersona","fetchRequestContent","then","exact","path","actionType","closeUrl","pathname","search","render","props","breadcrumbs","paddingBottom","requestTitle","Section","Grid","backgroundColor","minHeight","GridItem","md","lg","url","_interopDefault","e","default","defineProperty","exports","value","_extends","objectWithoutProperties","React__default","classNames","configContext","Title_js","t","r","children","a","_objectWithoutProperties","s","createElement","ThemeContext","Consumer","arguments","_defineProperty","concat","any","PageHeaderTitle","node"],"mappings":"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","file":"js/lib~all-request-detail~request-detail~31ecd969.2dcce6524df6d3f7e834.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardBody, CardTitle,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\nimport commonMessages from '../../../messages/common.message';\nimport formMessages from '../../../messages/form.messages';\n\nconst RequestInfoBar = ({ request, requestContent }) => {\n  const intl = useIntl();\n\n  return (\n    <Stack hasGutter>\n      <StackItem key={ 'request-detail-panel' }>\n        <Card>\n          <CardBody>\n            <Stack hasGutter>\n              <StackItem key={ 'request-summary' }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  { intl.formatMessage(formMessages.summary) }\n                </Title>\n              </StackItem>\n              <StackItem key={ 'request-product' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>\n                    { intl.formatMessage(commonMessages.product) }\n                  </Text>\n                  <Text id='portfolio-item-name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.product : '' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-portfolio' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>\n                    { intl.formatMessage(commonMessages.portfolio) }\n                  </Text>\n                  <Text id='portfolio-name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.portfolio : '' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-platform' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>\n                    { intl.formatMessage(commonMessages.platform) }\n                  </Text>\n                  <Text id='source-name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.platform : ' ' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-requester' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>{ intl.formatMessage(requestsMessages.requesterColumn) }</Text>\n                  <Text id='requester_name' component={ TextVariants.p }>\n                    { request.requester_name }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-order' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>{ intl.formatMessage(requestsMessages.orderNumber) }</Text>\n                  <Text id='requester_name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.order_id : '' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n            </Stack>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem key={ 'request-parameters' }>\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h5\" size=\"lg\">{ intl.formatMessage(requestsMessages.parameters) }</Title>\n          </CardTitle>\n          <CardBody>\n            <Stack hasGutter>\n              { requestContent.params && Object.keys(requestContent.params).map(param => {\n                return ((requestContent.params[param]) &&\n                      <StackItem key={ `request-${requestContent.params[param]}` }>\n                        <TextContent>\n                          <Text key={ param } className={ 'font-14' }>\n                            { `${param}` }\n                          </Text>\n                          <Text id={ param } component={ TextVariants.p }>\n                            { `${requestContent.params[param]}` }\n                          </Text>\n                        </TextContent>\n                      </StackItem>\n                );\n              })\n              }\n            </Stack>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </Stack>\n  );};\n\nRequestInfoBar.propTypes = {\n  request: PropTypes.shape({\n    requester_name: PropTypes.string,\n    order_id: PropTypes.string\n  }).isRequired,\n  requestContent: PropTypes.object\n};\nexport default RequestInfoBar;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { timeAgo }  from '../../../helpers/shared/helpers';\nimport {\n  Stack,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport { CheckCircleIcon,\n  CommentIcon,\n  EnvelopeIcon,\n  OutlinedTimesCircleIcon,\n  AngleDoubleRightIcon,\n  OnRunningIcon,\n  ErrorCircleOIcon,\n  ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\nimport { useIntl } from 'react-intl';\nimport commonMessages from '../../../messages/common.message';\nimport requestsMessages from '../../../messages/requests.messages';\nimport { untranslatedMessage } from '../../../utilities/constants';\n\nconst operationInfo = {\n  memo: { displayName: requestsMessages.commentFrom, icon: <CommentIcon/> },\n  approve: { displayName: requestsMessages.approvedBy, icon: <CheckCircleIcon className=\"pf-u-mr-0 icon-success-fill\"/> },\n  deny: { displayName: requestsMessages.deniedBy, icon: <OutlinedTimesCircleIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  notify: { displayName: requestsMessages.notifiedBy, icon: <EnvelopeIcon/> },\n  skip: { displayName: requestsMessages.skippedBy, icon: <AngleDoubleRightIcon/> },\n  start: { displayName: requestsMessages.startedBy, icon: <OnRunningIcon/> },\n  cancel: { displayName: requestsMessages.canceledBy, icon: <ErrorCircleOIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  error: { displayName: requestsMessages.errorBy, icon: <ExclamationCircleIcon className=\"pf-u-mr-0 icon-danger-fill\"/> }\n};\n\nconst operationIcon = (operation) => operationInfo[operation] ? operationInfo[operation].icon : '';\nconst operationDisplayName = (operation) => operationInfo[operation] ? operationInfo[operation].displayName : untranslatedMessage();\n\nexport const ActionTranscript = ({ actionList }) => {\n  const intl = useIntl();\n\n  return actionList ? (\n    <Stack>\n      { actionList.map(actionItem =>\n        <div key={ `${actionItem.id}-action` }>\n          <TextContent>\n            <Text key={ `${actionItem.id}-action-created_at` }\n              className=\"pf-u-mb-0\" component={ TextVariants.small }>\n              { timeAgo(actionItem.created_at) }\n            </Text>\n            <Text key={ `${actionItem.id}-action-operation` }\n              className=\"pf-u-mb-md\">\n              { operationIcon(actionItem.operation) }&nbsp;\n              { intl.formatMessage(operationDisplayName(actionItem.operation), { by: actionItem.processed_by }) }\n            </Text>\n            { actionItem.comments && (<Text\n              key={ `${actionItem.id}-action-comments` }\n              className=\"pf-u-pt-0\"\n              component={ TextVariants.p }\n            >\n              { actionItem.comments }\n            </Text>) }\n          </TextContent>\n        </div>)\n      }\n    </Stack>\n  ) : <EmptyTable centered aria-label={ intl.formatMessage(commonMessages.noRecords) }/>;\n};\n\nActionTranscript.propTypes = {\n  actionList: PropTypes.array\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIsApprovalAdmin } from '../../../helpers/shared/helpers';\nimport { ActionTranscript } from './action-transcript';\n\nimport {\n  Stack,\n  StackItem,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListToggle,\n  DataListItemCells,\n  DataListContent,\n  TextVariants,\n  TextContent\n} from '@patternfly/react-core';\nimport UserContext from '../../../user-context';\nimport routes from '../../../constants/routes';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\nimport { untranslatedMessage } from '../../../utilities/constants';\nimport RequestActions from '../request-actions';\n\nexport const Request = ({ item, isExpanded, toggleExpand, indexpath }) => {\n  const { userRoles: userRoles } = useContext(UserContext);\n  const isApprovalAdmin = useIsApprovalAdmin(userRoles);\n  const intl = useIntl();\n\n  const checkCapability = (item, capability) => {\n    if (isApprovalAdmin) {\n      return true;\n    }\n\n    return item.metadata && item.metadata.user_capabilities && item.metadata.user_capabilities[capability];\n  };\n\n  return (\n    <DataListItem key={ `request-${item.id}` }\n      aria-labelledby={ `check-request-${item.id}` }\n      isExpanded={ isExpanded }>\n      <DataListItemRow>\n        <DataListToggle\n          onClick={ () => toggleExpand(`request-${item.id}`) }\n          isExpanded={ isExpanded }\n          id={ `request-${item.id}` }\n          aria-labelledby={ `request-${item.id} request-${item.id}` }\n          aria-label={ intl.formatMessage(requestsMessages.toogleDetailsFor) }\n        />\n        <DataListItemCells\n          dataListCells={ [\n            <DataListCell key={ item.id }>\n              <span id={ `${item.id}-name` }>{ item.group_name ? item.group_name : item.name }</span>\n            </DataListCell>,\n            <DataListCell key={ `${item.id}-state` }>\n              <span style={ { textTransform: 'capitalize' } } id={ `${item.id}-state` }>\n                { intl.formatMessage(requestsMessages[item.state] || untranslatedMessage(item.state)) }\n              </span>\n            </DataListCell>,\n            <DataListCell key={ `${item.id}-action` }>\n              <RequestActions\n                approveLink={ indexpath.approve }\n                denyLink={ indexpath.deny }\n                commentLink={ indexpath.addComment }\n                request={ item }\n                canApproveDeny={ checkCapability(item, 'approve') }\n                canComment={ checkCapability(item, 'memo') }\n              />\n            </DataListCell>\n          ] }/>\n      </DataListItemRow>\n      <DataListContent aria-label={ intl.formatMessage(requestsMessages.requestContentDetails) }\n        isHidden={ !isExpanded }>\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent component={ TextVariants.h6 }>\n              <ActionTranscript actionList={ item.actions }/>\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </DataListContent>\n    </DataListItem>\n  );\n};\n\nRequest.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    state: PropTypes.string,\n    actions: PropTypes.array,\n    group_name: PropTypes.string.isRequired,\n    requestActions: PropTypes.shape({\n      data: PropTypes.array\n    }),\n    metadata: PropTypes.shape({\n      user_capabilities: PropTypes.object\n    })\n  }).isRequired,\n  isExpanded: PropTypes.bool.isRequired,\n  toggleExpand: PropTypes.func.isRequired,\n  indexpath: PropTypes.object\n};\n\nRequest.defaultProps = {\n  indexpath: routes.request\n};\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/cjs/PageHeader';\nimport { DataList } from '@patternfly/react-core';\nimport { Request }  from './request';\nimport { DataListLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\n\nconst RequestList = ({ isLoading, items, noItems, indexpath }) => {\n  const [ expanded, setExpanded ] = useState([]);\n  const intl = useIntl();\n\n  const toggleExpand = id => {\n    const index = expanded.indexOf(id);\n    const newExpanded =\n      index >= 0 ? [ ...expanded.slice(0, index), ...expanded.slice(index + 1, expanded.length) ] : [ ...expanded, id ];\n\n    setExpanded(newExpanded);\n  };\n\n  const isExpanded = key => expanded.includes(key);\n\n  return (\n    <Fragment>\n      <div>\n        { isLoading && (\n          <Fragment>\n            <PageHeader>\n              <PageHeaderTitle title={ noItems }/>\n            </PageHeader>\n            <DataListLoader/>\n          </Fragment>\n        ) }\n      </div>\n      { items.length > 0 && (\n        <DataList aria-label={ intl.formatMessage(requestsMessages.expandableDataList) }>\n          { items.map((item, idx) => (\n            <Request\n              key={ item.id }\n              item={ item }\n              idx={ idx }\n              isActive={ idx === 0 }\n              isExpanded={ isExpanded(`request-${item.id}`) }\n              toggleExpand={ toggleExpand }\n              indexpath={ indexpath }\n            />)) }\n        </DataList>)\n      }\n    </Fragment>\n  );\n};\n\nRequestList.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  noItems: PropTypes.string,\n  active_request: PropTypes.number,\n  indexpath: PropTypes.object\n};\n\nRequestList.defaultProps = {\n  items: []\n};\n\nexport default RequestList;\n\n","import React, { Fragment }  from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport RequestList from './request-list';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\n\nconst RequestTranscript = ({ request, indexpath }) => {\n  const intl = useIntl();\n\n  return (<Fragment>\n    <Title headingLevel=\"h5\" size=\"lg\" className=\"pf-u-pl-lg pf-u-pb-lg\">{ intl.formatMessage(requestsMessages.requestTranscript) }</Title>\n    <RequestList items={ request.requests && request.requests.length > 0 ? request.requests : [ request ] } indexpath={ indexpath } />\n  </Fragment>);\n};\n\nRequestTranscript.propTypes = {\n  request: PropTypes.shape({\n    content: PropTypes.object,\n    requests: PropTypes.array\n  }).isRequired,\n  indexpath: PropTypes.object\n};\n\nexport default RequestTranscript;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { Route, useLocation, Switch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport ActionModal from '../action-modal';\nimport RequestInfoBar from './request-info-bar';\nimport RequestTranscript from './request-transcript';\nimport { fetchRequest, fetchRequestContent } from '../../../redux/actions/request-actions';\nimport { RequestLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { TopToolbar, TopToolbarTitle } from '../../../presentational-components/shared/top-toolbar';\nimport UserContext from '../../../user-context';\nimport useQuery from '../../../utilities/use-query';\nimport { approvalPersona } from '../../../helpers/shared/helpers';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst requestState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst RequestDetail = ({ requestBreadcrumbs, indexpath }) => {\n  const [{ isFetching }, stateDispatch ] = useReducer(requestState, initialState);\n\n  const { selectedRequest, requestContent } = useSelector(\n    ({\n      requestReducer: {\n        requestContent: requestContent,\n        selectedRequest: selectedRequest\n      }\n    }) => ({ selectedRequest, requestContent })\n  );\n\n  const [{ request: id }] = useQuery([ 'request' ]);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { userRoles: userRoles } = useContext(UserContext);\n  const intl = useIntl();\n\n  useEffect(() => {\n    Promise.all([ dispatch(fetchRequest(id, approvalPersona(userRoles))), dispatch(fetchRequestContent(id, approvalPersona(userRoles))) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderRequestDetails = () => {\n    if (isFetching || !selectedRequest || Object.keys(selectedRequest).length === 0) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <RequestLoader />\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Fragment>\n          <GridItem md={ 4 } lg={ 3 } className=\"info-bar pf-u-p-0\">\n            <RequestInfoBar request={ selectedRequest } requestContent={ requestContent }/>\n          </GridItem>\n          <GridItem md={ 8 } lg={ 9 } className=\"detail-pane pf-u-p-lg\">\n            <RequestTranscript request={ selectedRequest } url={ location.url } indexpath={ indexpath }/>\n          </GridItem>\n        </Fragment>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Switch>\n        <Route exact path={ indexpath.addComment }>\n          <ActionModal actionType={ 'Add Comment' }\n            closeUrl={ { pathname: indexpath.index, search: `?request=${selectedRequest.id}` } }/>\n        </Route>\n        <Route exact path={ indexpath.approve } render={ props =>\n          <ActionModal { ...props } actionType={ 'Approve' }\n            closeUrl={ { pathname: indexpath.index, search: `?request=${selectedRequest.id}` } } /> } />\n        <Route exact path={ indexpath.deny } render={ props =>\n          <ActionModal { ...props } actionType={ 'Deny' }\n            closeUrl={ { pathname: indexpath.index, search: `?request=${selectedRequest.id}` } } /> } />\n      </Switch>\n      <TopToolbar\n        breadcrumbs={ requestBreadcrumbs }\n        paddingBottom={ true }\n      >\n        <TopToolbarTitle title={ intl.formatMessage(requestsMessages.requestTitle, { id }) } />\n      </TopToolbar>\n      <Section type=\"content\">\n        <Grid hasGutter>\n          { renderRequestDetails() }\n        </Grid>\n      </Section>\n    </Fragment>\n  );\n};\n\nRequestDetail.propTypes = {\n  requestBreadcrumbs: PropTypes.array,\n  indexpath: PropTypes.object\n};\n\nexport default RequestDetail;\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\");var _extends=require(\"./extends-7fa7e501.js\"),defineProperty=require(\"./defineProperty-cf06dcaa.js\"),objectWithoutProperties=require(\"./objectWithoutProperties-9e2b4e81.js\"),React=require(\"react\"),React__default=_interopDefault(React),PropTypes=_interopDefault(require(\"prop-types\")),classNames=_interopDefault(require(\"classnames\")),configContext=require(\"./configContext-2e7dee54.js\"),Title_js=require(\"@patternfly/react-core/dist/js/components/Title/Title.js\"),PageHeader=function PageHeader(e){var t=e.className,r=e.children,a=objectWithoutProperties._objectWithoutProperties(e,[\"className\",\"children\"]),s=classNames(t,\"pf-l-page-header\",\"pf-c-page-header\",\"pf-l-page__main-section\",\"pf-c-page__main-section\");return React__default.createElement(configContext.ThemeContext.Consumer,null,(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"light\",t=classNames(defineProperty._defineProperty({},\"pf-m-\".concat(e,\"-200\"),\"dark\"===e),defineProperty._defineProperty({},\"pf-m-light\",\"light\"===e));return React__default.createElement(\"section\",_extends._extends({},a,{className:\"\".concat(s,\" \").concat(t),\"widget-type\":\"InsightsPageHeader\"}),r)}))};PageHeader.propTypes={children:PropTypes.any.isRequired,className:PropTypes.string};var PageHeaderTitle=function PageHeaderTitle(e){var t=e.className,r=e.title,a=classNames(t);return React__default.createElement(Title_js.Title,{headingLevel:\"h1\",size:\"2xl\",className:a,\"widget-type\":\"InsightsPageHeaderTitle\"},\" \",r,\" \")};PageHeaderTitle.propTypes={title:PropTypes.node.isRequired,className:PropTypes.string},exports.PageHeader=PageHeader,exports.PageHeaderTitle=PageHeaderTitle;\n"],"sourceRoot":""}