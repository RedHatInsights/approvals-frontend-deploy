{"version":3,"sources":["webpack:///./src/redux/actions/request-actions.js","webpack:///./src/messages/action-modal.messages.js","webpack:///./src/helpers/request/request-helper.js","webpack:///./src/forms/request-comment-form.schema.js","webpack:///./src/smart-components/request/action-modal.js","webpack:///./src/smart-components/request/request-detail/request-info-bar.js","webpack:///./src/smart-components/request/request-detail/action-transcript.js","webpack:///./src/smart-components/request/request-detail/request.js","webpack:///./src/smart-components/request/request-detail/request-list.js","webpack:///./src/smart-components/request/request-detail/request-transcript.js","webpack:///./src/smart-components/request/request-detail/request-detail.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/PageHeader.js"],"names":["fetchRequests","persona","pagination","dispatch","getState","requestReducer","sortBy","requests","filterValue","finalPagination","defaultSettings","meta","limit","offset","type","ActionTypes","payload","RequestHelper","fetchRequest","apiProps","fetchRequestContent","createRequestAction","actionName","requestId","actionIn","intl","notifications","fulfilled","variant","title","formatMessage","actionModalMessages","successTitle","description","fulfilledAction","rejected","failedTitle","failedAction","expandRequest","id","sortRequests","setFilterValueRequests","clearFilterValueRequests","resetRequestList","defineMessages","require","requestTitle","defaultMessage","requestActionTitle","actionApi","getActionApi","graphqlInstance","getGraphqlInstance","sortPropertiesMapper","property","opened","requester","status","filterQuery","query","name","push","forEach","state","decision","dec","join","filter","undefined","paginationQuery","Math","max","sortQuery","direction","fetchUrl","APPROVAL_API_BASE","fetchHeaders","getAxiosInstance","method","url","headers","fetchRequestTranscript","parent_id","APPROVAL_APPROVER_PERSONA","APPROVAL_REQUESTER_PERSONA","data","then","fetchRequestCapabilities","isParent","fetchRequestWithSubrequests","a","requestData","length","number_of_children","result","map","request","find","item","metadata","createAction","createRequestCommentSchema","isDeny","fields","component","componentTypes","TEXTAREA","isRequired","label","requestsMessages","reasonTitle","commentTitle","validate","validatorTypes","REQUIRED","actionTypeToMsg","Approve","approveTitle","Deny","denyTitle","ActionModal","actionType","closeUrl","postMethod","useIntl","useHistory","useQuery","onCancel","Modal","isOpen","onClose","schema","onSubmit","operationType","addCommentTitle","operation","formContainer","defaultProps","routes","index","propTypes","PropTypes","func","string","oneOfType","shape","patname","search","connect","bindActionCreators","RequestInfoBar","requestContent","Stack","hasGutter","StackItem","key","Card","CardBody","Title","headingLevel","size","formMessages","summary","TextContent","Text","className","commonMessages","product","TextVariants","p","portfolio","platform","requesterColumn","requester_name","orderNumber","order_id","CardTitle","parameters","params","Object","keys","param","object","operationInfo","memo","displayName","commentFrom","icon","approve","approvedBy","deny","deniedBy","notify","notifiedBy","skip","skippedBy","start","startedBy","cancel","canceledBy","error","errorBy","ActionTranscript","actionList","actions","actionItem","small","timeAgo","created_at","untranslatedMessage","operationDisplayName","by","processed_by","comments","EmptyTable","centered","aria-label","noRecords","Request","isExpanded","toggleExpand","indexpath","useState","isKebabOpen","setIsKebabOpen","userRoles","useContext","UserContext","isApprovalAdmin","useIsApprovalAdmin","onKebabToggle","onKebabSelect","checkCapability","capability","user_capabilities","DataListItem","aria-labelledby","DataListItemRow","DataListToggle","onClick","toogleDetailsFor","DataListItemCells","dataListCells","DataListCell","group_name","style","textTransform","Level","LevelItem","isRequestStateActive","to","pathname","Button","approveRequest","denyRequest","Dropdown","position","DropdownPosition","right","onSelect","toggle","KebabToggle","onToggle","dropdownItems","DropdownItem","addComment","isPlain","DataListContent","requestContentDetails","isHidden","h6","renderActionList","requestActions","array","bool","RequestList","isLoading","items","noItems","expanded","setExpanded","indexOf","newExpanded","slice","PageHeader","DataList","expandableDataList","idx","isActive","includes","active_request","number","RequestTranscript","requestTranscript","content","initialState","isFetching","requestState","action","RequestDetail","requestBreadcrumbs","useReducer","stateDispatch","useSelector","selectedRequest","location","useLocation","useDispatch","useEffect","Promise","all","approvalPersona","exact","path","render","props","breadcrumbs","paddingBottom","Section","Grid","backgroundColor","minHeight","GridItem","md","lg","_interopDefault","e","default","defineProperty","exports","value","_extends","objectWithoutProperties","React__default","classNames","configContext","Title_js","t","r","children","_objectWithoutProperties","s","createElement","ThemeContext","Consumer","arguments","_defineProperty","concat","any","PageHeaderTitle","node"],"mappings":"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","file":"js/lib~all-request-detail~request-detail~31ecd969.6c22f728d38ba616ae9f.js","sourcesContent":["import * as ActionTypes from '../action-types';\nimport * as RequestHelper from '../../helpers/request/request-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport actionModalMessages from '../../messages/action-modal.messages';\n\nexport const fetchRequests = (persona, pagination) => (dispatch, getState) => {\n  const { sortBy, requests, filterValue } = getState().requestReducer;\n\n  let finalPagination = pagination || defaultSettings;\n\n  if (!pagination && requests) {\n    const { limit, offset } = requests.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_REQUESTS,\n    payload: RequestHelper.fetchRequests(filterValue, finalPagination, persona, sortBy)\n  });\n};\n\nexport const fetchRequest = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST,\n  payload: RequestHelper.fetchRequestWithSubrequests(apiProps, persona)\n});\n\nexport const fetchRequestContent = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST_CONTENT,\n  payload: RequestHelper.fetchRequestContent(apiProps, persona)\n});\n\nexport const createRequestAction = (actionName, requestId, actionIn, intl) => ({\n  type: ActionTypes.CREATE_REQUEST_ACTION,\n  payload: RequestHelper.createRequestAction(requestId, actionIn),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(actionModalMessages.successTitle),\n        description: intl.formatMessage(actionModalMessages.fulfilledAction, { actionName })\n      },\n      rejected: {\n        variant: 'danger',\n        title: intl.formatMessage(actionModalMessages.failedTitle, { actionName }),\n        description: intl.formatMessage(actionModalMessages.failedAction, { actionName })\n      }\n    }\n  }\n});\n\nexport const expandRequest = (id) => ({\n  type: ActionTypes.EXPAND_REQUEST,\n  payload: id\n});\n\nexport const sortRequests = (sortBy) => ({\n  type: ActionTypes.SORT_REQUESTS,\n  payload: sortBy\n});\n\nexport const setFilterValueRequests = (filterValue, type) => ({\n  type: ActionTypes.SET_FILTER_REQUESTS,\n  payload: { filterValue, type }\n});\n\nexport const clearFilterValueRequests = () => ({\n  type: ActionTypes.CLEAR_FILTER_REQUESTS\n});\n\nexport const resetRequestList = () => ({\n  type: ActionTypes.RESET_REQUEST_LIST\n});\n","const { defineMessages } = require('react-intl');\n\nconst actionModalMessages = defineMessages({\n  requestTitle: {\n    id: 'actionModal.requestTitle',\n    defaultMessage: 'Request #{id}'\n  },\n  requestActionTitle: {\n    id: 'actionModal.requestTitle',\n    defaultMessage: '{actionType} Request #{id}'\n  },\n  actionName: {\n    id: 'actionModal.actionName',\n    defaultMessage: '{actionType} Request'\n  },\n  fulfilledAction: {\n    id: 'actionModal.fullfiledAction',\n    defaultMessage: 'The {actionName} was successful.'\n  },\n  failedAction: {\n    id: 'actionModal.failedAction',\n    defaultMessage: 'The {actionName} action failed.'\n  },\n  successTitle: {\n    id: 'actionModal.successTitle',\n    defaultMessage: 'Success'\n  },\n  failedTitle: {\n    id: 'actionModal.failedTitle',\n    defaultMessage: '{actionName} error'\n  }\n});\n\nexport default actionModalMessages;\n","import { getActionApi, getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_REQUESTER_PERSONA, APPROVAL_APPROVER_PERSONA } from '../shared/helpers';\n\nconst actionApi = getActionApi();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sortPropertiesMapper = (property) => ({\n  'request-id': 'id',\n  opened: 'created_at',\n  requester: 'requester_name',\n  status: 'state'\n}[property] || property\n);\n\nconst filterQuery = (filterValue) => {\n  const query = [];\n  if (filterValue.name) {\n    query.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.requester) {\n    query.push(`filter[requester_name][contains_i]=${filterValue.requester}`);\n  }\n\n  if (filterValue.status) {\n    filterValue.status.forEach(state => {\n      query.push(`filter[state][eq][]=${state}`);\n    });\n  }\n\n  if (filterValue.decision) {\n    filterValue.decision.forEach(dec => {\n      query.push(`filter[decision][eq][]=${dec}`);\n    });\n  }\n\n  return query.join('&');\n};\n\nexport function fetchRequests(filter = {}, pagination = defaultSettings, persona = undefined, sortBy) {\n  const paginationQuery = `&limit=${Math.max(pagination.limit, 10)}&offset=${pagination.offset}`;\n  const sortQuery = `&sort_by=${sortPropertiesMapper(sortBy.property)}:${sortBy.direction}`;\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/?${filterQuery(filter)}${paginationQuery}${sortQuery}`;\n  const fetchHeaders = persona ? { 'x-rh-persona': persona } : undefined;\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n}\n\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    id\n    name\n    number_of_children\n    decision\n    description\n    group_name\n    number_of_finished_children\n    state\n    actions {\n      id\n      operation\n      comments\n      created_at\n      processed_by\n    }\n    requests {\n      id\n      name\n      number_of_children\n      decision\n      description\n      group_name\n      number_of_finished_children\n      state\n      workflow_id\n      parent_id\n      actions {\n        id\n        operation\n        comments\n        created_at\n        processed_by\n      }\n    }\n  }\n}`;\n\nexport const fetchRequestTranscript = (requestId, persona) => {\n  const fetchHeaders = (persona && persona !== APPROVAL_APPROVER_PERSONA) ? { 'x-rh-persona': persona }\n    : { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return graphqlInstance({ method: 'post', url: `${APPROVAL_API_BASE}/graphql`,\n    headers: fetchHeaders, data: { query: requestTranscriptQuery(requestId) }})\n  .then(({ data: { requests }}) => requests);\n};\n\nexport const fetchRequestContent = (id) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}/content`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport const fetchRequestCapabilities = (id, isParent) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}${isParent ? '/requests' : ''}`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport async function fetchRequestWithSubrequests(id, persona) {\n  const requestData = await fetchRequestTranscript(id, persona);\n\n  if (!requestData || requestData.length === 0) { return {}; }\n\n  if (persona === APPROVAL_APPROVER_PERSONA) {\n    if (requestData && requestData.length > 0 && requestData[0].number_of_children > 0) {\n      const result = await fetchRequestCapabilities(id, true);\n\n      if (result && result.data) {\n        requestData[0].requests = requestData[0].requests.map(request => {\n          return {\n            ...result.data.find((item) => (item.id === request.id) && item.metadata),\n            ...request\n          };\n        });\n      }\n    }\n    else {\n      const request = await fetchRequestCapabilities(id, false);\n      if (request) {\n        requestData[0] = { ...requestData[0], metadata: request.metadata };\n      }\n    }\n  }\n\n  return requestData[0];\n}\n\nexport const createRequestAction = (requestId, actionIn) => actionApi.createAction(requestId, actionIn);\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport requestsMessages from '../messages/requests.messages';\n\nexport const createRequestCommentSchema = (isDeny = false, intl) => ({\n  fields: [{\n    component: componentTypes.TEXTAREA,\n    name: 'comments',\n    isRequired: isDeny,\n    label: isDeny ? intl.formatMessage(requestsMessages.reasonTitle) : intl.formatMessage(requestsMessages.commentTitle),\n    ...(isDeny && { validate: [{ type: validatorTypes.REQUIRED }]})\n  }]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal } from '@patternfly/react-core';\nimport { createRequestAction } from '../../redux/actions/request-actions';\nimport { createRequestCommentSchema } from '../../forms/request-comment-form.schema';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\nimport { useIntl } from 'react-intl';\nimport actionModalMessages from '../../messages/action-modal.messages';\nimport requestsMessages from '../../messages/requests.messages';\n\nconst actionTypeToMsg = {\n  Approve: requestsMessages.approveTitle,\n  Deny: requestsMessages.denyTitle\n};\n\nconst ActionModal = ({\n  actionType,\n  createRequestAction,\n  closeUrl,\n  postMethod\n}) => {\n  const intl = useIntl();\n  const { push } = useHistory();\n  const [{ request: id }] = useQuery([ 'request' ]);\n\n  const onSubmit = (data) => {\n    const operationType = { 'Add Comment': 'memo', Approve: 'approve', Deny: 'deny' };\n    const actionName = actionType === 'Add Comment'\n      ? intl.formatMessage(requestsMessages.addCommentTitle)\n      : intl.formatMessage(actionModalMessages.actionName, { actionName: intl.formatMessage(actionTypeToMsg[actionType]) }) ;\n\n    return postMethod ?\n      createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data },\n        intl\n      ).then(() => postMethod()).then(() => push(closeUrl))\n      : createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data },\n        intl\n      ).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => push(closeUrl);\n\n  return (\n    <Modal\n      variant=\"large\"\n      title={ actionType === 'Add Comment'\n        ? intl.formatMessage(actionModalMessages.requestTitle, { id })\n        : intl.formatMessage(actionModalMessages.requestActionTitle, { id, actionType: intl.formatMessage(actionTypeToMsg[actionType]) })\n      }\n      isOpen\n      onClose={ onCancel }\n    >\n      <FormRenderer\n        schema={ createRequestCommentSchema(actionType === 'Deny', intl) }\n        onSubmit={ onSubmit }\n        onCancel={ onCancel }\n        formContainer=\"modal\"\n      />\n    </Modal>\n  );\n};\n\nActionModal.defaultProps = {\n  closeUrl: routes.requests.index\n};\n\nActionModal.propTypes = {\n  createRequestAction: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  actionType: PropTypes.string,\n  closeUrl: PropTypes.oneOfType([ PropTypes.string, PropTypes.shape({ patname: PropTypes.string, search: PropTypes.string }) ])\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  createRequestAction\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(ActionModal);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardBody, CardTitle,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\nimport commonMessages from '../../../messages/common.message';\nimport formMessages from '../../../messages/form.messages';\n\nconst RequestInfoBar = ({ request, requestContent }) => {\n  const intl = useIntl();\n\n  return (\n    <Stack hasGutter>\n      <StackItem key={ 'request-detail-panel' }>\n        <Card>\n          <CardBody>\n            <Stack hasGutter>\n              <StackItem key={ 'request-summary' }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  { intl.formatMessage(formMessages.summary) }\n                </Title>\n              </StackItem>\n              <StackItem key={ 'request-product' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>\n                    { intl.formatMessage(commonMessages.product) }\n                  </Text>\n                  <Text id='portfolio-item-name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.product : '' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-portfolio' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>\n                    { intl.formatMessage(commonMessages.portfolio) }\n                  </Text>\n                  <Text id='portfolio-name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.portfolio : '' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-platform' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>\n                    { intl.formatMessage(commonMessages.platform) }\n                  </Text>\n                  <Text id='source-name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.platform : ' ' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-requester' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>{ intl.formatMessage(requestsMessages.requesterColumn) }</Text>\n                  <Text id='requester_name' component={ TextVariants.p }>\n                    { request.requester_name }\n                  </Text>\n                </TextContent>\n              </StackItem>\n              <StackItem key={ 'request-order' }>\n                <TextContent>\n                  <Text className={ 'font-14' }>{ intl.formatMessage(requestsMessages.orderNumber) }</Text>\n                  <Text id='requester_name' component={ TextVariants.p }>\n                    { requestContent ? requestContent.order_id : '' }\n                  </Text>\n                </TextContent>\n              </StackItem>\n            </Stack>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem key={ 'request-parameters' }>\n        <Card>\n          <CardTitle>\n            <Title headingLevel=\"h5\" size=\"lg\">{ intl.formatMessage(requestsMessages.parameters) }</Title>\n          </CardTitle>\n          <CardBody>\n            <Stack hasGutter>\n              { requestContent.params && Object.keys(requestContent.params).map(param => {\n                return ((requestContent.params[param]) &&\n                      <StackItem key={ `request-${requestContent.params[param]}` }>\n                        <TextContent>\n                          <Text key={ param } className={ 'font-14' }>\n                            { `${param}` }\n                          </Text>\n                          <Text id={ param } component={ TextVariants.p }>\n                            { `${requestContent.params[param]}` }\n                          </Text>\n                        </TextContent>\n                      </StackItem>\n                );\n              })\n              }\n            </Stack>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </Stack>\n  );};\n\nRequestInfoBar.propTypes = {\n  request: PropTypes.shape({\n    requester_name: PropTypes.string,\n    order_id: PropTypes.string\n  }).isRequired,\n  requestContent: PropTypes.object\n};\nexport default RequestInfoBar;\n\n","import React from 'react';\nimport { timeAgo }  from '../../../helpers/shared/helpers';\nimport {\n  Stack,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport { CheckCircleIcon,\n  CommentIcon,\n  EnvelopeIcon,\n  OutlinedTimesCircleIcon,\n  AngleDoubleRightIcon,\n  OnRunningIcon,\n  ErrorCircleOIcon,\n  ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\nimport { useIntl } from 'react-intl';\nimport commonMessages from '../../../messages/common.message';\nimport requestsMessages from '../../../messages/requests.messages';\nimport { untranslatedMessage } from '../../../utilities/constants';\n\nconst operationInfo = {\n  memo: { displayName: requestsMessages.commentFrom, icon: <CommentIcon/> },\n  approve: { displayName: requestsMessages.approvedBy, icon: <CheckCircleIcon className=\"pf-u-mr-0 icon-success-fill\"/> },\n  deny: { displayName: requestsMessages.deniedBy, icon: <OutlinedTimesCircleIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  notify: { displayName: requestsMessages.notifiedBy, icon: <EnvelopeIcon/> },\n  skip: { displayName: requestsMessages.skippedBy, icon: <AngleDoubleRightIcon/> },\n  start: { displayName: requestsMessages.startedBy, icon: <OnRunningIcon/> },\n  cancel: { displayName: requestsMessages.canceledBy, icon: <ErrorCircleOIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  error: { displayName: requestsMessages.errorBy, icon: <ExclamationCircleIcon className=\"pf-u-mr-0 icon-danger-fill\"/> }\n};\n\nconst operationIcon = (operation) => operationInfo[operation] ? operationInfo[operation].icon : '';\nconst operationDisplayName = (operation) => operationInfo[operation] ? operationInfo[operation].displayName : untranslatedMessage();\n\nexport const ActionTranscript = actionList => {\n  const intl = useIntl();\n  const actions = actionList.actionList;\n  return actions ? (\n    <Stack>\n      { actions.map(actionItem =>\n        <div key={ `${actionItem.id}-action` }>\n          <TextContent><Text key={ `${actionItem.id}-action-created_at` }\n            className=\"pf-u-mb-0\" component={ TextVariants.small }>\n            { timeAgo(actionItem.created_at) }\n          </Text>\n          <Text key={ `${actionItem.id}-action-operation` }\n            className=\"pf-u-mb-md\">\n            { operationIcon(actionItem.operation) }&nbsp;\n            { intl.formatMessage(operationDisplayName(actionItem.operation), { by: actionItem.processed_by }) }\n          </Text>\n          { actionItem.comments && <Text key={ `${actionItem.id}-action-comments` }\n            className=\"pf-u-pt-0\" component={ TextVariants.p }>\n            { `${actionItem.comments}` }\n          </Text> } </TextContent>\n        </div>)\n      }\n    </Stack>\n  ) : <EmptyTable centered aria-label={ intl.formatMessage(commonMessages.noRecords) }/>;\n};\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useIsApprovalAdmin, isRequestStateActive } from '../../../helpers/shared/helpers';\nimport { ActionTranscript } from './action-transcript';\n\nimport {\n  Stack,\n  StackItem,\n  Button,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListToggle,\n  DataListItemCells,\n  DataListContent,\n  DropdownItem,\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  TextVariants,\n  TextContent,\n  Level,\n  LevelItem\n} from '@patternfly/react-core';\nimport UserContext from '../../../user-context';\nimport routes from '../../../constants/routes';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\nimport commonMessages from '../../../messages/common.message';\nimport { untranslatedMessage } from '../../../utilities/constants';\n\nexport const Request = ({ item, isExpanded, toggleExpand, indexpath }) => {\n  const [ isKebabOpen, setIsKebabOpen ] = useState(false);\n  const { userRoles: userRoles } = useContext(UserContext);\n  const isApprovalAdmin = useIsApprovalAdmin(userRoles);\n  const intl = useIntl();\n\n  const onKebabToggle = isOpen => {\n    setIsKebabOpen(isOpen);\n  };\n\n  const onKebabSelect = () => {\n    setIsKebabOpen(isKebabOpen => !isKebabOpen);\n  };\n\n  const checkCapability = (item, capability) => {\n    if (isApprovalAdmin) {\n      return true;\n    }\n\n    return item.metadata && item.metadata.user_capabilities && item.metadata.user_capabilities[capability];\n  };\n\n  const buildRequestActionKebab = (request) => (\n    <Dropdown\n      position={ DropdownPosition.right }\n      onSelect={ onKebabSelect }\n      toggle={ <KebabToggle id={ `request-request-dropdown-${request.id}` } onToggle={ onKebabToggle }/> }\n      isOpen={ isKebabOpen }\n      dropdownItems={ [\n        <DropdownItem aria-label={ intl.formatMessage(requestsMessages.addCommentTitle) } key={ `add_comment_${request.id}` } component=\"button\">\n          <Link\n            id={ `request-${request.id}-request-comment` }\n            to={ {\n              pathname: indexpath.addComment,\n              search: `?request=${request.id}`\n            } }\n            className=\"pf-c-dropdown__menu-item\"\n          >\n            { intl.formatMessage(requestsMessages.commentTitle) }\n          </Link>\n        </DropdownItem>\n      ] }\n      isPlain\n    />\n  );\n\n  const renderActionList = (request) => <ActionTranscript actionList={ request.actions }/>;\n\n  return (\n    <DataListItem key={ `request-${item.id}` }\n      aria-labelledby={ `check-request-${item.id}` }\n      isExpanded={ isExpanded }>\n      <DataListItemRow>\n        <DataListToggle\n          onClick={ () => toggleExpand(`request-${item.id}`) }\n          isExpanded={ isExpanded }\n          id={ `request-${item.id}` }\n          aria-labelledby={ `request-${item.id} request-${item.id}` }\n          aria-label={ intl.formatMessage(requestsMessages.toogleDetailsFor) }\n        />\n        <DataListItemCells\n          dataListCells={ [\n            <DataListCell key={ item.id }>\n              <span id={ `${item.id}-name` }>{ item.group_name ? item.group_name : item.name }</span>\n            </DataListCell>,\n            <DataListCell key={ `${item.id}-state` }>\n              <span style={ { textTransform: 'capitalize' } } id={ `${item.id}-state` }>\n                { intl.formatMessage(requestsMessages[item.state] || untranslatedMessage(item.state)) }\n              </span>\n            </DataListCell>,\n            <DataListCell key={ `${item.id}-action` }>\n              <Level>\n                <LevelItem>\n                  { (isRequestStateActive(item.state) && checkCapability(item, 'approve')) &&\n                    <div>\n                      <Link id={ `approve-${item.id}` } to={ { pathname: indexpath.approve, search: `?request=${item.id}` } }>\n                        <Button variant=\"link\" aria-label={ intl.formatMessage(requestsMessages.approveRequest) }>\n                          { intl.formatMessage(requestsMessages.approveTitle) }\n                        </Button>\n                      </Link>\n                      <Link id={ `deny-${item.id}` } to={ { pathname: indexpath.deny, search: `?request=${item.id}` } }>\n                        <Button variant=\"link\" className=\"destructive-color\" aria-label={ intl.formatMessage(requestsMessages.denyRequest) }>\n                          { intl.formatMessage(requestsMessages.denyTitle) }\n                        </Button>\n                      </Link>\n                    </div> }\n                </LevelItem>\n              </Level>\n            </DataListCell>,\n            <DataListCell\n              key={ `request-${item.id}` }\n              className=\"pf-c-data-list__action\"\n              aria-labelledby={ `request-${item.id} check-request-action${item.id}` }\n              id={ `workflow-${item.id}` }\n              aria-label={ intl.formatMessage(commonMessages.actions) }\n            >\n              { isRequestStateActive(item.state) && checkCapability(item, 'memo') && buildRequestActionKebab(item) }\n            </DataListCell>\n          ] }/>\n      </DataListItemRow>\n      <DataListContent aria-label={ intl.formatMessage(requestsMessages.requestContentDetails) }\n        isHidden={ !isExpanded }>\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent component={ TextVariants.h6 }>\n              { renderActionList(item) }\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </DataListContent>\n    </DataListItem>\n  );\n};\n\nRequest.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    state: PropTypes.string,\n    group_name: PropTypes.string.isRequired,\n    requestActions: PropTypes.shape({\n      data: PropTypes.array\n    }),\n    metadata: PropTypes.shape({\n      user_capabilities: PropTypes.object\n    })\n  }).isRequired,\n  isExpanded: PropTypes.bool.isRequired,\n  toggleExpand: PropTypes.func.isRequired,\n  indexpath: PropTypes.object\n};\n\nRequest.defaultProps = {\n  indexpath: routes.request\n};\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/cjs/PageHeader';\nimport { DataList } from '@patternfly/react-core';\nimport { Request }  from './request';\nimport { DataListLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\n\nconst RequestList = ({ isLoading, items, noItems, indexpath }) => {\n  const [ expanded, setExpanded ] = useState([]);\n  const intl = useIntl();\n\n  const toggleExpand = id => {\n    const index = expanded.indexOf(id);\n    const newExpanded =\n      index >= 0 ? [ ...expanded.slice(0, index), ...expanded.slice(index + 1, expanded.length) ] : [ ...expanded, id ];\n\n    setExpanded(newExpanded);\n  };\n\n  const isExpanded = key => expanded.includes(key);\n\n  return (\n    <Fragment>\n      <div>\n        { isLoading && (\n          <Fragment>\n            <PageHeader>\n              <PageHeaderTitle title={ noItems }/>\n            </PageHeader>\n            <DataListLoader/>\n          </Fragment>\n        ) }\n      </div>\n      { items.length > 0 && (\n        <DataList aria-label={ intl.formatMessage(requestsMessages.expandableDataList) }>\n          { items.map((item, idx) => (\n            <Request\n              key={ item.id }\n              item={ item }\n              idx={ idx }\n              isActive={ idx === 0 }\n              isExpanded={ isExpanded(`request-${item.id}`) }\n              toggleExpand={ toggleExpand }\n              indexpath={ indexpath }\n            />)) }\n        </DataList>)\n      }\n    </Fragment>\n  );\n};\n\nRequestList.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  noItems: PropTypes.string,\n  active_request: PropTypes.number,\n  indexpath: PropTypes.object\n};\n\nRequestList.defaultProps = {\n  items: []\n};\n\nexport default RequestList;\n\n","import React, { Fragment }  from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport RequestList from './request-list';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\n\nconst RequestTranscript = ({ request, indexpath }) => {\n  const intl = useIntl();\n\n  return (<Fragment>\n    <Title headingLevel=\"h5\" size=\"lg\" className=\"pf-u-pl-lg pf-u-pb-lg\">{ intl.formatMessage(requestsMessages.requestTranscript) }</Title>\n    <RequestList items={ request.requests && request.requests.length > 0 ? request.requests : [ request ] } indexpath={ indexpath } />\n  </Fragment>);\n};\n\nRequestTranscript.propTypes = {\n  request: PropTypes.shape({\n    content: PropTypes.object,\n    requests: PropTypes.array\n  }).isRequired,\n  indexpath: PropTypes.object\n};\n\nexport default RequestTranscript;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { Route, useLocation, Switch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport ActionModal from '../action-modal';\nimport RequestInfoBar from './request-info-bar';\nimport RequestTranscript from './request-transcript';\nimport { fetchRequest, fetchRequestContent } from '../../../redux/actions/request-actions';\nimport { RequestLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { TopToolbar, TopToolbarTitle } from '../../../presentational-components/shared/top-toolbar';\nimport UserContext from '../../../user-context';\nimport useQuery from '../../../utilities/use-query';\nimport { approvalPersona } from '../../../helpers/shared/helpers';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport requestsMessages from '../../../messages/requests.messages';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst requestState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst RequestDetail = ({ requestBreadcrumbs, indexpath }) => {\n  const [{ isFetching }, stateDispatch ] = useReducer(requestState, initialState);\n\n  const { selectedRequest, requestContent } = useSelector(\n    ({\n      requestReducer: {\n        requestContent: requestContent,\n        selectedRequest: selectedRequest\n      }\n    }) => ({ selectedRequest, requestContent })\n  );\n\n  const [{ request: id }] = useQuery([ 'request' ]);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { userRoles: userRoles } = useContext(UserContext);\n  const intl = useIntl();\n\n  useEffect(() => {\n    Promise.all([ dispatch(fetchRequest(id, approvalPersona(userRoles))), dispatch(fetchRequestContent(id, approvalPersona(userRoles))) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderRequestDetails = () => {\n    if (isFetching || !selectedRequest || Object.keys(selectedRequest).length === 0) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <RequestLoader />\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Fragment>\n          <GridItem md={ 4 } lg={ 3 } className=\"info-bar pf-u-p-0\">\n            <RequestInfoBar request={ selectedRequest } requestContent={ requestContent }/>\n          </GridItem>\n          <GridItem md={ 8 } lg={ 9 } className=\"detail-pane pf-u-p-lg\">\n            <RequestTranscript request={ selectedRequest } url={ location.url } indexpath={ indexpath }/>\n          </GridItem>\n        </Fragment>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Switch>\n        <Route exact path={ indexpath.addComment }>\n          <ActionModal actionType={ 'Add Comment' }\n            closeUrl={ { pathname: indexpath.index, search: `?request=${selectedRequest.id}` } }/>\n        </Route>\n        <Route exact path={ indexpath.approve } render={ props =>\n          <ActionModal { ...props } actionType={ 'Approve' }\n            closeUrl={ { pathname: indexpath.index, search: `?request=${selectedRequest.id}` } } /> } />\n        <Route exact path={ indexpath.deny } render={ props =>\n          <ActionModal { ...props } actionType={ 'Deny' }\n            closeUrl={ { pathname: indexpath.index, search: `?request=${selectedRequest.id}` } } /> } />\n      </Switch>\n      <TopToolbar\n        breadcrumbs={ requestBreadcrumbs }\n        paddingBottom={ true }\n      >\n        <TopToolbarTitle title={ intl.formatMessage(requestsMessages.requestTitle, { id }) } />\n      </TopToolbar>\n      <Section type=\"content\">\n        <Grid hasGutter>\n          { renderRequestDetails() }\n        </Grid>\n      </Section>\n    </Fragment>\n  );\n};\n\nRequestDetail.propTypes = {\n  requestBreadcrumbs: PropTypes.array,\n  indexpath: PropTypes.object\n};\n\nexport default RequestDetail;\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\");var _extends=require(\"./extends-7fa7e501.js\"),defineProperty=require(\"./defineProperty-cf06dcaa.js\"),objectWithoutProperties=require(\"./objectWithoutProperties-9e2b4e81.js\"),React=require(\"react\"),React__default=_interopDefault(React),PropTypes=_interopDefault(require(\"prop-types\")),classNames=_interopDefault(require(\"classnames\")),configContext=require(\"./configContext-2e7dee54.js\"),Title_js=require(\"@patternfly/react-core/dist/js/components/Title/Title.js\"),PageHeader=function PageHeader(e){var t=e.className,r=e.children,a=objectWithoutProperties._objectWithoutProperties(e,[\"className\",\"children\"]),s=classNames(t,\"pf-l-page-header\",\"pf-c-page-header\",\"pf-l-page__main-section\",\"pf-c-page__main-section\");return React__default.createElement(configContext.ThemeContext.Consumer,null,(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"light\",t=classNames(defineProperty._defineProperty({},\"pf-m-\".concat(e,\"-200\"),\"dark\"===e),defineProperty._defineProperty({},\"pf-m-light\",\"light\"===e));return React__default.createElement(\"section\",_extends._extends({},a,{className:\"\".concat(s,\" \").concat(t),\"widget-type\":\"InsightsPageHeader\"}),r)}))};PageHeader.propTypes={children:PropTypes.any.isRequired,className:PropTypes.string};var PageHeaderTitle=function PageHeaderTitle(e){var t=e.className,r=e.title,a=classNames(t);return React__default.createElement(Title_js.Title,{headingLevel:\"h1\",size:\"2xl\",className:a,\"widget-type\":\"InsightsPageHeaderTitle\"},\" \",r,\" \")};PageHeaderTitle.propTypes={title:PropTypes.node.isRequired,className:PropTypes.string},exports.PageHeader=PageHeader,exports.PageHeaderTitle=PageHeaderTitle;\n"],"sourceRoot":""}