{"version":3,"sources":["webpack:///./src/smart-components/request/request-detail/request-info-bar.js","webpack:///./src/smart-components/request/request-detail/action-transcript.js","webpack:///./src/smart-components/request/request-detail/request.js","webpack:///./src/smart-components/request/request-detail/request-list.js","webpack:///./src/smart-components/request/request-detail/request-transcript.js","webpack:///./src/smart-components/request/request-detail/request-detail.js","webpack:///./src/constants/routes.js","webpack:///./src/utilities/use-query.js","webpack:///./src/redux/actions/request-actions.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/helpers/request/request-helper.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/forms/request-comment-form.schema.js","webpack:///./src/smart-components/request/action-modal.js"],"names":["RequestInfoBar","request","requestContent","Stack","gutter","StackItem","key","Card","CardBody","Title","headingLevel","size","TextContent","Text","className","id","component","TextVariants","p","product","portfolio","platform","requester_name","order_id","CardHeader","params","Object","keys","map","param","propTypes","PropTypes","shape","string","isRequired","object","operationInfo","memo","displayName","icon","approve","deny","notify","skip","start","cancel","error","ActionTranscript","actionList","actions","actionItem","style","marginBottom","small","timeAgo","created_at","operation","operationDisplayName","processed_by","comments","h6","centered","aria-label","Request","item","isExpanded","toggleExpand","useState","isKebabOpen","setIsKebabOpen","userPersona","useContext","UserContext","onKebabToggle","isOpen","onKebabSelect","checkCapability","capability","isApprovalAdmin","metadata","user_capabilities","DataListItem","aria-labelledby","DataListItemRow","DataListToggle","onClick","DataListItemCells","dataListCells","DataListCell","group_name","name","textTransform","state","Level","LevelItem","isRequestStateActive","to","pathname","routes","search","Button","variant","Dropdown","position","DropdownPosition","right","onSelect","toggle","KebabToggle","onToggle","dropdownItems","DropdownItem","addComment","isPlain","DataListContent","isHidden","renderActionList","isLoading","bool","requestActions","data","array","idx","number","func","noItems","RequestList","expanded","setState","index","indexOf","slice","length","includes","this","props","PageHeader","title","items","DataList","isActive","Component","active_request","defaultProps","RequestTranscript","paddingLeft","requests","content","initialState","isFetching","requestState","action","type","payload","RequestDetail","useReducer","stateDispatch","useSelector","requestReducer","selectedRequest","useQuery","location","useLocation","dispatch","useDispatch","useEffect","Promise","all","fetchRequest","fetchRequestContent","then","exact","path","actionType","closeUrl","render","breadcrumbs","paddingBottom","Section","Grid","backgroundColor","minHeight","GridItem","md","lg","url","workflows","add","remove","editInfo","editGroups","editSequence","requiredParams","query","URLSearchParams","reduce","acc","curr","get","fetchRequests","filter","pagination","persona","ActionTypes","RequestHelper","apiProps","createRequestAction","actionName","requestId","actionIn","meta","notifications","fulfilled","description","rejected","expandRequest","ApprovalBreadcrumbs","Breadcrumb","values","BreadcrumbItem","arrayOf","TopToolbar","children","oneOfType","node","TopToolbarTitle","h1","actionApi","getActionApi","graphqlInstance","getGraphqlInstance","defaultSettings","undefined","paginationQuery","limit","offset","filterQuery","fetchUrl","APPROVAL_API_BASE","fetchHeaders","getAxiosInstance","method","headers","fetchRequestTranscript","parent_id","APPROVAL_APPROVER_PERSONA","APPROVAL_REQUESTER_PERSONA","fetchRequestCapabilities","isParent","fetchRequestWithSubrequests","a","requestData","number_of_children","result","find","createAction","Select","input","options","isReadOnly","isDisabled","FieldProvider","rest","FormSelect","inputValue","selectOptions","value","label","createOptions","FormSelectOption","toString","any","Pf4SelectWrapper","componentType","helperText","hideLabel","showError","touched","FormGroup","fieldId","isValid","helperTextInvalid","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","formFieldsMapper","componentTypes","SELECT","layoutMapper","oneOf","schemaFields","isDeny","TEXTAREA_FIELD","createRequestCommentSchema","schema","validate","validatorTypes","REQUIRED","fields","ActionModal","addNotification","postMethod","push","useHistory","onCancel","dismissable","Modal","isLarge","onClose","schemaType","onSubmit","operationType","Approve","Deny","match","connect","bindActionCreators"],"mappings":"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","file":"js/request-detail.js","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardBody, CardHeader,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst RequestInfoBar = ({ request, requestContent }) => {\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem key={ 'request-detail-panel' }>\n          <Card>\n            <CardBody>\n              <Stack gutter=\"md\">\n                <StackItem key={ 'request-summary' }>\n                  <Title headingLevel=\"h5\" size=\"lg\">\n                    Summary\n                  </Title>\n                </StackItem>\n                <StackItem key={ 'request-product' }>\n                  <TextContent>\n                    <Text className={ 'font-14' }>\n                      Product\n                    </Text>\n                    <Text id='portfolio-item-name' component={ TextVariants.p }>\n                      { requestContent ? requestContent.product : '' }\n                    </Text>\n                  </TextContent>\n                </StackItem>\n                <StackItem key={ 'request-portfolio' }>\n                  <TextContent>\n                    <Text className={ 'font-14' }>\n                      Portfolio\n                    </Text>\n                    <Text id='portfolio-name' component={ TextVariants.p }>\n                      { requestContent ? requestContent.portfolio : '' }\n                    </Text>\n                  </TextContent>\n                </StackItem>\n                <StackItem key={ 'request-platform' }>\n                  <TextContent>\n                    <Text className={ 'font-14' }>\n                      Platform\n                    </Text>\n                    <Text id='source-name' component={ TextVariants.p }>\n                      { requestContent ? requestContent.platform : ' ' }\n                    </Text>\n                  </TextContent>\n                </StackItem>\n                <StackItem key={ 'request-requester' }>\n                  <TextContent>\n                    <Text className={ 'font-14' }>Requester </Text>\n                    <Text id='requester_name' component={ TextVariants.p }>\n                      { request.requester_name }\n                    </Text>\n                  </TextContent>\n                </StackItem>\n                <StackItem key={ 'request-order' }>\n                  <TextContent>\n                    <Text className={ 'font-14' }>Order# </Text>\n                    <Text id='requester_name' component={ TextVariants.p }>\n                      { requestContent ? requestContent.order_id : '' }\n                    </Text>\n                  </TextContent>\n                </StackItem>\n              </Stack>\n            </CardBody>\n          </Card>\n        </StackItem>\n        <StackItem key={ 'request-parameters' }>\n          <Card>\n            <CardHeader>\n              <Title headingLevel=\"h5\" size=\"lg\">Parameters</Title>\n            </CardHeader>\n            <CardBody>\n              <Stack gutter=\"md\">\n                { requestContent.params && Object.keys(requestContent.params).map(param => {\n                  return ((requestContent.params[param]) &&\n                      <StackItem key={ `request-${requestContent.params[param]}` }>\n                        <TextContent>\n                          <Text key={ param } className={ 'font-14' }>\n                            { `${param}` }\n                          </Text>\n                          <Text id={ param } component={ TextVariants.p }>\n                            { `${requestContent.params[param]}` }\n                          </Text>\n                        </TextContent>\n                      </StackItem>\n                  );\n                })\n                }\n              </Stack>\n            </CardBody>\n          </Card>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nRequestInfoBar.propTypes = {\n  request: PropTypes.shape({\n    requester_name: PropTypes.string,\n    order_id: PropTypes.string\n  }).isRequired,\n  requestContent: PropTypes.object\n};\nexport default RequestInfoBar;\n\n","import React from 'react';\nimport { timeAgo }  from '../../../helpers/shared/helpers';\nimport {\n  Stack,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport { CheckCircleIcon,\n  CommentIcon,\n  EnvelopeIcon,\n  OutlinedTimesCircleIcon,\n  AngleDoubleRightIcon,\n  OnRunningIcon,\n  ErrorCircleOIcon,\n  ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\n\nconst operationInfo = {\n  memo: { displayName: 'Comment from', icon: <CommentIcon/> },\n  approve: { displayName: 'Approved by', icon: <CheckCircleIcon className=\"pf-u-mr-sm icon-success-fill\"/> },\n  deny: { displayName: 'Denied by', icon: <OutlinedTimesCircleIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  notify: { displayName: 'Notified by', icon: <EnvelopeIcon/> },\n  skip: { displayName: 'Skipped by', icon: <AngleDoubleRightIcon/> },\n  start: { displayName: 'Started by', icon: <OnRunningIcon/> },\n  cancel: { displayName: 'Canceled by', icon: <ErrorCircleOIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  error: { displayName: 'Error', icon: <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\"/> }\n};\n\nconst operationIcon = (operation) => operationInfo[operation] ? operationInfo[operation].icon : '';\nconst operationDisplayName = (operation) => operationInfo[operation] ? operationInfo[operation].displayName : '';\n\nexport const ActionTranscript = actionList => {\n  const actions = actionList.actionList;\n  return actions ? (\n    <Stack>\n      { actions.map(actionItem =>\n        <div key={ `${actionItem.id}-action` }>\n          <TextContent><Text key={ `${actionItem.id}-action-created_at` } style={ { marginBottom: 0 } }\n            className=\"data-table-detail content\" component={ TextVariants.small }>\n            { timeAgo(actionItem.created_at) }\n          </Text>\n          <Text key={ `${actionItem.id}-action-operation` }  style={ { marginBottom: 0 } }\n            className=\"data-table-detail content\">\n            { operationIcon(actionItem.operation) } { `${operationDisplayName(actionItem.operation)}  ${actionItem.processed_by}` }\n          </Text>\n          { actionItem.comments && <Text key={ `${actionItem.id}-action-comments` } style={ { marginBottom: 0 } }\n            className=\"data-table-detail content\" component={ TextVariants.h6 }>\n            { `${actionItem.comments}` }\n          </Text> } </TextContent>\n          <br/>\n        </div>)\n      }\n    </Stack>\n  ) : <EmptyTable centered\n    aria-label=\"No records\"/>;\n};\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { isApprovalAdmin, isRequestStateActive } from '../../../helpers/shared/helpers';\nimport { ActionTranscript } from './action-transcript';\n\nimport {\n  Stack,\n  StackItem,\n  Button,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListToggle,\n  DataListItemCells,\n  DataListContent,\n  DropdownItem,\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  TextVariants,\n  TextContent,\n  Level,\n  LevelItem\n} from '@patternfly/react-core';\nimport UserContext from '../../../user-context';\nimport routes from '../../../constants/routes';\n\nexport const Request = ({ item, isExpanded, toggleExpand }) => {\n  const [ isKebabOpen, setIsKebabOpen ] = useState(false);\n  const { userPersona: userPersona } = useContext(UserContext);\n\n  const onKebabToggle = isOpen => {\n    setIsKebabOpen(isOpen);\n  };\n\n  const onKebabSelect = () => {\n    setIsKebabOpen(isKebabOpen => !isKebabOpen);\n  };\n\n  const checkCapability = (item, capability) => {\n    if (isApprovalAdmin(userPersona)) {\n      return true;\n    }\n\n    return item.metadata && item.metadata.user_capabilities && item.metadata.user_capabilities[capability];\n  };\n\n  const buildRequestActionKebab = (request) => {\n    return (\n      <Dropdown\n        position={ DropdownPosition.right }\n        onSelect={ onKebabSelect }\n        toggle={ <KebabToggle id={ `request-request-dropdown-${request.id}` } onToggle={ onKebabToggle }/> }\n        isOpen={ isKebabOpen }\n        dropdownItems={ [\n          <DropdownItem aria-label=\"Add Comment\" key={ `add_comment_${request.id}` }>\n            <Link\n              id={ `request-${request.id}-request-comment` }\n              to={ {\n                pathname: routes.request.addComment,\n                search: `?request=${request.id}`\n              } }\n              className=\"pf-c-dropdown__menu-item\"\n            >\n              Comment\n            </Link>\n          </DropdownItem>\n        ] }\n        isPlain\n      />\n    );\n  };\n\n  const renderActionList = (request) => {\n    return <ActionTranscript actionList={ request.actions }/>;\n  };\n\n  return (\n    <DataListItem key={ `request-${item.id}` }\n      aria-labelledby={ `check-request-${item.id}` }\n      isExpanded={ isExpanded }>\n      <DataListItemRow>\n        <DataListToggle\n          onClick={ () => toggleExpand(`request-${item.id}`) }\n          isExpanded={ isExpanded }\n          id={ `request-${item.id}` }\n          aria-labelledby={ `request-${item.id} request-${item.id}` }\n          aria-label=\"Toggle details for\"\n        />\n        <DataListItemCells\n          dataListCells={ [\n            <DataListCell key={ item.id }>\n              <span id={ `${item.id}-name` }>{ `${item.group_name ? item.group_name : item.name}` } </span>\n            </DataListCell>,\n            <DataListCell key={ `${item.id}-state` }>\n              <span style={ { textTransform: 'capitalize' } } id={ `${item.id}-state` }>{ `${item.state}` } </span>\n            </DataListCell>,\n            <DataListCell key={ `${item.id}-action` }>\n              <Level>\n                <LevelItem>\n                  { (isRequestStateActive(item.state) && checkCapability(item, 'approve')) &&\n                    <div>\n                      <Link id={ `approve-${item.id}` } to={ { pathname: routes.request.approve, search: `?request=${item.id}` } }>\n                        <Button variant=\"link\" aria-label=\"Approve Request\">\n                          Approve\n                        </Button>\n                      </Link>\n                      <Link id={ `deny-${item.id}` } to={ { pathname: routes.request.deny, search: `?request=${item.id}` } }>\n                        <Button variant=\"link\" className=\"destructive-color\" aria-label=\"Deny Request\">\n                          Deny\n                        </Button>\n                      </Link>\n                    </div> }\n                </LevelItem>\n              </Level>\n            </DataListCell>,\n            <DataListCell\n              key={ `request-${item.id}` }\n              className=\"pf-c-data-list__action\"\n              aria-labelledby={ `request-${item.id} check-request-action${item.id}` }\n              id={ `workflow-${item.id}` }\n              aria-label=\"Actions\">\n              { isRequestStateActive(item.state) && checkCapability(item, 'memo') && buildRequestActionKebab(item) }\n            </DataListCell>\n          ] }/>\n      </DataListItemRow>\n      <DataListContent aria-label=\"Request Content Details\"\n        isHidden={ !isExpanded }>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent component={ TextVariants.h6 }>\n              { renderActionList(item) }\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </DataListContent>\n    </DataListItem>\n  );\n};\n\nRequest.propTypes = {\n  isLoading: PropTypes.bool,\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    state: PropTypes.string,\n    group_name: PropTypes.string.isRequired,\n    requestActions: PropTypes.shape({\n      data: PropTypes.array\n    }),\n    metadata: PropTypes.shape({\n      user_capabilities: PropTypes.array\n    })\n  }).isRequired,\n  idx: PropTypes.number,\n  isExpanded: PropTypes.bool.isRequired,\n  toggleExpand: PropTypes.func.isRequired,\n  noItems: PropTypes.string\n};\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { DataList } from '@patternfly/react-core';\nimport { Request }  from './request';\nimport { DataListLoader } from '../../../presentational-components/shared/loader-placeholders';\n\nclass RequestList extends Component {\n  state = {\n    expanded: []\n  };\n\n  toggleExpand = id => this.setState(({ expanded }) => {\n    const index = expanded.indexOf(id);\n    const newExpanded =\n      index >= 0 ? [ ...expanded.slice(0, index), ...expanded.slice(index + 1, expanded.length) ] : [ ...expanded, id ];\n    return ({ expanded: newExpanded });\n  });\n\n  isExpanded = key => {\n    return this.state.expanded.includes(key);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div>\n          { this.props.isLoading && (\n            <Fragment>\n              <PageHeader>\n                <PageHeaderTitle title={ this.props.noItems }/>\n              </PageHeader>\n              <DataListLoader/>\n            </Fragment>\n          ) }\n        </div>\n        { this.props.items.length > 0 && (\n          <DataList aria-label=\"Expandable data list\">\n            { this.props.items.map((item, idx) => (\n              <Request\n                key={ item.id }\n                item={ item }\n                idx={ idx }\n                isActive={ idx === 0 }\n                isExpanded={ this.isExpanded(`request-${item.id}`) }\n                toggleExpand={ this.toggleExpand }\n              />)) }\n          </DataList>)\n        }\n      </Fragment>\n    );\n  };\n}\n\nRequestList.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  noItems: PropTypes.string,\n  active_request: PropTypes.number\n};\n\nRequestList.defaultProps = {\n  items: []\n};\n\nexport default RequestList;\n\n","import React, { Fragment }  from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport RequestList from './request-list';\n\nconst RequestTranscript = ({ request }) => {\n  return (<Fragment>\n    <Title size=\"sm\" style={ { paddingLeft: '32px' } }> Request transcript </Title>\n    <RequestList items={ request.requests && request.requests.length > 0 ? request.requests : [ request ] }/>\n  </Fragment>);\n};\n\nRequestTranscript.propTypes = {\n  request: PropTypes.shape({\n    content: PropTypes.object,\n    requests: PropTypes.array\n  }).isRequired\n};\n\nexport default RequestTranscript;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { Route, useLocation, Switch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport ActionModal from '../action-modal';\nimport RequestInfoBar from './request-info-bar';\nimport RequestTranscript from './request-transcript';\nimport { fetchRequest, fetchRequestContent } from '../../../redux/actions/request-actions';\nimport { RequestLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { TopToolbar, TopToolbarTitle } from '../../../presentational-components/shared/top-toolbar';\nimport UserContext from '../../../user-context';\nimport useQuery from '../../../utilities/use-query';\nimport routes from '../../../constants/routes';\n\nconst initialState = {\n  isFetching: true\n};\nconst requestState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst RequestDetail = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(requestState, initialState);\n\n  const { selectedRequest, requestContent } = useSelector(\n    ({\n      requestReducer: {\n        requestContent: requestContent,\n        selectedRequest: selectedRequest\n      }\n    }) => ({ selectedRequest, requestContent })\n  );\n\n  const [{ request: id }, search ] = useQuery([ 'request' ]);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { userPersona: userPersona } = useContext(UserContext);\n\n  useEffect(() => {\n    Promise.all([ dispatch(fetchRequest(id, userPersona)), dispatch(fetchRequestContent(id, userPersona)) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderRequestDetails = () => {\n    if (isFetching || !selectedRequest || Object.keys(selectedRequest).length === 0) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <RequestLoader />\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Fragment>\n          <GridItem md={ 4 } lg={ 3 } className=\"info-bar\">\n            <RequestInfoBar request={ selectedRequest } requestContent={ requestContent }/>\n          </GridItem>\n          <GridItem md={ 8 } lg={ 9 } className=\"detail-pane\">\n            <RequestTranscript request={ selectedRequest } url={ location.url }/>\n          </GridItem>\n        </Fragment>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Switch>\n        <Route exact path={ routes.request.addComment }>\n          <ActionModal actionType={ 'Add Comment' } closeUrl={ { pathname: routes.request.index, search } }/>\n        </Route>\n        <Route exact path={ routes.request.approve } render={ props =>\n          <ActionModal { ...props } actionType={ 'Approve' } closeUrl={ { pathname: routes.request.index, search } } /> } />\n        <Route exact path={ routes.request.deny } render={ props =>\n          <ActionModal { ...props } actionType={ 'Deny' } closeUrl={ { pathname: routes.request.index, search } }  /> } />\n      </Switch>\n      <TopToolbar\n        breadcrumbs={ [{ title: 'Request queue', to: routes.requests.index, id: 'requests' }] }\n        paddingBottom={ true }\n      >\n        <TopToolbarTitle title={ `Request ${id}` } />\n      </TopToolbar>\n      <Section type=\"content\">\n        <Grid gutter=\"md\">\n          { renderRequestDetails() }\n        </Grid>\n      </Section>\n    </Fragment>\n  );\n};\n\nexport default RequestDetail;\n","const routes = {\n  requests: {\n    index: '/requests',\n    addComment: '/requests/add-comment',\n    approve: '/requests/approve',\n    deny: '/requests/deny'\n  },\n  request: {\n    index: '/request',\n    addComment: '/request/add-comment',\n    approve: '/request/approve',\n    deny: '/request/deny'\n  },\n  workflows: {\n    index: '/workflows',\n    add: '/workflows/add-workflow',\n    remove: '/workflows/remove',\n    editInfo: '/workflows/edit-info',\n    editGroups: '/workflows/edit-groups',\n    editSequence: '/workflows/edit-sequence'\n  }\n};\n\nexport default routes;\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import * as ActionTypes from '../action-types';\nimport * as RequestHelper from '../../helpers/request/request-helper';\n\nexport const fetchRequests = (filter, pagination, persona) => ({\n  type: ActionTypes.FETCH_REQUESTS,\n  payload: RequestHelper.fetchRequests(filter, pagination, persona)\n});\n\nexport const fetchRequest = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST,\n  payload: RequestHelper.fetchRequestWithSubrequests(apiProps, persona)\n});\n\nexport const fetchRequestContent = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST_CONTENT,\n  payload: RequestHelper.fetchRequestContent(apiProps, persona)\n});\n\nexport const createRequestAction = (actionName, requestId, actionIn) => ({\n  type: ActionTypes.CREATE_REQUEST_ACTION,\n  payload: RequestHelper.createRequestAction(requestId, actionIn),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success',\n        description: `The ${actionName} was successful.`\n      },\n      rejected: {\n        variant: 'danger',\n        title: `${actionName} error`,\n        description: `The ${actionName} action failed.`\n      }\n    }\n  }\n});\n\nexport const expandRequest = (id) => ({\n  type: ActionTypes.EXPAND_REQUEST,\n  payload: id\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nconst ApprovalBreadcrumbs = ({ breadcrumbs }) => breadcrumbs\n  ? (\n    <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        <BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n          { (item.to && <NavLink isActive={ () => false } exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n        </BreadcrumbItem>\n      )) }\n    </Breadcrumb>\n  ) : null;\n\nApprovalBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    isActive: PropTypes.bool,\n    to: PropTypes.string\n  }))\n};\n\nexport default ApprovalBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport ApprovalBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <ApprovalBreadcrumbs breadcrumbs={ breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n              <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n                <Text component={ TextVariants.p }>{ description }</Text>\n              </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","import { getActionApi, getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_REQUESTER_PERSONA, APPROVAL_APPROVER_PERSONA } from '../shared/helpers';\n\nconst actionApi = getActionApi();\nconst graphqlInstance = getGraphqlInstance();\n\nexport function fetchRequests(filter = '', pagination = defaultSettings, persona = undefined) {\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `filter[name][contains_i]=${filter}`;\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/?${filterQuery}${paginationQuery}`;\n  const fetchHeaders = persona ? { 'x-rh-persona': persona } : undefined;\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n}\n\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    id\n    name\n    number_of_children\n    decision\n    description\n    group_name\n    number_of_finished_children\n    state\n    actions {\n      id\n      operation\n      comments\n      created_at\n      processed_by\n    }\n    requests {\n      id\n      name\n      number_of_children\n      decision\n      description\n      group_name\n      number_of_finished_children\n      state\n      workflow_id\n      parent_id\n      actions {\n        id\n        operation\n        comments\n        created_at\n        processed_by\n      }\n    }\n  }\n}`;\n\nexport const fetchRequestTranscript = (requestId, persona) => {\n  const fetchHeaders = (persona && persona !== APPROVAL_APPROVER_PERSONA) ? { 'x-rh-persona': persona }\n    : { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return graphqlInstance({ method: 'post', url: `${APPROVAL_API_BASE}/graphql`,\n    headers: fetchHeaders, data: { query: requestTranscriptQuery(requestId) }})\n  .then(({ data: { requests }}) => requests);\n};\n\nexport const fetchRequestContent = (id) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}/content`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport const fetchRequestCapabilities = (id, isParent) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}${isParent ? '/requests' : ''}`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport async function fetchRequestWithSubrequests(id, persona) {\n  const requestData = await fetchRequestTranscript(id, persona);\n\n  if (!requestData || requestData.length === 0) { return {}; }\n\n  if (persona === APPROVAL_APPROVER_PERSONA) {\n    if (requestData && requestData.length > 0 && requestData[0].number_of_children > 0) {\n      const result = await fetchRequestCapabilities(id, true);\n\n      if (result && result.data) {\n        requestData[0].requests = requestData[0].requests.map(request => {\n          return { ...result.data.find((item) => (item.id === request.id) && item.metadata),\n            ...request };\n        });\n      }\n    }\n    else {\n      const request = await fetchRequestCapabilities(id, false);\n      if (request) {\n        requestData[0] = { ...requestData[0], metadata: request.metadata };\n      }\n    }\n  }\n\n  return  { ...requestData[0] };\n}\n\nexport async function createRequestAction (requestId, actionIn) {\n  return await actionApi.createAction(requestId, actionIn);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  const selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\n\nconst schemaFields = (isDeny) =>({\n  component: componentTypes.TEXTAREA_FIELD,\n  name: 'comments',\n  type: 'text',\n  isRequired: isDeny,\n  label: isDeny ? 'Reason' : 'Comment'\n});\n\nexport const createRequestCommentSchema = (isDeny = false) => {\n  const schema = schemaFields(isDeny);\n  if (isDeny) {\n    schema.validate = [{\n      type: validatorTypes.REQUIRED\n    }];\n  }\n\n  return { fields: [ schema ]};\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { createRequestAction } from '../../redux/actions/request-actions';\nimport { createRequestCommentSchema } from '../../forms/request-comment-form.schema';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\n\nconst ActionModal = ({\n  actionType,\n  addNotification,\n  createRequestAction,\n  closeUrl,\n  postMethod\n}) => {\n  const { push } = useHistory();\n  const [{ request: id }] = useQuery([ 'request' ]);\n\n  const onSubmit = (data) => {\n    const operationType = { 'Add Comment': 'memo', Approve: 'approve', Deny: 'deny' };\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n    return postMethod ?\n      createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => postMethod()).then(() => push(closeUrl))\n      : createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n    addNotification({\n      variant: 'warning',\n      title: actionName,\n      dismissable: true,\n      description: `${actionName} was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ actionType === 'Add Comment' ? `Request #${id}` : `${actionType} Request #${id}` }\n      isOpen\n      onClose={ onCancel }\n    >\n      <FormRenderer\n        schema={ createRequestCommentSchema (actionType === 'Deny') }\n        schemaType=\"default\"\n        onSubmit={ onSubmit }\n        onCancel={ onCancel }\n        formContainer=\"modal\"\n      />\n    </Modal>\n  );\n};\n\nActionModal.defaultProps = {\n  closeUrl: routes.requests.index\n};\n\nActionModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  createRequestAction: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  id: PropTypes.string,\n  actionType: PropTypes.string,\n  closeUrl: PropTypes.string,\n  match: PropTypes.object,\n  location: PropTypes.object\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRequestAction\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(ActionModal);\n"],"sourceRoot":""}