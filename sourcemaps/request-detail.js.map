{"version":3,"sources":["webpack:///./src/smart-components/request/request-detail/request-info-bar.js","webpack:///./src/smart-components/request/request-detail/action-transcript.js","webpack:///./src/smart-components/request/request-detail/request.js","webpack:///./src/smart-components/request/request-detail/request-list.js","webpack:///./src/smart-components/request/request-detail/request-transcript.js","webpack:///./src/smart-components/request/request-detail/request-detail.js","webpack:///./src/utilities/use-query.js","webpack:///./src/smart-components/workflow/add-groups/summary-content.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/redux/actions/request-actions.js","webpack:///./src/helpers/request/request-helper.js","webpack:///./src/forms/request-comment-form.schema.js","webpack:///./src/smart-components/request/action-modal.js"],"names":["RequestInfoBar","request","requestContent","Stack","gutter","StackItem","key","Card","CardBody","Title","headingLevel","size","TextContent","Text","className","id","component","TextVariants","p","product","portfolio","platform","requester_name","order_id","CardHeader","params","Object","keys","map","param","propTypes","PropTypes","shape","string","isRequired","object","operationInfo","memo","displayName","icon","approve","deny","notify","skip","start","cancel","error","ActionTranscript","actionList","actions","actionItem","style","marginBottom","small","timeAgo","created_at","operation","operationDisplayName","processed_by","comments","h6","centered","aria-label","Request","item","isExpanded","toggleExpand","useState","isKebabOpen","setIsKebabOpen","userRoles","useContext","UserContext","isApprovalAdmin","useIsApprovalAdmin","onKebabToggle","isOpen","onKebabSelect","checkCapability","capability","metadata","user_capabilities","DataListItem","aria-labelledby","DataListItemRow","DataListToggle","onClick","DataListItemCells","dataListCells","DataListCell","group_name","name","textTransform","state","Level","LevelItem","isRequestStateActive","to","pathname","routes","search","Button","variant","Dropdown","position","DropdownPosition","right","onSelect","toggle","KebabToggle","onToggle","dropdownItems","DropdownItem","addComment","isPlain","DataListContent","isHidden","renderActionList","isLoading","bool","requestActions","data","array","idx","number","func","noItems","RequestList","expanded","setState","index","indexOf","slice","length","includes","this","props","PageHeader","title","items","DataList","isActive","Component","active_request","defaultProps","RequestTranscript","paddingLeft","requests","content","initialState","isFetching","requestState","action","type","payload","RequestDetail","useReducer","stateDispatch","useSelector","requestReducer","selectedRequest","useQuery","location","useLocation","dispatch","useDispatch","useEffect","Promise","all","fetchRequest","approvalPersona","fetchRequestContent","then","exact","path","actionType","closeUrl","render","breadcrumbs","paddingBottom","Section","Grid","backgroundColor","minHeight","GridItem","md","lg","url","requiredParams","query","URLSearchParams","reduce","acc","curr","get","SummaryContent","getState","useFormApi","values","description","wfGroups","h5","span","group","value","label","buttonPositioning","default","modal","buttonOrder","buttonClassName","componentMapperExtended","componentMapper","summary","FormRenderer","formContainer","rest","FormTemplate","oneOf","fetchRequests","persona","pagination","sortBy","filterValue","finalPagination","defaultSettings","meta","limit","offset","ActionTypes","RequestHelper","apiProps","createRequestAction","actionName","requestId","actionIn","notifications","fulfilled","rejected","expandRequest","sortRequests","setFilterValueRequests","clearFilterValueRequests","resetRequestList","actionApi","getActionApi","graphqlInstance","getGraphqlInstance","sortPropertiesMapper","property","opened","requester","status","filterQuery","push","forEach","decision","dec","join","filter","undefined","paginationQuery","Math","max","sortQuery","direction","fetchUrl","APPROVAL_API_BASE","fetchHeaders","getAxiosInstance","method","headers","fetchRequestTranscript","parent_id","APPROVAL_APPROVER_PERSONA","APPROVAL_REQUESTER_PERSONA","fetchRequestCapabilities","isParent","fetchRequestWithSubrequests","a","requestData","number_of_children","result","find","createAction","createRequestCommentSchema","isDeny","fields","componentTypes","TEXTAREA","validate","validatorTypes","REQUIRED","ActionModal","addNotification","postMethod","useHistory","onCancel","dismissable","Modal","isLarge","onClose","schema","onSubmit","operationType","Approve","Deny","oneOfType","patname","connect","bindActionCreators"],"mappings":"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","file":"js/request-detail.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardBody, CardHeader,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst RequestInfoBar = ({ request, requestContent }) => (\n  <Stack gutter=\"md\">\n    <StackItem key={ 'request-detail-panel' }>\n      <Card>\n        <CardBody>\n          <Stack gutter=\"md\">\n            <StackItem key={ 'request-summary' }>\n              <Title headingLevel=\"h5\" size=\"lg\">\n                    Summary\n              </Title>\n            </StackItem>\n            <StackItem key={ 'request-product' }>\n              <TextContent>\n                <Text className={ 'font-14' }>\n                      Product\n                </Text>\n                <Text id='portfolio-item-name' component={ TextVariants.p }>\n                  { requestContent ? requestContent.product : '' }\n                </Text>\n              </TextContent>\n            </StackItem>\n            <StackItem key={ 'request-portfolio' }>\n              <TextContent>\n                <Text className={ 'font-14' }>\n                      Portfolio\n                </Text>\n                <Text id='portfolio-name' component={ TextVariants.p }>\n                  { requestContent ? requestContent.portfolio : '' }\n                </Text>\n              </TextContent>\n            </StackItem>\n            <StackItem key={ 'request-platform' }>\n              <TextContent>\n                <Text className={ 'font-14' }>\n                      Platform\n                </Text>\n                <Text id='source-name' component={ TextVariants.p }>\n                  { requestContent ? requestContent.platform : ' ' }\n                </Text>\n              </TextContent>\n            </StackItem>\n            <StackItem key={ 'request-requester' }>\n              <TextContent>\n                <Text className={ 'font-14' }>Requester </Text>\n                <Text id='requester_name' component={ TextVariants.p }>\n                  { request.requester_name }\n                </Text>\n              </TextContent>\n            </StackItem>\n            <StackItem key={ 'request-order' }>\n              <TextContent>\n                <Text className={ 'font-14' }>Order# </Text>\n                <Text id='requester_name' component={ TextVariants.p }>\n                  { requestContent ? requestContent.order_id : '' }\n                </Text>\n              </TextContent>\n            </StackItem>\n          </Stack>\n        </CardBody>\n      </Card>\n    </StackItem>\n    <StackItem key={ 'request-parameters' }>\n      <Card>\n        <CardHeader>\n          <Title headingLevel=\"h5\" size=\"lg\">Parameters</Title>\n        </CardHeader>\n        <CardBody>\n          <Stack gutter=\"md\">\n            { requestContent.params && Object.keys(requestContent.params).map(param => {\n              return ((requestContent.params[param]) &&\n                      <StackItem key={ `request-${requestContent.params[param]}` }>\n                        <TextContent>\n                          <Text key={ param } className={ 'font-14' }>\n                            { `${param}` }\n                          </Text>\n                          <Text id={ param } component={ TextVariants.p }>\n                            { `${requestContent.params[param]}` }\n                          </Text>\n                        </TextContent>\n                      </StackItem>\n              );\n            })\n            }\n          </Stack>\n        </CardBody>\n      </Card>\n    </StackItem>\n  </Stack>\n);\n\nRequestInfoBar.propTypes = {\n  request: PropTypes.shape({\n    requester_name: PropTypes.string,\n    order_id: PropTypes.string\n  }).isRequired,\n  requestContent: PropTypes.object\n};\nexport default RequestInfoBar;\n\n","import React from 'react';\nimport { timeAgo }  from '../../../helpers/shared/helpers';\nimport {\n  Stack,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport { CheckCircleIcon,\n  CommentIcon,\n  EnvelopeIcon,\n  OutlinedTimesCircleIcon,\n  AngleDoubleRightIcon,\n  OnRunningIcon,\n  ErrorCircleOIcon,\n  ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\n\nconst operationInfo = {\n  memo: { displayName: 'Comment from', icon: <CommentIcon/> },\n  approve: { displayName: 'Approved by', icon: <CheckCircleIcon className=\"pf-u-mr-sm icon-success-fill\"/> },\n  deny: { displayName: 'Denied by', icon: <OutlinedTimesCircleIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  notify: { displayName: 'Notified by', icon: <EnvelopeIcon/> },\n  skip: { displayName: 'Skipped by', icon: <AngleDoubleRightIcon/> },\n  start: { displayName: 'Started by', icon: <OnRunningIcon/> },\n  cancel: { displayName: 'Canceled by', icon: <ErrorCircleOIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  error: { displayName: 'Error', icon: <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\"/> }\n};\n\nconst operationIcon = (operation) => operationInfo[operation] ? operationInfo[operation].icon : '';\nconst operationDisplayName = (operation) => operationInfo[operation] ? operationInfo[operation].displayName : '';\n\nexport const ActionTranscript = actionList => {\n  const actions = actionList.actionList;\n  return actions ? (\n    <Stack>\n      { actions.map(actionItem =>\n        <div key={ `${actionItem.id}-action` }>\n          <TextContent><Text key={ `${actionItem.id}-action-created_at` } style={ { marginBottom: 0 } }\n            className=\"data-table-detail content\" component={ TextVariants.small }>\n            { timeAgo(actionItem.created_at) }\n          </Text>\n          <Text key={ `${actionItem.id}-action-operation` }  style={ { marginBottom: 0 } }\n            className=\"data-table-detail content\">\n            { operationIcon(actionItem.operation) } { `${operationDisplayName(actionItem.operation)}  ${actionItem.processed_by}` }\n          </Text>\n          { actionItem.comments && <Text key={ `${actionItem.id}-action-comments` } style={ { marginBottom: 0 } }\n            className=\"data-table-detail content\" component={ TextVariants.h6 }>\n            { `${actionItem.comments}` }\n          </Text> } </TextContent>\n          <br/>\n        </div>)\n      }\n    </Stack>\n  ) : <EmptyTable centered\n    aria-label=\"No records\"/>;\n};\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useIsApprovalAdmin, isRequestStateActive } from '../../../helpers/shared/helpers';\nimport { ActionTranscript } from './action-transcript';\n\nimport {\n  Stack,\n  StackItem,\n  Button,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListToggle,\n  DataListItemCells,\n  DataListContent,\n  DropdownItem,\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  TextVariants,\n  TextContent,\n  Level,\n  LevelItem\n} from '@patternfly/react-core';\nimport UserContext from '../../../user-context';\nimport routes from '../../../constants/routes';\n\nexport const Request = ({ item, isExpanded, toggleExpand }) => {\n  const [ isKebabOpen, setIsKebabOpen ] = useState(false);\n  const { userRoles: userRoles } = useContext(UserContext);\n  const isApprovalAdmin = useIsApprovalAdmin(userRoles);\n\n  const onKebabToggle = isOpen => {\n    setIsKebabOpen(isOpen);\n  };\n\n  const onKebabSelect = () => {\n    setIsKebabOpen(isKebabOpen => !isKebabOpen);\n  };\n\n  const checkCapability = (item, capability) => {\n    if (isApprovalAdmin) {\n      return true;\n    }\n\n    return item.metadata && item.metadata.user_capabilities && item.metadata.user_capabilities[capability];\n  };\n\n  const buildRequestActionKebab = (request) => {\n    return (\n      <Dropdown\n        position={ DropdownPosition.right }\n        onSelect={ onKebabSelect }\n        toggle={ <KebabToggle id={ `request-request-dropdown-${request.id}` } onToggle={ onKebabToggle }/> }\n        isOpen={ isKebabOpen }\n        dropdownItems={ [\n          <DropdownItem aria-label=\"Add Comment\" key={ `add_comment_${request.id}` } component=\"button\">\n            <Link\n              id={ `request-${request.id}-request-comment` }\n              to={ {\n                pathname: routes.request.addComment,\n                search: `?request=${request.id}`\n              } }\n              className=\"pf-c-dropdown__menu-item\"\n            >\n              Comment\n            </Link>\n          </DropdownItem>\n        ] }\n        isPlain\n      />\n    );\n  };\n\n  const renderActionList = (request) => {\n    return <ActionTranscript actionList={ request.actions }/>;\n  };\n\n  return (\n    <DataListItem key={ `request-${item.id}` }\n      aria-labelledby={ `check-request-${item.id}` }\n      isExpanded={ isExpanded }>\n      <DataListItemRow>\n        <DataListToggle\n          onClick={ () => toggleExpand(`request-${item.id}`) }\n          isExpanded={ isExpanded }\n          id={ `request-${item.id}` }\n          aria-labelledby={ `request-${item.id} request-${item.id}` }\n          aria-label=\"Toggle details for\"\n        />\n        <DataListItemCells\n          dataListCells={ [\n            <DataListCell key={ item.id }>\n              <span id={ `${item.id}-name` }>{ `${item.group_name ? item.group_name : item.name}` } </span>\n            </DataListCell>,\n            <DataListCell key={ `${item.id}-state` }>\n              <span style={ { textTransform: 'capitalize' } } id={ `${item.id}-state` }>{ `${item.state}` } </span>\n            </DataListCell>,\n            <DataListCell key={ `${item.id}-action` }>\n              <Level>\n                <LevelItem>\n                  { (isRequestStateActive(item.state) && checkCapability(item, 'approve')) &&\n                    <div>\n                      <Link id={ `approve-${item.id}` } to={ { pathname: routes.request.approve, search: `?request=${item.id}` } }>\n                        <Button variant=\"link\" aria-label=\"Approve Request\">\n                          Approve\n                        </Button>\n                      </Link>\n                      <Link id={ `deny-${item.id}` } to={ { pathname: routes.request.deny, search: `?request=${item.id}` } }>\n                        <Button variant=\"link\" className=\"destructive-color\" aria-label=\"Deny Request\">\n                          Deny\n                        </Button>\n                      </Link>\n                    </div> }\n                </LevelItem>\n              </Level>\n            </DataListCell>,\n            <DataListCell\n              key={ `request-${item.id}` }\n              className=\"pf-c-data-list__action\"\n              aria-labelledby={ `request-${item.id} check-request-action${item.id}` }\n              id={ `workflow-${item.id}` }\n              aria-label=\"Actions\">\n              { isRequestStateActive(item.state) && checkCapability(item, 'memo') && buildRequestActionKebab(item) }\n            </DataListCell>\n          ] }/>\n      </DataListItemRow>\n      <DataListContent aria-label=\"Request Content Details\"\n        isHidden={ !isExpanded }>\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent component={ TextVariants.h6 }>\n              { renderActionList(item) }\n            </TextContent>\n          </StackItem>\n        </Stack>\n      </DataListContent>\n    </DataListItem>\n  );\n};\n\nRequest.propTypes = {\n  isLoading: PropTypes.bool,\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    state: PropTypes.string,\n    group_name: PropTypes.string.isRequired,\n    requestActions: PropTypes.shape({\n      data: PropTypes.array\n    }),\n    metadata: PropTypes.shape({\n      user_capabilities: PropTypes.object\n    })\n  }).isRequired,\n  idx: PropTypes.number,\n  isExpanded: PropTypes.bool.isRequired,\n  toggleExpand: PropTypes.func.isRequired,\n  noItems: PropTypes.string\n};\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { DataList } from '@patternfly/react-core';\nimport { Request }  from './request';\nimport { DataListLoader } from '../../../presentational-components/shared/loader-placeholders';\n\nclass RequestList extends Component {\n  state = {\n    expanded: []\n  };\n\n  toggleExpand = id => this.setState(({ expanded }) => {\n    const index = expanded.indexOf(id);\n    const newExpanded =\n      index >= 0 ? [ ...expanded.slice(0, index), ...expanded.slice(index + 1, expanded.length) ] : [ ...expanded, id ];\n    return ({ expanded: newExpanded });\n  });\n\n  isExpanded = key => {\n    return this.state.expanded.includes(key);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div>\n          { this.props.isLoading && (\n            <Fragment>\n              <PageHeader>\n                <PageHeaderTitle title={ this.props.noItems }/>\n              </PageHeader>\n              <DataListLoader/>\n            </Fragment>\n          ) }\n        </div>\n        { this.props.items.length > 0 && (\n          <DataList aria-label=\"Expandable data list\">\n            { this.props.items.map((item, idx) => (\n              <Request\n                key={ item.id }\n                item={ item }\n                idx={ idx }\n                isActive={ idx === 0 }\n                isExpanded={ this.isExpanded(`request-${item.id}`) }\n                toggleExpand={ this.toggleExpand }\n              />)) }\n          </DataList>)\n        }\n      </Fragment>\n    );\n  };\n}\n\nRequestList.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  noItems: PropTypes.string,\n  active_request: PropTypes.number\n};\n\nRequestList.defaultProps = {\n  items: []\n};\n\nexport default RequestList;\n\n","import React, { Fragment }  from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport RequestList from './request-list';\n\nconst RequestTranscript = ({ request }) => {\n  return (<Fragment>\n    <Title size=\"sm\" style={ { paddingLeft: '32px' } }> Request transcript </Title>\n    <RequestList items={ request.requests && request.requests.length > 0 ? request.requests : [ request ] }/>\n  </Fragment>);\n};\n\nRequestTranscript.propTypes = {\n  request: PropTypes.shape({\n    content: PropTypes.object,\n    requests: PropTypes.array\n  }).isRequired\n};\n\nexport default RequestTranscript;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { Route, useLocation, Switch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport ActionModal from '../action-modal';\nimport RequestInfoBar from './request-info-bar';\nimport RequestTranscript from './request-transcript';\nimport { fetchRequest, fetchRequestContent } from '../../../redux/actions/request-actions';\nimport { RequestLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { TopToolbar, TopToolbarTitle } from '../../../presentational-components/shared/top-toolbar';\nimport UserContext from '../../../user-context';\nimport useQuery from '../../../utilities/use-query';\nimport routes from '../../../constants/routes';\nimport { approvalPersona } from '../../../helpers/shared/helpers';\n\nconst initialState = {\n  isFetching: true\n};\nconst requestState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst RequestDetail = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(requestState, initialState);\n\n  const { selectedRequest, requestContent } = useSelector(\n    ({\n      requestReducer: {\n        requestContent: requestContent,\n        selectedRequest: selectedRequest\n      }\n    }) => ({ selectedRequest, requestContent })\n  );\n\n  const [{ request: id }] = useQuery([ 'request' ]);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { userRoles: userRoles } = useContext(UserContext);\n\n  useEffect(() => {\n    Promise.all([ dispatch(fetchRequest(id, approvalPersona(userRoles))), dispatch(fetchRequestContent(id, approvalPersona(userRoles))) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderRequestDetails = () => {\n    if (isFetching || !selectedRequest || Object.keys(selectedRequest).length === 0) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <RequestLoader />\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Fragment>\n          <GridItem md={ 4 } lg={ 3 } className=\"info-bar\">\n            <RequestInfoBar request={ selectedRequest } requestContent={ requestContent }/>\n          </GridItem>\n          <GridItem md={ 8 } lg={ 9 } className=\"detail-pane\">\n            <RequestTranscript request={ selectedRequest } url={ location.url }/>\n          </GridItem>\n        </Fragment>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Switch>\n        <Route exact path={ routes.request.addComment }>\n          <ActionModal actionType={ 'Add Comment' }\n            closeUrl={ { pathname: routes.request.index, search: `?request=${selectedRequest.id}` } }/>\n        </Route>\n        <Route exact path={ routes.request.approve } render={ props =>\n          <ActionModal { ...props } actionType={ 'Approve' }\n            closeUrl={ { pathname: routes.request.index, search: `?request=${selectedRequest.id}` } } /> } />\n        <Route exact path={ routes.request.deny } render={ props =>\n          <ActionModal { ...props } actionType={ 'Deny' }\n            closeUrl={ { pathname: routes.request.index, search: `?request=${selectedRequest.id}` } } /> } />\n      </Switch>\n      <TopToolbar\n        breadcrumbs={ [\n          { title: 'Request queue', to: routes.requests.index, id: 'requests' },\n          { title: `Request ${id}`, id }\n        ] }\n        paddingBottom={ true }\n      >\n        <TopToolbarTitle title={ `Request ${id}` } />\n      </TopToolbar>\n      <Section type=\"content\">\n        <Grid gutter=\"md\">\n          { renderRequestDetails() }\n        </Grid>\n      </Section>\n    </Fragment>\n  );\n};\n\nexport default RequestDetail;\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import React, { Fragment } from 'react';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nconst SummaryContent = () => {\n  const { getState } = useFormApi();\n  const { name, description, wfGroups } = getState().values;\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                    Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              { wfGroups && wfGroups.length > 0 && wfGroups.map((group, idx) => (\n                <Fragment key={ group.value }>\n                  <Grid gutter=\"md\">\n                    <GridItem span={ 2 }>\n                      <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                        { idx === 0 ? 'Groups' : '' }\n                      </Text>\n                    </GridItem>\n                    <GridItem span={ 10 }>\n                      <Text className=\"data-table-detail content\" component={ TextVariants.p }>\n                        { group.label }\n                      </Text>\n                    </GridItem>\n                  </Grid>\n                </Fragment>)\n              ) }\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nexport default SummaryContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\n\nimport SummaryContent from '../workflow/add-groups/summary-content';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst componentMapperExtended = {\n  ...componentMapper,\n  summary: SummaryContent\n};\n\nconst FormRenderer = ({ formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      componentMapper={ componentMapperExtended }\n      FormTemplate={ (props) => <FormTemplate { ...props } { ...buttonPositioning[formContainer] }/> }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import * as ActionTypes from '../action-types';\nimport * as RequestHelper from '../../helpers/request/request-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const fetchRequests = (persona, pagination) => (dispatch, getState) => {\n  const { sortBy, requests, filterValue } = getState().requestReducer;\n\n  let finalPagination = pagination || defaultSettings;\n\n  if (!pagination && requests) {\n    const { limit, offset } = requests.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_REQUESTS,\n    payload: RequestHelper.fetchRequests(filterValue, finalPagination, persona, sortBy)\n  });\n};\n\nexport const fetchRequest = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST,\n  payload: RequestHelper.fetchRequestWithSubrequests(apiProps, persona)\n});\n\nexport const fetchRequestContent = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST_CONTENT,\n  payload: RequestHelper.fetchRequestContent(apiProps, persona)\n});\n\nexport const createRequestAction = (actionName, requestId, actionIn) => ({\n  type: ActionTypes.CREATE_REQUEST_ACTION,\n  payload: RequestHelper.createRequestAction(requestId, actionIn),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success',\n        description: `The ${actionName} was successful.`\n      },\n      rejected: {\n        variant: 'danger',\n        title: `${actionName} error`,\n        description: `The ${actionName} action failed.`\n      }\n    }\n  }\n});\n\nexport const expandRequest = (id) => ({\n  type: ActionTypes.EXPAND_REQUEST,\n  payload: id\n});\n\nexport const sortRequests = (sortBy) => ({\n  type: ActionTypes.SORT_REQUESTS,\n  payload: sortBy\n});\n\nexport const setFilterValueRequests = (filterValue, type) => ({\n  type: ActionTypes.SET_FILTER_REQUESTS,\n  payload: { filterValue, type }\n});\n\nexport const clearFilterValueRequests = () => ({\n  type: ActionTypes.CLEAR_FILTER_REQUESTS\n});\n\nexport const resetRequestList = () => ({\n  type: ActionTypes.RESET_REQUEST_LIST\n});\n","import { getActionApi, getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_REQUESTER_PERSONA, APPROVAL_APPROVER_PERSONA } from '../shared/helpers';\n\nconst actionApi = getActionApi();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sortPropertiesMapper = (property) => ({\n  'request-id': 'id',\n  opened: 'created_at',\n  requester: 'requester_name',\n  status: 'state'\n}[property] || property\n);\n\nconst filterQuery = (filterValue) => {\n  const query = [];\n  if (filterValue.name) {\n    query.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.requester) {\n    query.push(`filter[requester_name][contains_i]=${filterValue.requester}`);\n  }\n\n  if (filterValue.status) {\n    filterValue.status.forEach(state => {\n      query.push(`filter[state][eq][]=${state}`);\n    });\n  }\n\n  if (filterValue.decision) {\n    filterValue.decision.forEach(dec => {\n      query.push(`filter[decision][eq][]=${dec}`);\n    });\n  }\n\n  return query.join('&');\n};\n\nexport function fetchRequests(filter = {}, pagination = defaultSettings, persona = undefined, sortBy) {\n  const paginationQuery = `&limit=${Math.max(pagination.limit, 10)}&offset=${pagination.offset}`;\n  const sortQuery = `&sort_by=${sortPropertiesMapper(sortBy.property)}:${sortBy.direction}`;\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/?${filterQuery(filter)}${paginationQuery}${sortQuery}`;\n  const fetchHeaders = persona ? { 'x-rh-persona': persona } : undefined;\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n}\n\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    id\n    name\n    number_of_children\n    decision\n    description\n    group_name\n    number_of_finished_children\n    state\n    actions {\n      id\n      operation\n      comments\n      created_at\n      processed_by\n    }\n    requests {\n      id\n      name\n      number_of_children\n      decision\n      description\n      group_name\n      number_of_finished_children\n      state\n      workflow_id\n      parent_id\n      actions {\n        id\n        operation\n        comments\n        created_at\n        processed_by\n      }\n    }\n  }\n}`;\n\nexport const fetchRequestTranscript = (requestId, persona) => {\n  const fetchHeaders = (persona && persona !== APPROVAL_APPROVER_PERSONA) ? { 'x-rh-persona': persona }\n    : { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return graphqlInstance({ method: 'post', url: `${APPROVAL_API_BASE}/graphql`,\n    headers: fetchHeaders, data: { query: requestTranscriptQuery(requestId) }})\n  .then(({ data: { requests }}) => requests);\n};\n\nexport const fetchRequestContent = (id) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}/content`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport const fetchRequestCapabilities = (id, isParent) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}${isParent ? '/requests' : ''}`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport async function fetchRequestWithSubrequests(id, persona) {\n  const requestData = await fetchRequestTranscript(id, persona);\n\n  if (!requestData || requestData.length === 0) { return {}; }\n\n  if (persona === APPROVAL_APPROVER_PERSONA) {\n    if (requestData && requestData.length > 0 && requestData[0].number_of_children > 0) {\n      const result = await fetchRequestCapabilities(id, true);\n\n      if (result && result.data) {\n        requestData[0].requests = requestData[0].requests.map(request => {\n          return {\n            ...result.data.find((item) => (item.id === request.id) && item.metadata),\n            ...request\n          };\n        });\n      }\n    }\n    else {\n      const request = await fetchRequestCapabilities(id, false);\n      if (request) {\n        requestData[0] = { ...requestData[0], metadata: request.metadata };\n      }\n    }\n  }\n\n  return requestData[0];\n}\n\nexport const createRequestAction = (requestId, actionIn) => actionApi.createAction(requestId, actionIn);\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nexport const createRequestCommentSchema = (isDeny = false) => ({\n  fields: [{\n    component: componentTypes.TEXTAREA,\n    name: 'comments',\n    isRequired: isDeny,\n    label: isDeny ? 'Reason' : 'Comment',\n    ...(isDeny && { validate: [{ type: validatorTypes.REQUIRED }]})\n  }]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { createRequestAction } from '../../redux/actions/request-actions';\nimport { createRequestCommentSchema } from '../../forms/request-comment-form.schema';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\n\nconst ActionModal = ({\n  actionType,\n  addNotification,\n  createRequestAction,\n  closeUrl,\n  postMethod\n}) => {\n  const { push } = useHistory();\n  const [{ request: id }] = useQuery([ 'request' ]);\n\n  const onSubmit = (data) => {\n    const operationType = { 'Add Comment': 'memo', Approve: 'approve', Deny: 'deny' };\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n\n    return postMethod ?\n      createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => postMethod()).then(() => push(closeUrl))\n      : createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n    addNotification({\n      variant: 'warning',\n      title: actionName,\n      dismissable: true,\n      description: `${actionName} was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ actionType === 'Add Comment' ? `Request #${id}` : `${actionType} Request #${id}` }\n      isOpen\n      onClose={ onCancel }\n    >\n      <FormRenderer\n        schema={ createRequestCommentSchema(actionType === 'Deny') }\n        onSubmit={ onSubmit }\n        onCancel={ onCancel }\n        formContainer=\"modal\"\n      />\n    </Modal>\n  );\n};\n\nActionModal.defaultProps = {\n  closeUrl: routes.requests.index\n};\n\nActionModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  createRequestAction: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  actionType: PropTypes.string,\n  closeUrl: PropTypes.oneOfType([ PropTypes.string, PropTypes.shape({ patname: PropTypes.string, search: PropTypes.string }) ])\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRequestAction\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(ActionModal);\n"],"sourceRoot":""}