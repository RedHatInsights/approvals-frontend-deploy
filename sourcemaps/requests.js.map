{"version":3,"sources":["webpack:///./src/helpers/request/request-helper.js","webpack:///./src/redux/actions/request-actions.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/forms/request-comment-form.schema.js","webpack:///./src/smart-components/request/action-modal.js","webpack:///./src/smart-components/request/expandable-content.js","webpack:///./src/smart-components/request/request-table-helpers.js","webpack:///./src/smart-components/request/request-detail/request-info-bar.js","webpack:///./src/smart-components/request/request-detail/action-transcript.js","webpack:///./src/smart-components/request/request-detail/request.js","webpack:///./src/smart-components/request/request-detail/request-list.js","webpack:///./src/smart-components/request/request-detail/request-transcript.js","webpack:///./src/smart-components/request/request-detail/request-detail.js","webpack:///./src/smart-components/request/requests.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js"],"names":["requestApi","getRequestApi","actionApi","getActionApi","graphqlInstance","getGraphqlInstance","fetchRequests","filter","pagination","defaultSettings","persona","undefined","paginationQuery","limit","offset","filterQuery","fetchUrl","APPROVAL_API_BASE","fetchHeaders","getAxiosInstance","method","url","headers","fetchRequestTranscript","requestId","parent_id","data","query","then","requests","fetchRequestActions","id","listActionsByRequest","fetchRequestContent","fetchRequestWithSubrequests","a","showRequest","xRhPersona","requestData","number_of_children","subRequests","children","requestActions","actions","createRequestAction","actionIn","createAction","type","ActionTypes","payload","RequestHelper","fetchRequest","apiProps","actionName","meta","notifications","fulfilled","variant","title","description","rejected","Select","input","options","isReadOnly","isDisabled","isRequired","FieldProvider","rest","FormSelect","inputValue","selectOptions","find","value","label","createOptions","map","props","FormSelectOption","key","toString","propTypes","PropTypes","object","arrayOf","shape","any","string","bool","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","FormGroup","fieldId","isValid","helperTextInvalid","TextContent","Text","component","TextVariants","small","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","className","formFieldsMapper","componentTypes","SELECT","layoutMapper","oneOf","defaultProps","schemaFields","isDeny","TEXTAREA_FIELD","name","createRequestCommentSchema","schema","validate","validatorTypes","REQUIRED","fields","ActionModal","push","history","match","params","actionType","addNotification","closeUrl","postMethod","onCancel","dismissable","Modal","isLarge","isOpen","onClose","schemaType","onSubmit","operationType","Approve","Deny","operation","func","location","withRouter","connect","dispatch","bindActionCreators","ExpandedItem","detail","h5","node","ExpandableContent","state","reason","requestActive","isRequestStateActive","useState","requestContent","setRequestContent","isLoading","setIsLoading","fetchStarted","setIsFetching","expandedRequests","useSelector","requestReducer","useEffect","includes","Bullseye","Spinner","Level","LevelItem","product","to","Button","aria-label","portfolio","platform","content","number","uname","createRows","reduce","acc","requester_name","created_at","notified_at","finished_at","decision","cells","timeAgo","parent","fullWidth","RequestInfoBar","request","h6","Object","keys","param","operationInfo","memo","displayName","icon","approve","deny","notify","skip","start","cancel","ActionTranscript","actionList","Stack","actionItem","style","marginBottom","operationDisplayName","processed_by","comments","centered","Request","isKebabOpen","setState","Dropdown","position","DropdownPosition","right","onSelect","onKebabSelect","toggle","KebabToggle","onToggle","onKebabToggle","dropdownItems","DropdownItem","isPlain","this","item","isExpanded","DataListItem","aria-labelledby","DataListItemRow","DataListToggle","onClick","toggleExpand","DataListItemCells","dataListCells","DataListCell","idx","group_name","textTransform","buildRequestActionKebab","DataListContent","isHidden","gutter","StackItem","fetchRequestDetails","Component","array","noItems","RequestList","expanded","index","indexOf","slice","length","PageHeader","items","DataList","isActive","active_request","RequestTranscript","Title","size","paddingLeft","initialState","isFetching","requestState","action","RequestDetail","useReducer","stateDispatch","selectedRequest","useParams","useLocation","useDispatch","userRoles","useContext","UserContext","roles","approvalPersona","Promise","all","exact","path","render","breadcrumbs","paddingBottom","Section","Grid","backgroundColor","minHeight","GridItem","md","columns","cellFormatters","expandable","debouncedFilter","asyncDebounce","filteringCallback","filterValue","isFiltering","requestsListState","Requests","useHistory","scrollToTop","handleFilterChange","tabItems","eventKey","routes","actionResolver","areActionsDisabled","handlePagination","_apiProps","onCollapse","setRows","setOpen","expandRequest","rows","isApprovalAdmin","fetchData","titlePlural","titleSingular","onFilterChange","renderEmptyState","Icon","SearchIcon","PrimaryAction","asyncFunction","debounceTime","onlyResolvesLast","awesomeDebouncePromise","ApprovalBreadcrumbs","Breadcrumb","values","BreadcrumbItem","TopToolbar","oneOfType","TopToolbarTitle","h1","p","AppTabs","pathname","activeTab","activeKey","_event","tabIndex","TableEmptyState","renderDescription","FilterToolbarItem","searchValue","placeholder","isClearable","ToolbarItem","TextInput","onChange","width","height","AsyncPagination","count","apiRequest","isCompact","Pagination","perPage","itemCount","onPerPageSelect","page","getCurrentPage","onSetPage","debounce","getNewPage","debouncePromise","direction","BottomPaginationContainer","TableToolbarView","isSelectable","toolbarButtons","setCheckedItems","row","setSelected","newData","selected","checkedItems","page-type","Toolbar","flex","ToolbarGroup","renderToolbar","Table","_index","_isOpen","dropDirection"],"mappings":"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","file":"js/requests.js","sourcesContent":["import { getActionApi, getRequestApi, getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst requestApi = getRequestApi();\nconst actionApi = getActionApi();\nconst graphqlInstance = getGraphqlInstance();\n\nexport function fetchRequests(filter = '', pagination = defaultSettings, persona = undefined) {\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `filter[name][contains_i]=${filter}`;\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/?${filterQuery}${paginationQuery}`;\n  const fetchHeaders = persona ? { 'x-rh-persona': persona } : undefined;\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n}\n\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests (filter: { parent_id: \"${parent_id}\" } ) {\n    actions {\n      id\n      operation \n      comments \n      created_at \n      processed_by\n    }\n    id\n    name\n    number_of_children\n    decision\n    description\n    group_name\n    number_of_finished_children\n    parent_id\n    state\n    workflow_id\n  }\n}`;\n\nexport const fetchRequestTranscript = (requestId, persona) => {\n  const fetchHeaders = persona ? { 'x-rh-persona': persona } : undefined;\n  return graphqlInstance({ method: 'post', url: `${APPROVAL_API_BASE}/graphql`,\n    headers: fetchHeaders, data: { query: requestTranscriptQuery(requestId) }})\n  .then(({ data: { requests }}) => requests);\n};\n\nexport async function fetchRequest(id) {\n  return await requestApi.showRequest(id);\n}\n\nexport const fetchRequestActions = (id, persona) => {\n  return actionApi.listActionsByRequest(id, persona);\n};\n\nexport const fetchRequestContent = (id, persona) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}/content`;\n  const fetchHeaders = persona ? { 'x-rh-persona': persona } : undefined;\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport async function fetchRequestWithActions(id, persona = undefined) {\n  let requestData = await requestApi.showRequest(id, { xRhPersona: persona });\n  const requestActions = await fetchRequestActions(id);\n\n  if (requestData.number_of_children > 0) {\n    const subRequests = await requestApi.listRequestsByRequest(id, persona);\n    const promises = subRequests.data.map(request => fetchRequestWithActions(request.id, persona));\n    const subRequestsWithActions = await Promise.all(promises);\n    requestData = { ...requestData, children: subRequestsWithActions };\n  }\n\n  return  { ...requestData, actions: requestActions };\n}\n\nexport async function fetchRequestWithSubrequests(id, persona) {\n  let requestData = await requestApi.showRequest(id, { xRhPersona: persona });\n\n  if (requestData.number_of_children > 0) {\n    const subRequests = await fetchRequestTranscript(id, persona);\n    requestData = { ...requestData, children: subRequests };\n  } else {\n    const requestActions = await fetchRequestActions(id, persona);\n    requestData = { ...requestData, actions: requestActions ? requestActions.data : []};\n  }\n\n  return  { ...requestData };\n}\n\nexport async function createRequestAction (requestId, actionIn) {\n  return await actionApi.createAction(requestId, actionIn);\n}\n","import * as ActionTypes from '../action-types';\nimport * as RequestHelper from '../../helpers/request/request-helper';\n\nexport const fetchRequests = (filter, pagination, persona) => ({\n  type: ActionTypes.FETCH_REQUESTS,\n  payload: RequestHelper.fetchRequests(filter, pagination, persona)\n});\n\nexport const fetchRequest = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST,\n  payload: RequestHelper.fetchRequestWithSubrequests(apiProps, persona)\n});\n\nexport const fetchRequestContent = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST_CONTENT,\n  payload: RequestHelper.fetchRequestContent(apiProps, persona)\n});\n\nexport const createRequestAction = (actionName, requestId, actionIn) => ({\n  type: ActionTypes.CREATE_REQUEST_ACTION,\n  payload: RequestHelper.createRequestAction(requestId, actionIn),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success',\n        description: `The ${actionName} was successful.`\n      },\n      rejected: {\n        variant: 'danger',\n        title: `${actionName} error`,\n        description: `The ${actionName} action failed.`\n      }\n    }\n  }\n});\n\nexport const expandRequest = (id) => ({\n  type: ActionTypes.EXPAND_REQUEST,\n  payload: id\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  const selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\n\nconst schemaFields = (isDeny) =>({\n  component: componentTypes.TEXTAREA_FIELD,\n  name: 'comments',\n  type: 'text',\n  isRequired: isDeny,\n  label: isDeny ? 'Reason' : 'Comment'\n});\n\nexport const createRequestCommentSchema = (isDeny = false) => {\n  const schema = schemaFields(isDeny);\n  if (isDeny) {\n    schema.validate = [{\n      type: validatorTypes.REQUIRED\n    }];\n  }\n\n  return { fields: [ schema ]};\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormRenderer from '../common/form-renderer';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { createRequestAction } from '../../redux/actions/request-actions';\nimport { createRequestCommentSchema } from '../../forms/request-comment-form.schema';\n\nconst ActionModal = ({\n  history: { push },\n  match: { params: { id }},\n  actionType,\n  addNotification,\n  createRequestAction,\n  closeUrl,\n  postMethod\n}) => {\n  const onSubmit = (data) => {\n    const operationType = { 'Add Comment': 'memo', Approve: 'approve', Deny: 'deny' };\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n    return postMethod ?\n      createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => postMethod()).then(() => push(closeUrl))\n      : createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n    addNotification({\n      variant: 'warning',\n      title: actionName,\n      dismissable: true,\n      description: `${actionName} was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ actionType === 'Add Comment' ? `Request #${id}` : `${actionType} Request #${id}` }\n      isOpen\n      onClose={ onCancel }\n    >\n      <FormRenderer\n        schema={ createRequestCommentSchema (actionType === 'Deny') }\n        schemaType=\"default\"\n        onSubmit={ onSubmit }\n        onCancel={ onCancel }\n        formContainer=\"modal\"\n      />\n    </Modal>\n  );\n};\n\nActionModal.defaultProps = {\n  closeUrl: '/requests'\n};\n\nActionModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addNotification: PropTypes.func.isRequired,\n  createRequestAction: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  id: PropTypes.string,\n  actionType: PropTypes.string,\n  closeUrl: PropTypes.string,\n  match: PropTypes.object,\n  location: PropTypes.object\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRequestAction\n}, dispatch);\n\nexport default withRouter(connect(null, mapDispatchToProps)(ActionModal));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { TextContent, Text, TextVariants, Level, LevelItem, Button, Bullseye } from '@patternfly/react-core';\nimport { isRequestStateActive } from '../../helpers/shared/helpers';\nimport { fetchRequestContent } from '../../helpers/request/request-helper';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/components/Spinner';\n\nexport const ExpandedItem = ({ title = '', detail = '' }) => (\n  <TextContent>\n    <Text className=\"data-table-detail heading\" component={ TextVariants.small }>{ title }</Text>\n    <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ detail }</Text>\n  </TextContent>\n);\n\nExpandedItem.propTypes = {\n  title: PropTypes.node,\n  detail: PropTypes.node\n};\n\nconst ExpandableContent = ({ id, number_of_children, state, reason }) => {\n  const requestActive = isRequestStateActive(state) && !number_of_children;\n  const [ requestContent, setRequestContent ] = useState([]);\n  const [ isLoading, setIsLoading ] = useState(true);\n  const [ fetchStarted, setIsFetching ] = useState(false);\n\n  const expandedRequests = useSelector(({ requestReducer: { expandedRequests }}) => expandedRequests);\n\n  useEffect(() => {\n    if (!fetchStarted && isLoading && expandedRequests.includes(id)) {\n      setIsFetching(true);\n      fetchRequestContent(id).then((data) => { setRequestContent(data); setIsLoading(false); }).catch(() => setIsLoading(false));\n    }\n  }, [ expandedRequests ]);\n\n  if (isLoading) {\n    return (<Bullseye>\n      <Spinner/>\n    </Bullseye>);\n  }\n\n  return (\n    <Fragment>\n      <Level>\n        <LevelItem>\n          <ExpandedItem title=\"Product\" detail={ requestContent ? requestContent.product : 'Unknown' } />\n        </LevelItem>\n        { requestActive && <LevelItem>\n          <Link to={ `/requests/approve/${id}` }  className=\"pf-u-mr-md\">\n            <Button variant=\"primary\" aria-label=\"Approve Request\" isDisabled={ !requestActive }>\n              Approve\n            </Button>\n          </Link>\n          <Link to={ `/requests/deny/${id}` }>\n            <Button variant=\"danger\" aria-label=\"Deny Request\">\n              Deny\n            </Button>\n          </Link>\n        </LevelItem>\n        }</Level>\n      <Level>\n        <LevelItem>\n          <ExpandedItem title=\"Portfolio\" detail={ requestContent ? requestContent.portfolio : 'Unknown' }/>\n          <ExpandedItem title=\"Platform\" detail={ requestContent ? requestContent.platform : 'Unknown' }/>\n          <ExpandedItem title=\"Reason\" detail={ reason ? reason : '' }/>\n        </LevelItem>\n      </Level>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  id: PropTypes.string,\n  content: PropTypes.object,\n  number_of_children: PropTypes.number,\n  uname: PropTypes.string,\n  state: PropTypes.string,\n  reason: PropTypes.string\n};\n\nexport default ExpandableContent;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\n\nimport ExpandableContent from './expandable-content';\nimport { timeAgo }  from '../../helpers/shared/helpers';\n\nexport const createRows = (data) =>\n  data.reduce((acc, { id,\n    name,\n    requester_name,\n    created_at,\n    notified_at,\n    finished_at,\n    state,\n    decision,\n    reason,\n    number_of_children\n  }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      state,\n      number_of_children,\n      cells: [\n        <Fragment key={ id }><Link to={ `/requests/detail/${id}` }><Button variant=\"link\"> { name } </Button></Link></Fragment>,\n        requester_name,\n        timeAgo(created_at),\n        finished_at ? timeAgo(finished_at) : (notified_at ? timeAgo(notified_at) : timeAgo(created_at)),\n        state,\n        decision\n      ]\n    }, {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [{\n        title: <ExpandableContent id={ id }\n          number_of_children={ number_of_children }\n          state={ state }\n          reason={ reason }/>\n      }]\n    }\n  ]), []);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\n\nconst RequestInfoBar = ({ request, requestContent }) => {\n  return (\n    <TextContent>\n      <Text component={ TextVariants.small }>Product: <br/></Text>\n      <Text>{ requestContent ? requestContent.product : '' }</Text>\n      <Text component={ TextVariants.small }>Portfolio: <br/></Text>\n      <Text>{ requestContent ? requestContent.portfolio : '' }</Text>\n      <Text component={ TextVariants.small }>Platform: <br/></Text>\n      <Text>{ requestContent ? requestContent.platform : ' ' }</Text>\n      <Text component={ TextVariants.small }>Requester: </Text>\n      <Text component={ TextVariants.h6 }>{ request.requester_name }</Text>\n      <Text component={ TextVariants.h6 }>Order Parameters: <br/> </Text>\n      { requestContent.params && Object.keys(requestContent.params).map(param => {\n        return ((requestContent.params[param]) &&\n                  <Text key={ param } component={ TextVariants.small }>\n                    { `${param}: ${requestContent.params[param]}` }\n                  </Text>);\n      })\n      }\n    </TextContent>\n  );\n};\n\nRequestInfoBar.propTypes = {\n  request: PropTypes.shape({\n    requester_name: PropTypes.string\n  }).isRequired,\n  requestContent: PropTypes.object\n};\nexport default RequestInfoBar;\n\n","import React from 'react';\nimport { timeAgo }  from '../../../helpers/shared/helpers';\nimport {\n  Stack,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport { CheckCircleIcon,\n  CommentIcon,\n  EnvelopeIcon,\n  OutlinedTimesCircleIcon,\n  AngleDoubleRightIcon,\n  OnRunningIcon,\n  ErrorCircleOIcon,\n  ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\n\nconst operationInfo = {\n  memo: { displayName: 'Comment from', icon: <CommentIcon/> },\n  approve: { displayName: 'Approved by', icon: <CheckCircleIcon className=\"pf-u-mr-sm icon-success-fill\"/> },\n  deny: { displayName: 'Denied by', icon: <OutlinedTimesCircleIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  notify: { displayName: 'Notified by', icon: <EnvelopeIcon/> },\n  skip: { displayName: 'Skipped by', icon: <AngleDoubleRightIcon/> },\n  start: { displayName: 'Started by', icon: <OnRunningIcon/> },\n  cancel: { displayName: 'Canceled by', icon: <ErrorCircleOIcon className=\"pf-u-mr-sm icon-danger-fill\"/> },\n  error: { displayName: 'Error', icon: <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\"/> }\n};\n\nconst operationIcon = (operation) => operationInfo[operation] ? operationInfo[operation].icon : '';\nconst operationDisplayName = (operation) => operationInfo[operation] ? operationInfo[operation].displayName : '';\n\nexport const ActionTranscript = actionList => {\n  const actions = actionList.actionList;\n  return actions ? (\n    <Stack>\n      { actions.map(actionItem =>\n        <div key={ `${actionItem.id}-action` }>\n          <TextContent><Text key={ `${actionItem.id}-action-created_at` } style={ { marginBottom: 0 } }\n            className=\"data-table-detail content\" component={ TextVariants.small }>\n            { timeAgo(actionItem.created_at) }\n          </Text>\n          <Text key={ `${actionItem.id}-action-operation` }  style={ { marginBottom: 0 } }\n            className=\"data-table-detail content\">\n            { operationIcon(actionItem.operation) } { `${operationDisplayName(actionItem.operation)}  ${actionItem.processed_by}` }\n          </Text>\n          { actionItem.comments && <Text key={ `${actionItem.id}-action-comments` } style={ { marginBottom: 0 } }\n            className=\"data-table-detail content\" component={ TextVariants.h6 }>\n            { `${actionItem.comments}` }\n          </Text> } </TextContent>\n          <br/>\n        </div>)\n      }\n    </Stack>\n  ) : <EmptyTable centered\n    aria-label=\"No records\"/>;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { isRequestStateActive } from '../../../helpers/shared/helpers';\nimport { ActionTranscript } from './action-transcript';\n\nimport {\n  Stack,\n  StackItem,\n  Button,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListToggle,\n  DataListItemCells,\n  DataListContent,\n  DropdownItem,\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  TextVariants,\n  TextContent,\n  Level,\n  LevelItem\n} from '@patternfly/react-core';\n\nclass Request extends Component {\n  state = {\n    isKebabOpen: false\n  };\n\n  onKebabToggle = isOpen => {\n    this.setState({\n      isKebabOpen: isOpen\n    });\n  };\n\n  onKebabSelect = () => {\n    this.setState({ isKebabOpen: !this.state.isKebabOpen });\n  };\n\n  buildRequestActionKebab = (request) => {\n    return (\n      <Dropdown\n        position={ DropdownPosition.right }\n        onSelect={ this.onKebabSelect }\n        toggle={ <KebabToggle id={ `request-request-dropdown-${request.id}` } onToggle={ this.onKebabToggle }/> }\n        isOpen={ this.state.isKebabOpen }\n        dropdownItems={ [\n          <DropdownItem aria-label=\"Add Comment\" key={ `add_comment_${request.id}` }>\n            <Link\n              id={ `request-${request.id}-request-comment` }\n              to={ `/requests/detail/${request.id}/add_comment` }\n              className=\"pf-c-dropdown__menu-item\"\n            >\n              Comment\n            </Link>\n          </DropdownItem>\n        ] }\n        isPlain\n      />\n    );\n  };\n\n  fetchRequestDetails = (request) => {\n    return <ActionTranscript actionList={ request.actions }/>;\n  };\n\n  render() {\n    const { item, isExpanded } = this.props;\n    const requestActive = isRequestStateActive(item.state);\n    return (\n      <DataListItem key={ `request-${item.id}` }\n        aria-labelledby={ `check-request-${item.id}` }\n        isExpanded={ isExpanded }>\n        <DataListItemRow>\n          <DataListToggle\n            onClick={ () => this.props.toggleExpand(`request-${item.id}`) }\n            isExpanded={ isExpanded }\n            id={ `request-${item.id}` }\n            aria-labelledby={ `request-${item.id} request-${item.id}` }\n            aria-label=\"Toggle details for\"\n          />\n          <DataListItemCells\n            dataListCells={ [\n              <DataListCell key={ item.id }>\n                <span id={ `${item.id}-name` }>{ `${this.props.idx + 1}. ${item.parent_id ? item.group_name : item.name}` } </span>\n              </DataListCell>,\n              <DataListCell key={ `${item.id}-state` }>\n                <span style={ { textTransform: 'capitalize' } } id={ `${item.id}-state` }>{ `${item.state}` } </span>\n              </DataListCell>,\n              <DataListCell key={ `${item.id}-action` }>\n                <Level>\n                  <LevelItem>\n                    { (requestActive) &&\n                    <div>\n                      <Link id={ `approve-${item.id}` } to={ `/requests/detail/${item.id}/approve` }>\n                        <Button variant=\"link\" aria-label=\"Approve Request\">\n                          Approve\n                        </Button>\n                      </Link>\n                      <Link id={ `deny-${item.id}` } to={ `/requests/detail/${item.id}/deny` }>\n                        <Button variant=\"link\" className=\"destructive-color\" aria-label=\"Deny Request\">\n                          Deny\n                        </Button>\n                      </Link>\n                    </div> }\n                  </LevelItem>\n                </Level>\n              </DataListCell>,\n              <DataListCell\n                key={ `request-${item.id}` }\n                className=\"pf-c-data-list__action\"\n                aria-labelledby={ `request-${item.id} check-request-action${item.id}` }\n                id={ `workflow-${item.id}` }\n                aria-label=\"Actions\">\n                { requestActive && this.buildRequestActionKebab(item) }\n              </DataListCell>\n            ] }/>\n        </DataListItemRow>\n        <DataListContent aria-label=\"Request Content Details\"\n          isHidden={ !isExpanded }>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent component={ TextVariants.h6 }>\n                { this.fetchRequestDetails(item) }\n              </TextContent>\n            </StackItem>\n          </Stack>\n        </DataListContent>\n\n      </DataListItem>\n    );\n  };\n}\n\nRequest.propTypes = {\n  isLoading: PropTypes.bool,\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    state: PropTypes.string,\n    parent_id: PropTypes.string.isRequired,\n    group_name: PropTypes.string.isRequired,\n    requestActions: PropTypes.shape({\n      data: PropTypes.array\n    })\n  }).isRequired,\n  idx: PropTypes.number,\n  isExpanded: PropTypes.bool.isRequired,\n  toggleExpand: PropTypes.func.isRequired,\n  noItems: PropTypes.string\n};\n\nexport default Request;\n","import React, { Component, Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { DataList } from '@patternfly/react-core';\nimport Request from './request';\nimport { DataListLoader } from '../../../presentational-components/shared/loader-placeholders';\n\nclass RequestList extends Component {\n  state = {\n    expanded: []\n  };\n\n  toggleExpand = id => this.setState(({ expanded }) => {\n    const index = expanded.indexOf(id);\n    const newExpanded =\n      index >= 0 ? [ ...expanded.slice(0, index), ...expanded.slice(index + 1, expanded.length) ] : [ ...expanded, id ];\n    return ({ expanded: newExpanded });\n  });\n\n  isExpanded = key => {\n    return this.state.expanded.includes(key);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div>\n          { this.props.isLoading && (\n            <Fragment>\n              <PageHeader>\n                <PageHeaderTitle title={ this.props.noItems }/>\n              </PageHeader>\n              <DataListLoader/>\n            </Fragment>\n          ) }\n        </div>\n        { this.props.items.length > 0 && (\n          <DataList aria-label=\"Expandable data list\">\n            { this.props.items.map((item, idx) => (\n              <Request\n                key={ item.id }\n                item={ item }\n                idx={ idx }\n                isActive={ idx === 0 }\n                isExpanded={ this.isExpanded(`request-${item.id}`) }\n                toggleExpand={ this.toggleExpand }\n              />)) }\n          </DataList>)\n        }\n      </Fragment>\n    );\n  };\n}\n\nRequestList.propTypes = {\n  isLoading: propTypes.bool,\n  items: propTypes.array,\n  noItems: propTypes.string,\n  active_request: propTypes.number\n};\n\nRequestList.defaultProps = {\n  items: []\n};\n\nexport default RequestList;\n\n","import React, { Fragment }  from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport RequestList from './request-list';\n\nconst RequestTranscript = ({ request }) => (<Fragment>\n  <Title size=\"sm\" style={ { paddingLeft: '32px' } }> Request transcript </Title>\n  <RequestList items={ request.children && request.children.length > 0 ? request.children : [ request ] }/>\n</Fragment>);\n\nRequestTranscript.propTypes = {\n  request: PropTypes.shape({\n    content: PropTypes.object,\n    children: PropTypes.array\n  }).isRequired\n};\n\nexport default RequestTranscript;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { Route, useParams, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport '../../../App.scss';\nimport ActionModal from '../action-modal';\nimport RequestInfoBar from './request-info-bar';\nimport RequestTranscript from './request-transcript';\nimport { fetchRequest, fetchRequestContent } from '../../../redux/actions/request-actions';\nimport { RequestLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { TopToolbar, TopToolbarTitle } from '../../../presentational-components/shared/top-toolbar';\nimport UserContext from '../../../user-context';\nimport { approvalPersona } from '../../../helpers/shared/helpers';\n\nconst initialState = {\n  isFetching: true\n};\nconst requestState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst RequestDetail = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(requestState, initialState);\n\n  const { selectedRequest, requestContent } = useSelector(\n    ({\n      requestReducer: {\n        requestContent: requestContent,\n        selectedRequest: selectedRequest\n      }\n    }) => ({ selectedRequest, requestContent })\n  );\n  const { id }  = useParams();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { roles: userRoles } = useContext(UserContext);\n\n  useEffect(() => {\n    const persona = approvalPersona(userRoles);\n    Promise.all([ dispatch(fetchRequest(id, persona)), dispatch(fetchRequestContent(id, persona)) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderRequestDetails = () => {\n    if (isFetching || !selectedRequest || Object.keys(selectedRequest).length === 0) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <RequestLoader />\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Fragment>\n          <GridItem md={ 2 } className=\"detail-pane\">\n            <RequestInfoBar request={ selectedRequest } requestContent={ requestContent }/>\n          </GridItem>\n          <GridItem md={ 10 } className=\"detail-pane\">\n            <RequestTranscript request={ selectedRequest } url={ location.url }/>\n          </GridItem>\n        </Fragment>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Route exact path=\"/requests/detail/:id/add_comment\" render={ props =>\n        <ActionModal { ...props } actionType={ 'Add Comment' } closeUrl={ location.url } /> }/>\n      <Route exact path=\"/requests/detail/:id/approve\" render={ props =>\n        <ActionModal { ...props } actionType={ 'Approve' } closeUrl={ location.url } /> } />\n      <Route exact path=\"/requests/detail/:id/deny\" render={ props =>\n        <ActionModal { ...props } actionType={ 'Deny' } closeUrl={ location.url } /> } />\n      <TopToolbar\n        breadcrumbs={ [{ title: 'Request Queue', to: '/requests', id: 'requests' }] }\n        paddingBottom={ true }\n      >\n        <TopToolbarTitle title={ `Request ${id}` } />\n      </TopToolbar>\n      <Section type=\"content\">\n        <Grid gutter=\"md\">\n          { renderRequestDetails() }\n        </Grid>\n      </Section>\n    </Fragment>\n  );\n};\n\nexport default RequestDetail;\n","import React, { Fragment, useEffect, useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { expandable } from '@patternfly/react-table';\nimport { fetchRequests, expandRequest } from '../../redux/actions/request-actions';\nimport ActionModal from './action-modal';\nimport { createRows } from './request-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport RequestDetail from './request-detail/request-detail';\nimport { isApprovalAdmin, isRequestStateActive } from '../../helpers/shared/helpers';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../../smart-components/app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop, approvalPersona } from '../../helpers/shared/helpers';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/index';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\nimport UserContext from '../../user-context';\n\nconst columns = [{\n  title: 'Name',\n  cellFormatters: [ expandable ]\n},\n'Requester',\n'Opened',\n'Updated',\n'Status',\n'Decision'\n];\n\nconst debouncedFilter = asyncDebounce(\n  (filter, dispatch, filteringCallback, persona, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchRequests(filter, persona, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst requestsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Requests = () => {\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch ] = useReducer(\n    requestsListState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ requestReducer: { requests }}) => requests\n  );\n\n  const { roles: userRoles } = useContext(UserContext);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchRequests(filterValue, defaultSettings, approvalPersona(userRoles))\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      },\n      approvalPersona(userRoles)\n    );\n  };\n\n  const tabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n    { eventKey: 1, title: 'Approval processes', name: '/workflows' }];\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/requests/add_comment/:id\" render={ props => <ActionModal { ...props }\n      actionType={ 'Add Comment' }\n      postMethod={ fetchRequests } /> }/>\n    <Route exact path=\"/requests/approve/:id\" render={ props => <ActionModal { ...props } actionType={ 'Approve' }\n      postMethod={ fetchRequests }/> } />\n    <Route exact path=\"/requests/deny/:id\" render={ props => <ActionModal { ...props } actionType={ 'Deny' }\n      postMethod={ fetchRequests }/> } />\n  </Fragment>;\n\n  const areActionsDisabled = (requestData) => requestData &&\n    requestData.state ?\n    !isRequestStateActive(requestData.state) || requestData.number_of_children > 0 : true;\n\n  const actionResolver = (requestData) => {\n    return (requestData && requestData.id && areActionsDisabled(requestData) ? null :\n      [\n        {\n          title: 'Comment',\n          onClick: () => history.push(`/requests/add_comment/${requestData.id}`)\n        }\n      ]);\n  };\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(fetchRequests(filterValue, pagination, approvalPersona(userRoles)))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandRequest(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  const renderRequestsList = () => {\n    return (\n      <Fragment>\n        <TopToolbar>\n          <TopToolbarTitle title=\"Approval\"/>\n          { isApprovalAdmin(userRoles) && <AppTabs tabItems={ tabItems } /> }\n        </TopToolbar>\n        <TableToolbarView\n          data={ data }\n          createRows={ createRows }\n          columns={ columns }\n          fetchData={ handlePagination }\n          routes={ routes }\n          actionResolver={ actionResolver }\n          titlePlural=\"requests\"\n          titleSingular=\"request\"\n          pagination={ meta }\n          handlePagination={ handlePagination }\n          filterValue={ filterValue }\n          onFilterChange={ handleFilterChange }\n          isLoading={ isFetching || isFiltering }\n          onCollapse={ onCollapse }\n          renderEmptyState={ () => (\n            <TableEmptyState\n              title={ filterValue === '' ? 'No requests' : 'No results found' }\n              Icon={ SearchIcon }\n              PrimaryAction={ () =>\n                filterValue !== '' ? (\n                  <Button onClick={ () => handleFilterChange('') } variant=\"link\">\n                            Clear all filters\n                  </Button>\n                ) : null\n              }\n              description={\n                filterValue === ''\n                  ? ''\n                  : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n              }\n            />\n          ) }\n        />\n      </Fragment>);\n  };\n\n  return (\n    <Switch>\n      <Route path={ '/requests/detail/:id' } render={ props => <RequestDetail { ...props }/> } />\n      <Route path={ '/requests' } render={ () => renderRequestsList() } />\n    </Switch>\n  );\n};\n\nRequests.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  requests: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nRequests.defaultProps = {\n  requests: [],\n  isLoading: false\n};\n\nexport default Requests;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nconst ApprovalBreadcrumbs = ({ breadcrumbs }) => breadcrumbs\n  ? (\n    <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        <BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n          { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n        </BreadcrumbItem>\n      )) }\n    </Breadcrumb>\n  ) : null;\n\nApprovalBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    isActive: PropTypes.bool,\n    to: PropTypes.string\n  }))\n};\n\nexport default ApprovalBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport ApprovalBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <ApprovalBreadcrumbs breadcrumbs={ breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n              <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n                <Text component={ TextVariants.p }>{ description }</Text>\n              </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\nimport { Link }  from 'react-router-dom';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered\n    aria-label=\"No records\"\n  >\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={ Icon } />\n      <TextContent>\n        <Text component={ TextVariants.h1 }>{ title }</Text>\n      </TextContent>\n      <EmptyStateBody>\n        { description }\n        { renderDescription() }\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        { PrimaryAction && <PrimaryAction /> }\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n\nexport const EmptyStatePrimaryAction = ({ url, label }) => (\n  <Link to={ url }>\n    <Button variant=\"secondary\">{ label }</Button>\n  </Link>\n);\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <div className=\"toolbar-filter-input-group\">\n      <TextInput\n        placeholder={ placeholder }\n        value={ searchValue }\n        type=\"text\"\n        onChange={ onFilterChange }\n        aria-label={ placeholder }\n      />\n      <span className=\"filter-icons-container\">\n        { (isClearable && searchValue && (\n          <CloseIcon\n            className=\"clear-filter\"\n            width=\"16\"\n            height=\"16\"\n            onClick={ () => onFilterChange('') }\n          />\n        )) || <SearchIcon /> }\n      </span>\n    </div>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={ className }>\n      <Pagination\n        perPage={ limit || 50 }\n        itemCount={ count || 0 }\n        onPerPageSelect={ handleOnPerPageSelect }\n        page={ getCurrentPage(limit, offset) }\n        onSetPage={ handleSetPage }\n        direction=\"down\"\n        isCompact={ isCompact }\n        { ...props }\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    { children }\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","\nimport React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Level, LevelItem } from '@patternfly/react-core';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings  } from '../../helpers/shared/pagination';\nimport FilterToolbar from '../../presentational-components/shared/filter-toolbar-item';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport { DataListLoader } from './loader-placeholders';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse,\n  renderEmptyState\n}) => {\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (data, id) => {\n    const newData = data.map(row => row.id === id ?\n      {\n        ...row,\n        selected: !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return newData;\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse ?\n    onCollapse(id, setRows, setOpen) :\n    setRows((rows) => setOpen(rows, id));\n\n  const selectRow = (_event, selected, index, { id } = {}) => index === -1\n    ? setRows(rows.map(row => ({ ...row, selected })))\n    : setRows((rows) => setSelected(rows, id));\n\n  const renderToolbar = (isLoading) => {\n    return (<Toolbar className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg pf-u-pb-lg top-toolbar` }>\n      <Level style={ { flex: 1 } }>\n        <LevelItem>\n          <Toolbar>\n            <FilterToolbar onFilterChange={ onFilterChange } searchValue={ filterValue } isClearable={ true }\n              placeholder={ `Filter by ${titleSingular}` }/>\n            { toolbarButtons() }\n          </Toolbar>\n        </LevelItem>\n\n        <LevelItem>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <AsyncPagination\n                  apiRequest={ fetchData }\n                  isDisabled={ isLoading }\n                  meta={ pagination }\n                  isCompact\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n        </LevelItem>\n      </Level>\n    </Toolbar>);\n  };\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ `${titlePlural} table` }\n            onCollapse={ onCollapseInternal }\n            rows={ rows }\n            cells={ columns }\n            onSelect={ isSelectable && selectRow }\n            actionResolver={ actionResolver }\n            className=\"table-fix\"\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 &&\n            <BottomPaginationContainer>\n              <AsyncPagination\n                dropDirection=\"up\"\n                meta={ pagination }\n                apiRequest={ fetchData }\n              />\n            </BottomPaginationContainer>\n          }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func,\n  renderEmptyState: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  toolbarButtons: () => null,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null\n};\n"],"sourceRoot":""}