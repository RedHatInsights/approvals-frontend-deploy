{"version":3,"sources":["webpack:///./src/smart-components/request/allrequests.js","webpack:///./src/smart-components/request/EmptyRequestList.js","webpack:///./src/smart-components/request/requests.js","webpack:///./src/utilities/use-query.js","webpack:///./src/smart-components/workflow/add-groups/summary-content.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/redux/actions/request-actions.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/helpers/request/request-helper.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/forms/request-comment-form.schema.js","webpack:///./src/smart-components/request/action-modal.js","webpack:///./src/smart-components/request/expandable-content.js","webpack:///./src/smart-components/request/request-table-helpers.js","webpack:///./src/smart-components/request/chips-helpers.js","webpack:///./src/smart-components/request/requests-list.js"],"names":["AllRequests","persona","APPROVAL_ADMIN_PERSONA","actionsDisabled","EmptyRequestList","userRoles","useContext","UserContext","isApprovalAdmin","useIsApprovalAdmin","title","className","EmptyState","EmptyStateIcon","icon","SearchIcon","TextContent","Text","component","TextVariants","h1","EmptyStateBody","EmptyStateSecondaryActions","Requests","history","useHistory","isApprovalApprover","useIsApprovalApprover","requestData","state","isRequestStateActive","number_of_children","routes","exact","path","routesLinks","requests","addComment","render","props","actionType","postMethod","fetchRequests","approve","deny","APPROVAL_APPROVER_PERSONA","actionResolver","id","onClick","push","pathname","search","useQuery","requiredParams","useLocation","query","URLSearchParams","reduce","acc","curr","get","SummaryContent","getState","useFormApi","values","name","description","wfGroups","Stack","gutter","StackItem","Title","size","h5","Grid","GridItem","span","p","length","map","group","idx","key","value","label","buttonPositioning","default","modal","buttonOrder","buttonClassName","componentMapperExtended","componentMapper","summary","FormRenderer","formContainer","rest","FormTemplate","propTypes","PropTypes","oneOf","defaultProps","pagination","dispatch","requestReducer","sortBy","filterValue","finalPagination","defaultSettings","meta","limit","offset","type","ActionTypes","payload","RequestHelper","fetchRequest","apiProps","fetchRequestContent","createRequestAction","actionName","requestId","actionIn","notifications","fulfilled","variant","rejected","expandRequest","sortRequests","setFilterValueRequests","clearFilterValueRequests","resetRequestList","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","actionApi","getActionApi","graphqlInstance","getGraphqlInstance","sortPropertiesMapper","property","opened","requester","status","filterQuery","forEach","decision","dec","join","filter","undefined","paginationQuery","Math","max","sortQuery","direction","fetchUrl","APPROVAL_API_BASE","fetchHeaders","getAxiosInstance","method","url","headers","fetchRequestTranscript","parent_id","APPROVAL_REQUESTER_PERSONA","data","then","fetchRequestCapabilities","isParent","fetchRequestWithSubrequests","a","result","request","find","item","metadata","createAction","approvalTabItems","eventKey","AppTabs","tabItems","activeTab","includes","activeKey","onSelect","_event","tabIndex","array","TableToolbarView","isSelectable","createRows","columns","fetchData","toolbarButtons","titlePlural","titleSingular","setCheckedItems","onFilterChange","isLoading","onCollapse","renderEmptyState","onSort","activeFiltersConfig","filterConfig","intl","useIntl","useState","rows","setRows","useEffect","setOpen","row","isOpen","paginationConfig","itemCount","count","page","getCurrentPage","perPage","onSetPage","_e","getNewPage","onPerPageSelect","isDisabled","page-type","actionsConfig","actions","items","formatMessage","defaultMessage","filterValues","placeholder","onChange","aria-label","_index","_isOpen","cells","selected","index","newData","checkedItems","dropDirection","isCompact","bool","func","isRequired","shape","number","string","object","TableEmptyState","Icon","PrimaryAction","renderDescription","centered","any","createRequestCommentSchema","isDeny","fields","componentTypes","TEXTAREA","validate","validatorTypes","REQUIRED","ActionModal","addNotification","closeUrl","onCancel","dismissable","Modal","isLarge","onClose","schema","onSubmit","operationType","Approve","Deny","operation","oneOfType","patname","connect","bindActionCreators","ExpandedItem","detail","small","node","ExpandableContent","reason","requestActive","requestContent","setRequestContent","setIsLoading","fetchStarted","setIsFetching","expandedRequests","useSelector","Bullseye","Spinner","Level","LevelItem","product","to","Button","portfolio","platform","content","uname","decisionIcon","decisionValues","decisionDisplayName","displayName","requester_name","created_at","notified_at","finished_at","timeAgo","style","marginBottom","parent","fullWidth","prepareChips","category","chips","stat","cellFormatters","expandable","transforms","sortable","cellWidth","wrappable","debouncedFilter","asyncDebounce","filteringCallback","updateFilter","requestsListState","action","isFetching","nameValue","requesterValue","isFiltering","RequestsList","shallowEqual","useReducer","initialState","stateDispatch","useDispatch","updateRequests","scrollToTop","handleFilterChange","debouncedValue","clearFilters","handlePagination","isEmpty","filters","onDelete","chip","deleteAll","newValue","val"],"mappings":"2FAAA,4CAQeA,UAJK,WAClB,OAAO,kBAAC,IAAD,CAAcC,QAAUC,IAAyBC,gBAAkB,kBAAM,O,uNCuCnEC,EA5BU,WAAM,IACVC,EAAcC,qBAAWC,KAApCF,UACFG,EAAkBC,YAAmBJ,GAE3C,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAiBK,MAAM,aACrBF,GAAmB,kBAAC,IAAD,OAEvB,yBAAKG,UAAU,cACb,kBAACC,EAAA,WAAD,CAAYD,UAAU,6BACpB,kBAACE,EAAA,eAAD,CAAgBC,KAAOC,eACvB,kBAACC,EAAA,YAAD,KACE,kBAACC,EAAA,KAAD,CAAMC,UAAYC,eAAaC,IAA/B,oBAIF,kBAACC,EAAA,eAAD,6DAIF,kBAACC,EAAA,2BAAD,SCqBOC,UA7CE,WAAM,IACFlB,EAAcC,qBAAWC,KAApCF,UACFmB,EAAUC,cACVjB,EAAkBC,YAAmBJ,GACrCqB,EAAqBC,YAAsBtB,GAY3CF,EAAkB,SAACyB,GAAD,OAAiBA,IACvCA,EAAYC,SACXC,YAAqBF,EAAYC,QAAUD,EAAYG,mBAAqB,IACzEL,IAAuBlB,IAgB7B,OAAQkB,EAEJ,kBAAC,IAAD,CACAM,OAhCW,kBAAM,kBAAC,WAAD,KACnB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAOC,IAAYC,SAASC,WAAaC,OAAS,SAAAC,GAAK,OAAI,kBAAC,IAAD,OAAkBA,EAAlB,CACtEC,WAAa,cACbC,WAAaC,UACf,kBAAC,IAAD,CAAOT,OAAK,EAACC,KAAOC,IAAYC,SAASO,QAAUL,OAAS,SAAAC,GAAK,OAAI,kBAAC,IAAD,OAAkBA,EAAlB,CAA0BC,WAAa,UAC1GC,WAAaC,UACf,kBAAC,IAAD,CAAOT,OAAK,EAACC,KAAOC,IAAYC,SAASQ,KAAON,OAAS,SAAAC,GAAK,OAAI,kBAAC,IAAD,OAAkBA,EAAlB,CAA0BC,WAAa,OACvGC,WAAaC,YA0BbzC,QAAU4C,IACV1C,gBAAkBA,EAClB2C,eApBmB,SAAClB,GACtB,OAAQA,GAAeA,EAAYmB,IAAM5C,EAAgByB,GAAe,KACtE,CACE,CACElB,MAAO,UACPQ,UAAW,SACX8B,QAAS,kBAAMxB,EAAQyB,KAAK,CAC1BC,SAAUf,IAAYC,SAASC,WAC/Bc,OAAQ,YAAF,OAAcvB,EAAYmB,YAOxC,kBAAC,EAAD,Q,8nBChCWK,IAhBE,WAAyB,IAAxBC,EAAwB,uDAAP,GAAO,EACrBC,cAAXH,EADgC,EAChCA,OACFI,EAAQ,IAAIC,gBAAgBL,GAClC,MAAO,CACLE,EAAeI,QACb,SAACC,EAAKC,GAAN,YACKD,EADL,OAEGC,EAAOJ,EAAMK,IAAID,OAEpB,IAEFR,EACAI,K,yPC2DWM,EA3DQ,WAAM,OAEaC,EADnBC,MAAbD,YAC2CE,OAA3CC,EAFmB,EAEnBA,KAAMC,EAFa,EAEbA,YAAaC,EAFA,EAEAA,SAE3B,OACE,kBAAC,WAAD,KACE,kBAACC,EAAA,MAAD,CAAOC,OAAO,MACZ,kBAACC,EAAA,UAAD,KACE,kBAACC,EAAA,MAAD,CAAOC,KAAK,MAAZ,aAEF,kBAACF,EAAA,UAAD,KACE,kBAACF,EAAA,MAAD,CAAOC,OAAO,MACZ,kBAACC,EAAA,UAAD,KACE,kBAACtD,EAAA,YAAD,KACE,kBAACC,EAAA,KAAD,CAAMN,UAAU,4BAA4BO,UAAYC,eAAasD,IAArE,4FAIJ,kBAACH,EAAA,UAAD,KACE,kBAACI,EAAA,KAAD,CAAML,OAAO,MACX,kBAACM,EAAA,SAAD,CAAUC,KAAO,GACf,kBAAC3D,EAAA,KAAD,CAAMN,UAAU,4BAA4BO,UAAYC,eAAasD,IAArE,SAEF,kBAACE,EAAA,SAAD,CAAUC,KAAO,IACf,kBAAC3D,EAAA,KAAD,CAAMN,UAAU,4BAA4BO,UAAYC,eAAa0D,GAAMZ,KAG/E,kBAACS,EAAA,KAAD,CAAML,OAAO,MACX,kBAACM,EAAA,SAAD,CAAUC,KAAO,GACf,kBAAC3D,EAAA,KAAD,CAAMN,UAAU,4BAA4BO,UAAYC,eAAasD,IAArE,gBAEF,kBAACE,EAAA,SAAD,CAAUC,KAAO,IACf,kBAAC3D,EAAA,KAAD,CAAMN,UAAU,4BAA4BO,UAAYC,eAAa0D,GAAMX,KAG7EC,GAAYA,EAASW,OAAS,GAAKX,EAASY,KAAI,SAACC,EAAOC,GAAR,OAChD,kBAAC,WAAD,CAAUC,IAAMF,EAAMG,OACpB,kBAACT,EAAA,KAAD,CAAML,OAAO,MACX,kBAACM,EAAA,SAAD,CAAUC,KAAO,GACf,kBAAC3D,EAAA,KAAD,CAAMN,UAAU,4BAA4BO,UAAYC,eAAasD,IACzD,IAARQ,EAAY,SAAW,KAG7B,kBAACN,EAAA,SAAD,CAAUC,KAAO,IACf,kBAAC3D,EAAA,KAAD,CAAMN,UAAU,4BAA4BO,UAAYC,eAAa0D,GACjEG,EAAMI,mB,8NClDhC,IAAMC,EAAoB,CACxBC,QAAS,GACTC,MAAO,CACLC,YAAa,CAAE,SAAU,QAAS,QAClCC,gBAAiB,2BAIfC,E,iWAA0B,CAAH,GACxBC,IADwB,CAE3BC,QAAS/B,IAGLgC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAkBC,EAArB,gCACnB,yBAAKpF,UAAY0E,EAAkBS,GAAeL,iBAChD,kBAAC,IAAD,KACEE,gBAAkBD,EAClBM,aAAe,SAACzD,GAAD,OAAW,kBAAC,IAAD,OAAmBA,EAAa8C,EAAkBS,OACvEC,MAKXF,EAAaI,UAAY,CACvBH,cAAeI,IAAUC,MAAM,CAAE,UAAW,WAG9CN,EAAaO,aAAe,CAC1BN,cAAe,WAGFD,O,iCCxCf,8UAIanD,EAAgB,SAACzC,EAASoG,GAAV,OAAyB,SAACC,EAAUxC,GAAa,MAClCA,IAAWyC,eAA7CC,EADoE,EACpEA,OAAQpE,EAD4D,EAC5DA,SAAUqE,EADkD,EAClDA,YAEtBC,EAAkBL,GAAcM,IAEpC,IAAKN,GAAcjE,EAAU,OACDA,EAASwE,KACnCF,EAAkB,CAAEG,MAFO,EACnBA,MACmBC,OAFA,EACZA,QAIjB,OAAOR,EAAS,CACdS,KAAMC,IACNC,QAASC,IAA4BT,EAAaC,EAAiBzG,EAASuG,OAInEW,EAAe,SAACC,EAAUnH,GAAX,MAAwB,CAClD8G,KAAMC,IACNC,QAASC,IAA0CE,EAAUnH,KAGlDoH,EAAsB,SAACD,EAAUnH,GAAX,MAAwB,CACzD8G,KAAMC,IACNC,QAASC,IAAkCE,EAAUnH,KAG1CqH,EAAsB,SAACC,EAAYC,EAAWC,GAAxB,MAAsC,CACvEV,KAAMC,IACNC,QAASC,IAAkCM,EAAWC,GACtDb,KAAM,CACJc,cAAe,CACbC,UAAW,CACTC,QAAS,UACTlH,MAAO,UACPwD,YAAa,OAAF,OAASqD,EAAT,qBAEbM,SAAU,CACRD,QAAS,SACTlH,MAAO,GAAF,OAAK6G,EAAL,UACLrD,YAAa,OAAF,OAASqD,EAAT,wBAMNO,EAAgB,SAAC/E,GAAD,MAAS,CACpCgE,KAAMC,IACNC,QAASlE,IAGEgF,EAAe,SAACvB,GAAD,MAAa,CACvCO,KAAMC,IACNC,QAAST,IAGEwB,EAAyB,SAACvB,EAAaM,GAAd,MAAwB,CAC5DA,KAAMC,IACNC,QAAS,CAAER,cAAaM,UAGbkB,EAA2B,iBAAO,CAC7ClB,KAAMC,MAGKkB,EAAmB,iBAAO,CACrCnB,KAAMC,O,iCCrER,aAEe,aACbmB,GADa,IAEbC,EAFa,uDAEE,IACfC,EAHa,uDAGH,CAAEC,kBAAkB,GAHjB,OAIVC,YAAuBJ,EAAeC,EAAcC,K,g0BCDzD,IAAMG,EAAYC,cACZC,EAAkBC,cAElBC,EAAuB,SAACC,GAAD,MAAe,CAC1C,aAAc,KACdC,OAAQ,aACRC,UAAW,iBACXC,OAAQ,SACRH,IAAaA,GAGTI,EAAc,SAACxC,GACnB,IAAMlD,EAAQ,GAqBd,OApBIkD,EAAYxC,MACdV,EAAMN,KAAN,mCAAuCwD,EAAYxC,OAGjDwC,EAAYsC,WACdxF,EAAMN,KAAN,6CAAiDwD,EAAYsC,YAG3DtC,EAAYuC,QACdvC,EAAYuC,OAAOE,SAAQ,SAAArH,GACzB0B,EAAMN,KAAN,8BAAkCpB,OAIlC4E,EAAY0C,UACd1C,EAAY0C,SAASD,SAAQ,SAAAE,GAC3B7F,EAAMN,KAAN,iCAAqCmG,OAIlC7F,EAAM8F,KAAK,MAGb,SAAS3G,IAAsF,IAAxE4G,EAAwE,uDAA/D,GAAIjD,EAA2D,uDAA9CM,IAAiB1G,EAA6B,4DAAnBsJ,EAAW/C,EAAQ,uCAC9FgD,EAAkB,UAAH,OAAaC,KAAKC,IAAIrD,EAAWQ,MAAO,IAAxC,mBAAsDR,EAAWS,QAChF6C,EAAY,YAAH,OAAef,EAAqBpC,EAAOqC,UAA3C,YAAwDrC,EAAOoD,WACxEC,EAAW,GAAH,OAAMC,IAAN,sBAAqCb,EAAYK,IAAjD,OAA2DE,GAA3D,OAA6EG,GACrFI,EAAe9J,EAAU,CAAE,eAAgBA,QAAYsJ,EAC7D,OAAOS,cAAmB,CAAEC,OAAQ,MAAOC,IAAKL,EAAUM,QAASJ,IAGrE,IAuCaK,EAAyB,SAAC5C,EAAWvH,GAChD,IAxC8BoK,EAwCxBN,EAAgB9J,GAAWA,IAAY4C,IAA6B,CAAE,eAAgB5C,GACxF,CAAE,eAAgBqK,KACtB,OAAO5B,EAAgB,CAAEuB,OAAQ,OAAQC,IAAK,GAAF,OAAKJ,IAAL,YAC1CK,QAASJ,EAAcQ,KAAM,CAAEhH,OA3CH8G,EA2CiC7C,EA3ClC,mCACb6C,EADa,qkBA4C5BG,MAAK,qBAAGD,KAAQnI,aAGNiF,EAAsB,SAACtE,GAClC,IAAM8G,EAAW,GAAH,OAAMC,IAAN,qBAAoC/G,EAApC,YACRgH,EAAe,CAAE,eAAgBO,KACvC,OAAON,cAAmB,CAAEC,OAAQ,MAAOC,IAAKL,EAAUM,QAASJ,KAGxDU,EAA2B,SAAC1H,EAAI2H,GAC3C,IAAMb,EAAW,GAAH,OAAMC,IAAN,qBAAoC/G,GAApC,OAAyC2H,EAAW,YAAc,IAC1EX,EAAe,CAAE,eAAgBO,KACvC,OAAON,cAAmB,CAAEC,OAAQ,MAAOC,IAAKL,EAAUM,QAASJ,KAG9D,SAAeY,EAAtB,oC,oCAAO,WAA2C5H,EAAI9C,GAA/C,mBAAA2K,EAAA,sEACqBR,EAAuBrH,EAAI9C,GADhD,WACC2B,EADD,SAGsC,IAAvBA,EAAYkD,OAH3B,yCAGkD,IAHlD,UAKD7E,IAAY4C,IALX,sBAMCjB,GAAeA,EAAYkD,OAAS,GAAKlD,EAAY,GAAGG,mBAAqB,GAN9E,iCAOoB0I,EAAyB1H,GAAI,GAPjD,QAOK8H,EAPL,SASaA,EAAON,OACnB3I,EAAY,GAAGQ,SAAWR,EAAY,GAAGQ,SAAS2C,KAAI,SAAA+F,GACpD,YACKD,EAAON,KAAKQ,MAAK,SAACC,GAAD,OAAWA,EAAKjI,KAAO+H,EAAQ/H,IAAOiI,EAAKC,YADjE,GAEKH,OAbR,yCAmBqBL,EAAyB1H,GAAI,GAnBlD,SAmBK+H,EAnBL,UAqBClJ,EAAY,GAAZ,KAAsBA,EAAY,GAAlC,CAAsCqJ,SAAUH,EAAQG,YArBzD,iCA0BErJ,EAAY,IA1Bd,6C,sBA6BA,IAAM0F,EAAsB,SAACE,EAAWC,GAAZ,OAAyBe,EAAU0C,aAAa1D,EAAWC,K,iCCzI9F,gGAKM0D,EAAmB,CAAC,CAAEC,SAAU,EAAG1K,MAAO,gBAAiBuD,KAAM,aACrE,CAAEmH,SAAU,EAAG1K,MAAO,eAAgBuD,KAAM,gBAC5C,CAAEmH,SAAU,EAAG1K,MAAO,qBAAsBuD,KAAM,eAEvCoH,EAAU,SAAC,GAAoC,QAAlCC,gBAAkC,MAAvBH,EAAuB,EACpD3J,EAAUC,cAD0C,EAE7B6B,cAArBJ,EAFkD,EAElDA,SAAUC,EAFwC,EAExCA,OACZoI,EAAYD,EAASP,MAAK,gBAAG9G,EAAH,EAAGA,KAAH,OAAcf,EAASsI,SAASvH,MAIhE,OACE,kBAAC,OAAD,CAAMtD,UAAU,aAAa8K,UAAYF,EAAYA,EAAUH,SAAW,EAAIM,SAJzD,SAACC,EAAQC,GAAT,OACrBpK,EAAQyB,KAAK,CAAEC,SAAUoI,EAASM,GAAU3H,KAAMd,aAI9CmI,EAASvG,KAAI,SAACiG,GAAD,OAAU,kBAAC,MAAD,CAAKtK,MAAQsK,EAAKtK,MAAQwE,IAAM8F,EAAKI,SAAWA,SAAWJ,EAAKI,SAAWnH,KAAO+G,EAAK/G,YAKtHoH,EAAQpF,UAAY,CAClBqF,SAAUpF,IAAU2F,Q,kzBCRf,IAAMC,EAAmB,SAAC,GAsB3B,IArBJC,EAqBI,EArBJA,aACAC,EAoBI,EApBJA,WACAC,EAmBI,EAnBJA,QACAC,EAkBI,EAlBJA,UACAC,EAiBI,EAjBJA,eACA5B,EAgBI,EAhBJA,KACAzH,EAeI,EAfJA,eACAd,EAcI,EAdJA,OACAoK,EAaI,EAbJA,YACAC,EAYI,EAZJA,cACAhG,EAWI,EAXJA,WACAiG,EAUI,EAVJA,gBACA7F,EASI,EATJA,YACA8F,EAQI,EARJA,eACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,WACAC,EAKI,EALJA,iBACAlG,EAII,EAJJA,OACAmG,EAGI,EAHJA,OACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,aAEMC,EAAOC,cADT,EAEsBC,mBAAS,IAF/B,WAEIC,EAFJ,KAEUC,EAFV,KAIJC,qBAAU,WACRD,EAAQlB,EAAWzB,MAClB,CAAEA,IAEL,IAAM6C,EAAU,SAAC7C,EAAMxH,GAAP,OAAcwH,EAAKxF,KAAI,SAAAsI,GAAG,OAAIA,EAAItK,KAAOA,EAAX,KAEvCsK,EAFuC,CAG1CC,QAASD,EAAIC,SAH6B,KAKvCD,OAqBDE,EAAmB,CACvBC,UAAWnH,EAAWoH,MACtBC,KAAMC,YAAetH,EAAWQ,MAAOR,EAAWS,QAClD8G,QAASvH,EAAWQ,MACpBgH,UAAW,SAACC,EAAIJ,GAAL,OAAcxB,EAAU,EAAD,GAAM7F,EAAN,CAAkBS,OAAQiH,YAAWL,EAAMrH,EAAWQ,WACxFmH,gBAAiB,SAACF,EAAItJ,GAAL,OAAc0H,EAAU,EAAD,GAAM7F,EAAN,CAAkBQ,MAAOrC,MACjEyJ,WAAYzB,GAmCd,OACE,kBAAC,UAAD,CAASzF,KAAK,UAAUmH,YAAA,cAAmB9B,GAAgBrJ,GAAE,cAAUqJ,IACnEpK,IAjCJ,kBAAC,iBAAD,KACErB,UAAU,2CACV0F,WAAakH,GACPpB,GAAkB,CAAEgC,cAAe,CAAGC,QAAS,CAAEjC,OAHzD,CAIEU,aAAe,CACbwB,MAAO,CAAC,CACNjJ,MAAO0H,EAAKwB,cAAc,CACxBvL,GAAI,OACJwL,eAAgB,SAElBC,aAAc,CACZzL,GAAI,iBACJ0L,YAAa3B,EAAKwB,cAAc,CAC9BvL,GAAI,iBACJwL,eAAgB,qBACf,CAAE7N,MAAO2L,IACZ,aAAcS,EAAKwB,cAAc,CAC/BvL,GAAI,iBACJwL,eAAgB,qBACf,CAAE7N,MAAO2L,IACZqC,SAAU,SAAC/C,EAAQxG,GAAT,OAAmBoH,EAAepH,IAC5CA,MAAOsB,KAhBN,WAmBFoG,KAGLD,oBAAsBA,KAQpBJ,GAAa,kBAAC,IAAD,MACZA,GAA6B,IAAhBS,EAAKnI,OAGnB,kBAAC,WAAD,MACK0H,GACH,kBAAC,IAAD,CACEmC,aAAA,UAAgBvC,EAAhB,UACAK,WAzDiB,SAACd,EAAQiD,EAAQC,EAAjB,OAA4B9L,EAA5B,EAA4BA,GAA5B,OAAqC0J,EAC5DA,EAAW1J,EAAImK,EAASE,GACxBF,EAAQE,EAAQH,EAAMlK,KAwDhBkK,KAAOA,EACP6B,MAAQ7C,EACRP,SAAWK,GA1ED,SAACJ,EAAQoD,EAAUC,GAAuB,6DAAP,GAAPjM,EAAc,EAAdA,GACxCkM,EAAUhC,EAAKlI,KAAI,SAAAsI,GAAG,OAAIA,EAAItK,KAAOA,IAAiB,IAAXiM,EAAjB,KAEzB3B,EAFyB,CAG5B0B,UAAqB,IAAXC,EAAeD,GAAY1B,EAAI0B,WAHb,KAKzB1B,MAGD6B,EAAeD,EAAQ3F,QAAO,SAAA0B,GAAI,OAAKA,EAAKjI,IAAMiI,EAAK+D,YAE7D,OADAzC,EAAgB4C,GACThC,EAAQ+B,IAgEPnM,eAAiBA,EACjBnC,UAAU,YACV6F,OAASA,EACTmG,OAASA,GAET,kBAAC,IAAD,MACA,kBAAC,IAAD,OAEAtG,EAAWoH,MAAQ,GACnB,kBAAC,iBAAD,CACE9M,UAAU,uDACV0F,WAAU,KACLkH,EADK,CAER4B,cAAe,KACfvH,QAAS,SACTwH,WAAW,OAzBnB1C,MAkCRZ,EAAiB7F,UAAY,CAC3B8F,aAAc9F,IAAUoJ,KACxBrD,WAAY/F,IAAUqJ,KAAKC,WAC3BtD,QAAShG,IAAU4F,MAAM0D,WACzBpD,eAAgBlG,IAAUqJ,KAC1BpD,UAAWjG,IAAUqJ,KAAKC,WAC1BhF,KAAMtE,IAAU4F,MAChBxF,WAAYJ,IAAUuJ,MAAM,CAC1B3I,MAAOZ,IAAUwJ,OACjB3I,OAAQb,IAAUwJ,OAClBhC,MAAOxH,IAAUwJ,SAEnBrD,YAAanG,IAAUyJ,OACvBrD,cAAepG,IAAUyJ,OACzB1N,OAAQiE,IAAUqJ,KAClBxM,eAAgBmD,IAAUqJ,KAC1BhD,gBAAiBrG,IAAUqJ,KAC3B7I,YAAaR,IAAUyJ,OACvBnD,eAAgBtG,IAAUqJ,KAC1B9C,UAAWvG,IAAUoJ,KACrB5C,WAAYxG,IAAUqJ,KACtB5C,iBAAkBzG,IAAUqJ,KAC5B9I,OAAQP,IAAU0J,OAClBhD,OAAQ1G,IAAUqJ,KAClB1C,oBAAqB3G,IAAU0J,OAC/B9C,aAAc5G,IAAU4F,OAG1BC,EAAiB1F,aAAe,CAC9BhE,SAAU,GACVoK,WAAW,EACXnG,WAAYM,IACZoF,aAAc,KACd/J,OAAQ,kBAAM,MACd0K,iBAAkB,kBAAM,MACxBG,aAAc,K,iCC5LhB,iGAaM+C,EAAkB,SAAC,GAAD,IACtBlP,EADsB,EACtBA,MACAmP,EAFsB,EAEtBA,KACA3L,EAHsB,EAGtBA,YACA4L,EAJsB,EAItBA,cACAC,EALsB,EAKtBA,kBALsB,OAOtB,kBAAC,aAAD,CAAYC,UAAQ,EAACrB,aAAW,cAC9B,kBAAC,aAAD,CAAYhO,UAAU,6BACpB,kBAAC,iBAAD,CAAgBG,KAAO+O,IACvB,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAM3O,UAAYC,eAAaC,IAAOV,IAExC,kBAAC,iBAAD,KACIwD,EACA6L,GAAqBA,KAEzB,kBAAC,6BAAD,KACID,GAAiB,kBAACA,EAAD,UAM3BF,EAAgB3J,UAAY,CAC1BvF,MAAOwF,IAAUwJ,OAAOH,WACxBM,KAAM3J,IAAU+J,IAAIV,WACpBrL,YAAagC,IAAUwJ,OAAOH,WAC9BO,cAAe5J,IAAU+J,IACzBF,kBAAmB7J,IAAUoJ,MAGhBM,O,swBC1CR,IAAMM,EAA6B,eAACC,EAAD,8DAAqB,CAC7DC,OAAQ,CAAC,EAAD,CACNlP,UAAWmP,IAAeC,SAC1BrM,KAAM,WACNsL,WAAYY,EACZ/K,MAAO+K,EAAS,SAAW,WACvBA,GAAU,CAAEI,SAAU,CAAC,CAAExJ,KAAMyJ,IAAeC,gB,klBCItD,IAAMC,EAAc,SAAC,GAMf,IALJlO,EAKI,EALJA,WACAmO,EAII,EAJJA,gBACArJ,EAGI,EAHJA,oBACAsJ,EAEI,EAFJA,SACAnO,EACI,EADJA,WAEQQ,EAASxB,cAATwB,KADJ,EAEsBG,YAAS,CAAE,YAAnBL,EAFd,YAEK+H,QAmBH+F,EAAW,WACf,IAAMtJ,EAA4B,gBAAf/E,EAA+BA,EAA/B,UAA+CA,EAA/C,YACnBmO,EAAgB,CACd/I,QAAS,UACTlH,MAAO6G,EACPuJ,aAAa,EACb5M,YAAa,GAAF,OAAKqD,EAAL,iCAEbtE,EAAK2N,IAGP,OACE,kBAACG,EAAA,MAAD,CACEC,SAAO,EACPtQ,MAAuB,gBAAf8B,EAAA,mBAA2CO,GAA3C,UAAqDP,EAArD,qBAA4EO,GACpFuK,QAAM,EACN2D,QAAUJ,GAEV,kBAAC,IAAD,CACEK,OAAShB,EAA0C,SAAf1N,GACpC2O,SArCW,SAAC5G,GAChB,IAAM6G,EAAgB,CAAE,cAAe,OAAQC,QAAS,UAAWC,KAAM,QACnE/J,EAA4B,gBAAf/E,EAA+BA,EAA/B,UAA+CA,EAA/C,YAEnB,OAAOC,EACL6E,EACEC,EACAxE,EAFiB,GAGfwO,UAAWH,EAAc5O,IAAgB+H,IAC3CC,MAAK,kBAAM/H,OAAc+H,MAAK,kBAAMvH,EAAK2N,MACzCtJ,EACAC,EACAxE,EAFmB,GAGjBwO,UAAWH,EAAc5O,IAAgB+H,IAC3CC,MAAK,kBAAMvH,EAAK2N,OAwBhBC,SAAWA,EACX/K,cAAc,YAMtB4K,EAAYtK,aAAe,CACzBwK,SAAU5O,IAAOI,SAAS4M,OAG5B0B,EAAYzK,UAAY,CACtB0K,gBAAiBzK,IAAUoJ,KAAKC,WAChCjI,oBAAqBpB,IAAUoJ,KAAKC,WACpC9M,WAAYyD,IAAUoJ,KACtB9M,WAAY0D,IAAUwJ,OACtBkB,SAAU1K,IAAUsL,UAAU,CAAEtL,IAAUwJ,OAAQxJ,IAAUsJ,MAAM,CAAEiC,QAASvL,IAAUwJ,OAAQvM,OAAQ+C,IAAUwJ,YAQpGgC,sBAAQ,MALI,SAACpL,GAAD,OAAcqL,YAAmB,CAC1DhB,kCACArJ,yBACChB,KAEYoL,CAAkChB,I,qTC3EpCkB,EAAe,SAAC,GAAD,QAAGlR,aAAH,MAAW,GAAX,MAAemR,cAAf,MAAwB,GAAxB,SAC1B,kBAAC7Q,EAAA,YAAD,KACE,kBAACC,EAAA,KAAD,CAAMN,UAAU,4BAA4BO,UAAYC,eAAa2Q,OAAUpR,GAC/E,kBAACO,EAAA,KAAD,CAAMN,UAAU,4BAA4BO,UAAYC,eAAasD,IAAOoN,KAIhFD,EAAa3L,UAAY,CACvBvF,MAAOwF,IAAU6L,KACjBF,OAAQ3L,IAAU6L,MAGpB,IAAMC,EAAoB,SAAC,GAA8C,IAA5CjP,EAA4C,EAA5CA,GAAIhB,EAAwC,EAAxCA,mBAAoBF,EAAoB,EAApBA,MAAOoQ,EAAa,EAAbA,OACpDC,EAAgBpQ,YAAqBD,KAAWE,EADiB,EAEzBiL,mBAAS,IAFgB,WAE/DmF,EAF+D,KAE/CC,EAF+C,OAGnCpF,oBAAS,GAH0B,WAG/DR,EAH+D,KAGpD6F,EAHoD,OAI/BrF,oBAAS,GAJsB,WAI/DsF,EAJ+D,KAIjDC,EAJiD,KAKpDlS,EAAcC,qBAAWC,KAApCF,UACFmS,EAAmBC,uBAAY,qBAAGlM,eAAkBiM,oBACpDhS,EAAkBC,YAAmBJ,GACrCqB,EAAqBC,YAAsBtB,GASjD,OAPA8M,qBAAU,YACHmF,GAAgB9F,GAAagG,EAAiBhH,SAASzI,KAC1DwP,GAAc,GACdlL,YAAoBtE,GAAIyH,MAAK,SAACD,GAAW6H,EAAkB7H,GAAO8H,GAAa,MAA/E,OAAgG,kBAAMA,GAAa,SAEpH,CAAEG,IAEDhG,EACM,kBAACkG,EAAA,SAAD,KACN,kBAACC,EAAA,QAAD,OAKF,kBAAC,WAAD,KACE,kBAACC,EAAA,MAAD,KACE,kBAACC,EAAA,UAAD,KACE,kBAAC,EAAD,CAAcnS,MAAM,UAAUmR,OAASM,EAAiBA,EAAeW,QAAU,aAEjFZ,IAAkBxQ,GAAsBlB,IAAoB,kBAACqS,EAAA,UAAD,KAC5D,kBAAC,OAAD,CAAME,GAAK,CAAE7P,SAAUlB,IAAOI,SAASO,QAASQ,OAAQ,WAAF,OAAaJ,IAAUpC,UAAU,cACrF,kBAACqS,EAAA,OAAD,CAAQpL,QAAQ,UAAU+G,aAAW,kBAAkBV,YAAciE,GAArE,YAIF,kBAAC,OAAD,CAAMa,GAAK,CAAE7P,SAAUlB,IAAOI,SAASQ,KAAMO,OAAQ,WAAF,OAAaJ,KAC9D,kBAACiQ,EAAA,OAAD,CAAQpL,QAAQ,SAAS+G,aAAW,gBAApC,WAMN,kBAACiE,EAAA,MAAD,KACE,kBAACC,EAAA,UAAD,KACE,kBAAC,EAAD,CAAcnS,MAAM,YAAYmR,OAASM,EAAiBA,EAAec,UAAY,YACrF,kBAAC,EAAD,CAAcvS,MAAM,WAAWmR,OAASM,EAAiBA,EAAee,SAAW,YACnF,kBAAC,EAAD,CAAcxS,MAAM,SAASmR,OAASI,GAAkB,SAOlED,EAAkB/L,UAAY,CAC5BlD,GAAImD,IAAUwJ,OACdyD,QAASjN,IAAUyJ,OACnB5N,mBAAoBmE,IAAUuJ,OAC9B2D,MAAOlN,IAAUwJ,OACjB7N,MAAOqE,IAAUwJ,OACjBuC,OAAQ/L,IAAUwJ,QAGLsC,Q,QC5ETqB,EAAe,SAAClK,GAAD,OAAcmK,IAAenK,GAAYmK,IAAenK,GAAUrI,KAAO,IACxFyS,EAAsB,SAACpK,GAAD,OAAcmK,IAAenK,GAAYmK,IAAenK,GAAUqK,YAAc,IAE/FxH,EAAa,SAACzB,GAAD,OACxBA,EAAK9G,QAAO,SAACC,EAAD,EAUTwB,GAVS,IAAQnC,EAAR,EAAQA,GAClBkB,EADU,EACVA,KACAwP,EAFU,EAEVA,eACAC,EAHU,EAGVA,WACAC,EAJU,EAIVA,YACAC,EALU,EAKVA,YACA/R,EANU,EAMVA,MACAsH,EAPU,EAOVA,SACA8I,EARU,EAQVA,OACAlQ,EATU,EASVA,mBATU,oBAWP2B,GAXO,CAWF,CACNX,KACAuK,QAAQ,EACRzL,QACAE,qBACA+M,MAAO,CACL,kBAAC,WAAD,CAAU5J,IAAMnC,GAAK,kBAAC,OAAD,CAAMgQ,GAAK,CAAE7P,SAAUlB,IAAO8I,QAAQkE,MAAO7L,OAAQ,YAAF,OAAcJ,KAAWA,IACjGkB,EACAwP,EACAI,YAAQH,GACRE,EAAcC,YAAQD,GAAgBD,EAAcE,YAAQF,GAAeE,YAAQH,GACnF7R,EACA,kBAAC,WAAD,CAAUqD,IAAG,mBAAenC,IAAO,kBAAC9B,EAAA,KAAD,CAAMiE,IAAG,UAAMiE,EAAN,UAAyB2K,MAAQ,CAAEC,aAAc,GAC3FpT,UAAU,6BACR0S,EAAalK,GAFkB,cAEDoK,EAAoBpK,QAGvD,CACD6K,OAAc,EAAN9O,EACR+O,WAAW,EACXnF,MAAO,CAAC,CACNpO,MAAO,kBAAC,EAAD,CAAmBqC,GAAKA,EAC7BhB,mBAAqBA,EACrBF,MAAQA,EACRoQ,OAASA,WAGb,K,4CClDOiC,EAAe,SAAC,GAAD,IAAGjQ,EAAH,EAAGA,KAAM8E,EAAT,EAASA,UAAWC,EAApB,EAAoBA,OAAQG,EAA5B,EAA4BA,SAA5B,oBACtBlF,EAAO,CAAC,CACVkQ,SAAU,OACVjP,IAAK,OACLkP,MAAO,CAAC,CAAEnQ,OAAMkB,MAAOlB,MACpB,IALqB,IAMtB8E,EAAY,CAAC,CACfoL,SAAU,YACVjP,IAAK,YACLkP,MAAO,CAAC,CAAEnQ,KAAM8E,EAAW5D,MAAO4D,MAC/B,IAVqB,IAWtBC,GAAUA,EAAOlE,OAAS,EAAI,CAAC,CACjCqP,SAAU,SACVjP,IAAK,SACLkP,MAAOpL,EAAOjE,KAAI,SAAAsP,GAAI,MAAK,CAAEpQ,KAAMoQ,EAAMlP,MAAOkP,QAC7C,IAfqB,IAgBtBlL,GAAYA,EAASrE,OAAS,EAAI,CAAC,CACrCqP,SAAU,WACVjP,IAAK,WACLkP,MAAOjL,EAASpE,KAAI,SAAAqE,GAAG,MAAK,CAAEnF,KAAMmF,EAAKjE,MAAOiE,QAC7C,M,ikBCMP,IAAM6C,EAAU,CAAC,CACfvL,MAAO,aACP4T,eAAgB,CAAEC,KAClBC,WAAY,CAAEC,IAAUC,YAAU,KAEpC,CAAEhU,MAAO,OAAQ8T,WAAY,CAAEC,IAAUE,IAAWD,YAAU,MAC9D,CAAEhU,MAAO,YAAa8T,WAAY,CAAEC,IAAUE,IAAWD,YAAU,MACnE,CAAEhU,MAAO,YAAa8T,WAAY,CAAEC,IAAUC,YAAU,MACxD,CAAEhU,MAAO,YAAa8T,WAAY,CAAEE,YAAU,MAC9C,CAAEhU,MAAO,YAAa8T,WAAY,CAAEC,IAAUC,YAAU,MACxD,CAAEhU,MAAO,YAAa8T,WAAY,CAAEC,IAAUC,YAAU,OAGlDE,EAAkBC,aACtB,SAACvO,EAAUwO,EAAmB7U,EAAS8U,GAGrC,OAFAD,GAAkB,GAClBC,GAAgBA,IACTzO,EAAS5D,YAAczC,IAAUuK,MAAK,kBAC3CsK,GAAkB,QAGtB,KAWIE,EAAoB,SAACnT,EAAOoT,GAChC,OAAQA,EAAOlO,MACb,IAAK,cACH,YAAYlF,EAAZ,CAAmBqT,WAAYD,EAAOhO,UACxC,IAAK,eACH,YAAYpF,EAAZ,CAAmBsT,UAAWF,EAAOhO,UACvC,IAAK,oBACH,YAAYpF,EAAZ,CAAmBuT,eAAgBH,EAAOhO,UAC5C,IAAK,eACH,YAAYpF,EAAZ,CAAmBuT,eAAgB,GAAID,UAAW,GAAID,YAAY,IACpE,IAAK,mBACH,YAAYrT,EAAZ,CAAmBwT,YAAaJ,EAAOhO,UACzC,QACE,OAAOpF,IAIPyT,EAAe,SAAC,GAAwC,IAAtCtT,EAAsC,EAAtCA,OAAQ/B,EAA8B,EAA9BA,QAAS6C,EAAqB,EAArBA,eAAqB,EACF2P,uBACxD,oBAAGlM,eAAH,MAA2D,CAAEnE,SAA7D,EAAqBA,SAAkDoE,OAAvE,EAA+BA,OAAgDC,YAA/E,EAAuCA,eACvC8O,gBAH0D,IACpDnT,SAAYmI,EADwC,EACxCA,KAAM3D,EADkC,EAClCA,KAAQJ,EAD0B,EAC1BA,OAAQC,EADkB,EAClBA,YADkB,EAKqB+O,qBAC/ER,EA/BiB,eAACG,EAAD,uDAAa,GAAIC,EAAjB,uDAAkC,GAAlC,MAA0C,CAC7DD,YACAC,iBACA9H,QAAQ,EACR4H,YAAY,EACZG,aAAa,GA2BXI,CAAahP,EAAYxC,KAAMwC,EAAYsC,YAPe,kBAKnDoM,EALmD,EAKnDA,UAAWD,EALwC,EAKxCA,WAAYG,EAL4B,EAK5BA,YAAaD,EALe,EAKfA,eAAkBM,EALH,KAUzCrV,EAAcC,qBAAWC,KAApCF,UAEFiG,EAAWqP,wBACX7I,EAAOC,cACPvM,EAAkBC,YAAmBJ,GACrCqB,EAAqBC,YAAsBtB,GAE3CuV,EAAiB,SAACvP,GACtB,GAAK3E,GAAsBzB,IAAY4C,IAMvC,OADA6S,EAAc,CAAE3O,KAAM,cAAeE,SAAS,IACvCX,EAAS5D,YAAczC,EAASoG,IACtCmE,MAAK,kBAAMkL,EAAc,CAAE3O,KAAM,cAAeE,SAAS,OADnD,OAEA,kBAAMyO,EAAc,CAAE3O,KAAM,cAAeE,SAAS,OAPzDyO,EAAc,CAAE3O,KAAM,cAAeE,SAAS,KAclDkG,qBAAU,WAHR7G,EAAS4B,eAKT0N,IACAC,gBACC,CAAE5V,IAEL,IAAM6V,EAAqB,SAAC3Q,EAAO4B,GACjC,IAEIgP,GAAiB,EAcrB,MAZa,SAAThP,GACF2O,EAAc,CAAE3O,KAAM,eAAgBE,QAAS9B,IAC/C4Q,GAAiB,GACC,cAAThP,IACT2O,EAAc,CAAE3O,KAAM,oBAAqBE,QAAS9B,IACpD4Q,GAAiB,GAGdA,GACHzP,EAAS0B,YAAuB7C,EAAO4B,IAGlC6N,EACLtO,GACA,SAAC+O,GAAD,OACEK,EAAc,CAAE3O,KAAM,mBAAoBE,QAASoO,MACrDpV,EACA8V,GArBmB,kBAAMzP,EAAS0B,YAAuB7C,EAAO4B,OAoC9DiP,EAAe,WAGnB,OAFAN,EAAc,CAAE3O,KAAM,iBACtBT,EAAS2B,eACF2N,KAQT,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAiBlV,MAAM,aACrBF,GAAmB,kBAAC,IAAD,OAEvB,kBAAC,IAAD,CACEgG,OAASA,EACTmG,OAzBS,SAACmB,EAAIkB,EAAOpF,EAAZ,GAAwC,IAAff,EAAe,EAAfA,SAGtC,OAFA6M,EAAc,CAAE3O,KAAM,cAAeE,SAAS,IAC9CX,EAASyB,YAAa,CAAEiH,QAAOpF,YAAWf,cACnC+M,KAuBHrL,KAAOA,EACPyB,WAAaA,EACbC,QAAUA,EACVC,UAAY0J,EACZ5T,OAASA,EACTc,eAAiBA,EACjBsJ,YAAY,WACZC,cAAc,UACdhG,WAAaO,EACbqP,iBAAmBL,EACnBnP,YAAc0O,EACd5I,eAAiB,SAACpH,GAAD,OAAW2Q,EAAmB3Q,EAAO,SACtDqH,UAAY0I,GAAcG,EAC1B5I,WA5Ca,SAAC1J,EAAImK,EAASE,GAC/B9G,EAASwB,YAAc/E,IACvBmK,GAAQ,SAACD,GAAD,OAAUG,EAAQH,EAAMlK,OA2C5B2J,iBAAmB,kBACjB,kBAAC,IAAD,CACEhM,MAAQwV,IAAQzP,GAAe,cAAgB,mBAC/CoJ,KAAO9O,aACP+O,cAAgB,kBACdoG,IAAQzP,GAAe,KACrB,kBAACuM,EAAA,OAAD,CAAQhQ,QAAUgT,EAAepO,QAAQ,QAAzC,sBAKJ1D,YACEgS,IAAQzP,GACJ,GACA,oGAIVmG,oBAAsB,CACpBuJ,QAASjC,EAAa,CAAEjQ,KAAMkR,EAAWpM,UAAWqM,EAAgBpM,OAAQvC,EAAYuC,OAAQG,SAAU1C,EAAY0C,WACtHiN,SAAU,SAACtI,EAAIuI,EAAMC,GAAX,OAAyBA,EAAYN,KAhDjC,EAgD+DK,EAhD7B,cAA/BnR,EAA+B,EAA/BA,IAAeC,EAAgB,MAA1BiP,MAA0B,MAAhBjP,MAChCoR,EAAW,CAAE,OAAQ,aAAc/K,SAAStG,GAAO,GAAKuB,EAAYvB,GAAKoE,QAAO,SAAAkN,GAAG,OAAIrR,IAAUqR,UACvGV,EAAmBS,EAAUrR,IAFV,IAAC,EAAkC,EAA/BA,EAAeC,EAChCoR,IAiDF1J,aAAe,CACb,CACEzH,MAAO0H,EAAKwB,cAAc,CACxBvL,GAAI,YACJwL,eAAgB,cAElBC,aAAc,CACZC,YAAa3B,EAAKwB,cAAc,CAC9BvL,GAAI,sBACJwL,eAAgB,wBAElB,aAAczB,EAAKwB,cAAc,CAC/BvL,GAAI,sBACJwL,eAAgB,wBAElBG,SAAU,SAAC/C,EAAQxG,GAAT,OAAmB2Q,EAAmB3Q,EAAO,cACvDA,MAAOiQ,IAER,CACDhQ,MAAO0H,EAAKwB,cAAc,CACxBvL,GAAI,SACJwL,eAAgB,WAElBxH,KAAM,WACNyH,aAAc,CACZC,YAAa3B,EAAKwB,cAAc,CAC9BvL,GAAI,mBACJwL,eAAgB,qBAElB,aAAczB,EAAKwB,cAAc,CAC/BvL,GAAI,mBACJwL,eAAgB,qBAElBG,SAAU,SAAC/C,EAAQxG,GAAT,OAAmB2Q,EAAmB3Q,EAAO,WACvDA,MAAOsB,EAAYuC,OACnBqF,MAAO,CAAE,WAAY,YAAa,SAAU,WAAY,UAAW,UAAW,WAAYtJ,KAAI,SAAClD,GAAD,MAAY,CACxGuD,MAAOvD,EACPsD,MAAOtD,QAGV,CACDuD,MAAO0H,EAAKwB,cAAc,CACxBvL,GAAI,WACJwL,eAAgB,aAElBxH,KAAM,WACNyH,aAAc,CACZC,YAAa3B,EAAKwB,cAAc,CAC9BvL,GAAI,qBACJwL,eAAgB,uBAElB,aAAczB,EAAKwB,cAAc,CAC/BvL,GAAI,qBACJwL,eAAgB,uBAElBG,SAAU,SAAC/C,EAAQxG,GAAT,OAAmB2Q,EAAmB3Q,EAAO,aACvDA,MAAOsB,EAAY0C,SACnBkF,MAAO,CAAE,WAAY,WAAY,SAAU,QAAS,aAActJ,KAAI,SAAClD,GAAD,MAAY,CAChFuD,MAAOvD,EACPsD,MAAOtD,aASvByT,EAAarP,UAAY,CACvBjE,OAAQkE,IAAUoJ,KAClBxM,eAAgBoD,IAAUoJ,KAC1BrP,QAASiG,IAAUwJ,QAGN4F","file":"js/requests.js","sourcesContent":["import React from 'react';\nimport { APPROVAL_ADMIN_PERSONA } from '../../helpers/shared/helpers';\nimport RequestsList from './requests-list';\n\nconst AllRequests = () => {\n  return <RequestsList persona={ APPROVAL_ADMIN_PERSONA } actionsDisabled={ () => true } />;\n};\n\nexport default AllRequests;\n","import React, { Fragment, useContext } from 'react';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/index';\nimport { useIsApprovalAdmin } from '../../helpers/shared/helpers';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { AppTabs } from '../../smart-components/app-tabs/app-tabs';\nimport UserContext from '../../user-context';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\n\nconst EmptyRequestList = () => {\n  const { userRoles: userRoles } = useContext(UserContext);\n  const isApprovalAdmin = useIsApprovalAdmin(userRoles);\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        { isApprovalAdmin && <AppTabs/> }\n      </TopToolbar>\n      <div className=\"pf-u-mt-xl\">\n        <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n          <EmptyStateIcon icon={ SearchIcon } />\n          <TextContent>\n            <Text component={ TextVariants.h1 }>\n                No requests yet\n            </Text>\n          </TextContent>\n          <EmptyStateBody>\n              Requests that need your attention will appear here.\n          </EmptyStateBody>\n        </EmptyState>\n        <EmptyStateSecondaryActions>\n        </EmptyStateSecondaryActions>\n      </div>\n    </Fragment>);\n};\n\nexport default EmptyRequestList;\n","import React, { Fragment, useContext } from 'react';\nimport { Route, useHistory } from 'react-router-dom';\nimport { fetchRequests } from '../../redux/actions/request-actions';\nimport ActionModal from './action-modal';\nimport {\n  APPROVAL_APPROVER_PERSONA, useIsApprovalAdmin,\n  useIsApprovalApprover,\n  isRequestStateActive\n} from '../../helpers/shared/helpers';\nimport UserContext from '../../user-context';\nimport routesLinks from '../../constants/routes';\nimport RequestsList from './requests-list';\nimport EmptyRequestList from './EmptyRequestList';\n\nconst Requests = () => {\n  const { userRoles: userRoles } = useContext(UserContext);\n  const history = useHistory();\n  const isApprovalAdmin = useIsApprovalAdmin(userRoles);\n  const isApprovalApprover = useIsApprovalApprover(userRoles);\n\n  const routes = () => <Fragment>\n    <Route exact path={ routesLinks.requests.addComment } render={ props => <ActionModal { ...props }\n      actionType={ 'Add Comment' }\n      postMethod={ fetchRequests } /> }/>\n    <Route exact path={ routesLinks.requests.approve } render={ props => <ActionModal { ...props } actionType={ 'Approve' }\n      postMethod={ fetchRequests }/> } />\n    <Route exact path={ routesLinks.requests.deny } render={ props => <ActionModal { ...props } actionType={ 'Deny' }\n      postMethod={ fetchRequests }/> } />\n  </Fragment>;\n\n  const actionsDisabled = (requestData) => requestData &&\n    requestData.state ?\n    !isRequestStateActive(requestData.state) || requestData.number_of_children > 0 ||\n      (!isApprovalApprover && !isApprovalAdmin) : true;\n\n  const actionResolver = (requestData) => {\n    return (requestData && requestData.id && actionsDisabled(requestData) ? null :\n      [\n        {\n          title: 'Comment',\n          component: 'button',\n          onClick: () => history.push({\n            pathname: routesLinks.requests.addComment,\n            search: `?request=${requestData.id}`\n          })\n        }\n      ]);\n  };\n\n  return !isApprovalApprover ?\n    <EmptyRequestList/>\n    : <RequestsList\n      routes={ routes }\n      persona={ APPROVAL_APPROVER_PERSONA }\n      actionsDisabled={ actionsDisabled }\n      actionResolver={ actionResolver }\n    />;\n};\n\nexport default Requests;\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import React, { Fragment } from 'react';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nconst SummaryContent = () => {\n  const { getState } = useFormApi();\n  const { name, description, wfGroups } = getState().values;\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                    Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              { wfGroups && wfGroups.length > 0 && wfGroups.map((group, idx) => (\n                <Fragment key={ group.value }>\n                  <Grid gutter=\"md\">\n                    <GridItem span={ 2 }>\n                      <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                        { idx === 0 ? 'Groups' : '' }\n                      </Text>\n                    </GridItem>\n                    <GridItem span={ 10 }>\n                      <Text className=\"data-table-detail content\" component={ TextVariants.p }>\n                        { group.label }\n                      </Text>\n                    </GridItem>\n                  </Grid>\n                </Fragment>)\n              ) }\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nexport default SummaryContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\n\nimport SummaryContent from '../workflow/add-groups/summary-content';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst componentMapperExtended = {\n  ...componentMapper,\n  summary: SummaryContent\n};\n\nconst FormRenderer = ({ formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      componentMapper={ componentMapperExtended }\n      FormTemplate={ (props) => <FormTemplate { ...props } { ...buttonPositioning[formContainer] }/> }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import * as ActionTypes from '../action-types';\nimport * as RequestHelper from '../../helpers/request/request-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const fetchRequests = (persona, pagination) => (dispatch, getState) => {\n  const { sortBy, requests, filterValue } = getState().requestReducer;\n\n  let finalPagination = pagination || defaultSettings;\n\n  if (!pagination && requests) {\n    const { limit, offset } = requests.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_REQUESTS,\n    payload: RequestHelper.fetchRequests(filterValue, finalPagination, persona, sortBy)\n  });\n};\n\nexport const fetchRequest = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST,\n  payload: RequestHelper.fetchRequestWithSubrequests(apiProps, persona)\n});\n\nexport const fetchRequestContent = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST_CONTENT,\n  payload: RequestHelper.fetchRequestContent(apiProps, persona)\n});\n\nexport const createRequestAction = (actionName, requestId, actionIn) => ({\n  type: ActionTypes.CREATE_REQUEST_ACTION,\n  payload: RequestHelper.createRequestAction(requestId, actionIn),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success',\n        description: `The ${actionName} was successful.`\n      },\n      rejected: {\n        variant: 'danger',\n        title: `${actionName} error`,\n        description: `The ${actionName} action failed.`\n      }\n    }\n  }\n});\n\nexport const expandRequest = (id) => ({\n  type: ActionTypes.EXPAND_REQUEST,\n  payload: id\n});\n\nexport const sortRequests = (sortBy) => ({\n  type: ActionTypes.SORT_REQUESTS,\n  payload: sortBy\n});\n\nexport const setFilterValueRequests = (filterValue, type) => ({\n  type: ActionTypes.SET_FILTER_REQUESTS,\n  payload: { filterValue, type }\n});\n\nexport const clearFilterValueRequests = () => ({\n  type: ActionTypes.CLEAR_FILTER_REQUESTS\n});\n\nexport const resetRequestList = () => ({\n  type: ActionTypes.RESET_REQUEST_LIST\n});\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import { getActionApi, getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_REQUESTER_PERSONA, APPROVAL_APPROVER_PERSONA } from '../shared/helpers';\n\nconst actionApi = getActionApi();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sortPropertiesMapper = (property) => ({\n  'request-id': 'id',\n  opened: 'created_at',\n  requester: 'requester_name',\n  status: 'state'\n}[property] || property\n);\n\nconst filterQuery = (filterValue) => {\n  const query = [];\n  if (filterValue.name) {\n    query.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.requester) {\n    query.push(`filter[requester_name][contains_i]=${filterValue.requester}`);\n  }\n\n  if (filterValue.status) {\n    filterValue.status.forEach(state => {\n      query.push(`filter[state][eq][]=${state}`);\n    });\n  }\n\n  if (filterValue.decision) {\n    filterValue.decision.forEach(dec => {\n      query.push(`filter[decision][eq][]=${dec}`);\n    });\n  }\n\n  return query.join('&');\n};\n\nexport function fetchRequests(filter = {}, pagination = defaultSettings, persona = undefined, sortBy) {\n  const paginationQuery = `&limit=${Math.max(pagination.limit, 10)}&offset=${pagination.offset}`;\n  const sortQuery = `&sort_by=${sortPropertiesMapper(sortBy.property)}:${sortBy.direction}`;\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/?${filterQuery(filter)}${paginationQuery}${sortQuery}`;\n  const fetchHeaders = persona ? { 'x-rh-persona': persona } : undefined;\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n}\n\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    id\n    name\n    number_of_children\n    decision\n    description\n    group_name\n    number_of_finished_children\n    state\n    actions {\n      id\n      operation\n      comments\n      created_at\n      processed_by\n    }\n    requests {\n      id\n      name\n      number_of_children\n      decision\n      description\n      group_name\n      number_of_finished_children\n      state\n      workflow_id\n      parent_id\n      actions {\n        id\n        operation\n        comments\n        created_at\n        processed_by\n      }\n    }\n  }\n}`;\n\nexport const fetchRequestTranscript = (requestId, persona) => {\n  const fetchHeaders = (persona && persona !== APPROVAL_APPROVER_PERSONA) ? { 'x-rh-persona': persona }\n    : { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return graphqlInstance({ method: 'post', url: `${APPROVAL_API_BASE}/graphql`,\n    headers: fetchHeaders, data: { query: requestTranscriptQuery(requestId) }})\n  .then(({ data: { requests }}) => requests);\n};\n\nexport const fetchRequestContent = (id) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}/content`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport const fetchRequestCapabilities = (id, isParent) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}${isParent ? '/requests' : ''}`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport async function fetchRequestWithSubrequests(id, persona) {\n  const requestData = await fetchRequestTranscript(id, persona);\n\n  if (!requestData || requestData.length === 0) { return {}; }\n\n  if (persona === APPROVAL_APPROVER_PERSONA) {\n    if (requestData && requestData.length > 0 && requestData[0].number_of_children > 0) {\n      const result = await fetchRequestCapabilities(id, true);\n\n      if (result && result.data) {\n        requestData[0].requests = requestData[0].requests.map(request => {\n          return {\n            ...result.data.find((item) => (item.id === request.id) && item.metadata),\n            ...request\n          };\n        });\n      }\n    }\n    else {\n      const request = await fetchRequestCapabilities(id, false);\n      if (request) {\n        requestData[0] = { ...requestData[0], metadata: request.metadata };\n      }\n    }\n  }\n\n  return requestData[0];\n}\n\nexport const createRequestAction = (requestId, actionIn) => actionApi.createAction(requestId, actionIn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst approvalTabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n  { eventKey: 1, title: 'All requests', name: '/allrequests' },\n  { eventKey: 2, title: 'Approval processes', name: '/workflows' }];\n\nexport const AppTabs = ({ tabItems = approvalTabItems }) => {\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    history.push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array\n};\n","\nimport React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings, getCurrentPage, getNewPage  } from '../../helpers/shared/pagination';\nimport { DataListLoader } from './loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse,\n  renderEmptyState,\n  sortBy,\n  onSort,\n  activeFiltersConfig,\n  filterConfig\n}) => {\n  const intl = useIntl();\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (_event, selected, index, { id } = {}) => {\n    const newData = rows.map(row => row.id === id || index === -1 ?\n      {\n        ...row,\n        selected: index === -1 ? selected : !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return setRows(newData);\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse\n    ? onCollapse(id, setRows, setOpen)\n    : setRows(setOpen(rows, id));\n\n  const paginationConfig = {\n    itemCount: pagination.count,\n    page: getCurrentPage(pagination.limit, pagination.offset),\n    perPage: pagination.limit,\n    onSetPage: (_e, page) => fetchData({ ...pagination, offset: getNewPage(page, pagination.limit) }),\n    onPerPageSelect: (_e, size) => fetchData({ ...pagination, limit: size }),\n    isDisabled: isLoading\n  };\n\n  const renderToolbar = () => (\n    <PrimaryToolbar\n      className=\"pf-u-p-lg ins__approval__primary_toolbar\"\n      pagination={ paginationConfig }\n      { ...(toolbarButtons && { actionsConfig: {  actions: [ toolbarButtons() ]}}) }\n      filterConfig={ {\n        items: [{\n          label: intl.formatMessage({\n            id: 'name',\n            defaultMessage: 'Name'\n          }),\n          filterValues: {\n            id: 'filter-by-name',\n            placeholder: intl.formatMessage({\n              id: 'filter-by-name',\n              defaultMessage: 'Filter by {title}'\n            }, { title: titleSingular }),\n            'aria-label': intl.formatMessage({\n              id: 'filter-by-name',\n              defaultMessage: 'Filter by {title}'\n            }, { title: titleSingular }),\n            onChange: (_event, value) => onFilterChange(value),\n            value: filterValue\n          }\n        },\n        ...filterConfig\n        ]\n      } }\n      activeFiltersConfig={ activeFiltersConfig }\n    />\n  );\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ `${titlePlural} table` }\n            onCollapse={ onCollapseInternal }\n            rows={ rows }\n            cells={ columns }\n            onSelect={ isSelectable && setSelected }\n            actionResolver={ actionResolver }\n            className=\"table-fix\"\n            sortBy={ sortBy }\n            onSort={ onSort }\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 && (\n            <PrimaryToolbar\n              className=\"pf-u-pl-lg pf-u-pr-lg ins__approval__primary_toolbar\"\n              pagination={ {\n                ...paginationConfig,\n                dropDirection: 'up',\n                variant: 'bottom',\n                isCompact: false\n              } }\n            />\n          ) }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func,\n  renderEmptyState: propTypes.func,\n  sortBy: propTypes.object,\n  onSort: propTypes.func,\n  activeFiltersConfig: propTypes.object,\n  filterConfig: propTypes.array\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null,\n  filterConfig: []\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered aria-label=\"No records\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={ Icon } />\n      <TextContent>\n        <Text component={ TextVariants.h1 }>{ title }</Text>\n      </TextContent>\n      <EmptyStateBody>\n        { description }\n        { renderDescription && renderDescription() }\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        { PrimaryAction && <PrimaryAction /> }\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nexport const createRequestCommentSchema = (isDeny = false) => ({\n  fields: [{\n    component: componentTypes.TEXTAREA,\n    name: 'comments',\n    isRequired: isDeny,\n    label: isDeny ? 'Reason' : 'Comment',\n    ...(isDeny && { validate: [{ type: validatorTypes.REQUIRED }]})\n  }]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { createRequestAction } from '../../redux/actions/request-actions';\nimport { createRequestCommentSchema } from '../../forms/request-comment-form.schema';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\n\nconst ActionModal = ({\n  actionType,\n  addNotification,\n  createRequestAction,\n  closeUrl,\n  postMethod\n}) => {\n  const { push } = useHistory();\n  const [{ request: id }] = useQuery([ 'request' ]);\n\n  const onSubmit = (data) => {\n    const operationType = { 'Add Comment': 'memo', Approve: 'approve', Deny: 'deny' };\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n\n    return postMethod ?\n      createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => postMethod()).then(() => push(closeUrl))\n      : createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n    addNotification({\n      variant: 'warning',\n      title: actionName,\n      dismissable: true,\n      description: `${actionName} was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ actionType === 'Add Comment' ? `Request #${id}` : `${actionType} Request #${id}` }\n      isOpen\n      onClose={ onCancel }\n    >\n      <FormRenderer\n        schema={ createRequestCommentSchema(actionType === 'Deny') }\n        onSubmit={ onSubmit }\n        onCancel={ onCancel }\n        formContainer=\"modal\"\n      />\n    </Modal>\n  );\n};\n\nActionModal.defaultProps = {\n  closeUrl: routes.requests.index\n};\n\nActionModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  createRequestAction: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  actionType: PropTypes.string,\n  closeUrl: PropTypes.oneOfType([ PropTypes.string, PropTypes.shape({ patname: PropTypes.string, search: PropTypes.string }) ])\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRequestAction\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(ActionModal);\n","import React, { Fragment, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { TextContent, Text, TextVariants, Level, LevelItem, Button, Bullseye, Spinner } from '@patternfly/react-core';\nimport { useIsApprovalAdmin, useIsApprovalApprover, isRequestStateActive } from '../../helpers/shared/helpers';\nimport { fetchRequestContent } from '../../helpers/request/request-helper';\nimport UserContext from '../../user-context';\nimport routes from '../../constants/routes';\n\nexport const ExpandedItem = ({ title = '', detail = '' }) => (\n  <TextContent>\n    <Text className=\"data-table-detail heading\" component={ TextVariants.small }>{ title }</Text>\n    <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ detail }</Text>\n  </TextContent>\n);\n\nExpandedItem.propTypes = {\n  title: PropTypes.node,\n  detail: PropTypes.node\n};\n\nconst ExpandableContent = ({ id, number_of_children, state, reason }) => {\n  const requestActive = isRequestStateActive(state) && !number_of_children;\n  const [ requestContent, setRequestContent ] = useState([]);\n  const [ isLoading, setIsLoading ] = useState(true);\n  const [ fetchStarted, setIsFetching ] = useState(false);\n  const { userRoles: userRoles } = useContext(UserContext);\n  const expandedRequests = useSelector(({ requestReducer: { expandedRequests }}) => expandedRequests);\n  const isApprovalAdmin = useIsApprovalAdmin(userRoles);\n  const isApprovalApprover = useIsApprovalApprover(userRoles);\n\n  useEffect(() => {\n    if (!fetchStarted && isLoading && expandedRequests.includes(id)) {\n      setIsFetching(true);\n      fetchRequestContent(id).then((data) => { setRequestContent(data); setIsLoading(false); }).catch(() => setIsLoading(false));\n    }\n  }, [ expandedRequests ]);\n\n  if (isLoading) {\n    return (<Bullseye>\n      <Spinner/>\n    </Bullseye>);\n  }\n\n  return (\n    <Fragment>\n      <Level>\n        <LevelItem>\n          <ExpandedItem title=\"Product\" detail={ requestContent ? requestContent.product : 'Unknown' } />\n        </LevelItem>\n        { requestActive && (isApprovalApprover || isApprovalAdmin) && <LevelItem>\n          <Link to={ { pathname: routes.requests.approve, search: `request=${id}` } }  className=\"pf-u-mr-md\">\n            <Button variant=\"primary\" aria-label=\"Approve Request\" isDisabled={ !requestActive }>\n              Approve\n            </Button>\n          </Link>\n          <Link to={ { pathname: routes.requests.deny, search: `request=${id}` } }>\n            <Button variant=\"danger\" aria-label=\"Deny Request\">\n              Deny\n            </Button>\n          </Link>\n        </LevelItem>\n        }</Level>\n      <Level>\n        <LevelItem>\n          <ExpandedItem title=\"Portfolio\" detail={ requestContent ? requestContent.portfolio : 'Unknown' }/>\n          <ExpandedItem title=\"Platform\" detail={ requestContent ? requestContent.platform : 'Unknown' }/>\n          <ExpandedItem title=\"Reason\" detail={ reason ? reason : '' }/>\n        </LevelItem>\n      </Level>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  id: PropTypes.string,\n  content: PropTypes.object,\n  number_of_children: PropTypes.number,\n  uname: PropTypes.string,\n  state: PropTypes.string,\n  reason: PropTypes.string\n};\n\nexport default ExpandableContent;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport ExpandableContent from './expandable-content';\nimport { timeAgo }  from '../../helpers/shared/helpers';\nimport routes from '../../constants/routes';\nimport { Text } from '@patternfly/react-core';\nimport { decisionValues } from '../../utilities/constants';\n\nconst decisionIcon = (decision) => decisionValues[decision] ? decisionValues[decision].icon : '';\nconst decisionDisplayName = (decision) => decisionValues[decision] ? decisionValues[decision].displayName : '';\n\nexport const createRows = (data) =>\n  data.reduce((acc, { id,\n    name,\n    requester_name,\n    created_at,\n    notified_at,\n    finished_at,\n    state,\n    decision,\n    reason,\n    number_of_children\n  }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      state,\n      number_of_children,\n      cells: [\n        <Fragment key={ id }><Link to={ { pathname: routes.request.index, search: `?request=${id}` } }>{ id }</Link></Fragment>,\n        name,\n        requester_name,\n        timeAgo(created_at),\n        finished_at ? timeAgo(finished_at) : (notified_at ? timeAgo(notified_at) : timeAgo(created_at)),\n        state,\n        <Fragment key={ `decision-${id}` }><Text key={ `${decision}-$(id}` } style={ { marginBottom: 0 } }\n          className=\"data-table-detail content\">\n          { decisionIcon(decision) } { `${decisionDisplayName(decision)}` }\n        </Text></Fragment>\n      ]\n    }, {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [{\n        title: <ExpandableContent id={ id }\n          number_of_children={ number_of_children }\n          state={ state }\n          reason={ reason }/>\n      }]\n    }\n  ]), []);\n\n","export const prepareChips = ({ name, requester, status, decision }) => ([\n  ...(name ? [{\n    category: 'Name',\n    key: 'name',\n    chips: [{ name, value: name }]\n  }] : []),\n  ...(requester ? [{\n    category: 'Requester',\n    key: 'requester',\n    chips: [{ name: requester, value: requester }]\n  }] : []),\n  ...(status && status.length > 0 ? [{\n    category: 'Status',\n    key: 'status',\n    chips: status.map(stat => ({ name: stat, value: stat }))\n  }] : []),\n  ...(decision && decision.length > 0 ? [{\n    category: 'Decision',\n    key: 'decision',\n    chips: decision.map(dec => ({ name: dec, value: dec }))\n  }] : [])\n]);\n","import React, { Fragment, useEffect, useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\nimport { expandable, sortable, wrappable, cellWidth } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/index';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { fetchRequests,\n  expandRequest,\n  sortRequests,\n  setFilterValueRequests,\n  clearFilterValueRequests,\n  resetRequestList } from '../../redux/actions/request-actions';\nimport { createRows } from './request-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { APPROVAL_APPROVER_PERSONA, useIsApprovalAdmin, useIsApprovalApprover } from '../../helpers/shared/helpers';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { AppTabs } from '../../smart-components/app-tabs/app-tabs';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\nimport UserContext from '../../user-context';\nimport { prepareChips } from './chips-helpers';\n\nconst columns = [{\n  title: 'Request ID',\n  cellFormatters: [ expandable ],\n  transforms: [ sortable, cellWidth(5) ]\n},\n{ title: 'Name', transforms: [ sortable, wrappable, cellWidth(25) ]},\n{ title: 'Requester', transforms: [ sortable, wrappable, cellWidth(20) ]},\n{ title: 'Opened   ', transforms: [ sortable, cellWidth(10) ]},\n{ title: 'Updated  ', transforms: [ cellWidth(10) ]},\n{ title: 'Status   ', transforms: [ sortable, cellWidth(15) ]},\n{ title: 'Decision ', transforms: [ sortable, cellWidth(15) ]}\n];\n\nconst debouncedFilter = asyncDebounce(\n  (dispatch, filteringCallback, persona, updateFilter) => {\n    filteringCallback(true);\n    updateFilter && updateFilter();\n    return dispatch(fetchRequests(persona)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst initialState = (nameValue = '', requesterValue = '') => ({\n  nameValue,\n  requesterValue,\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n});\n\nconst requestsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setNameValue':\n      return { ...state, nameValue: action.payload };\n    case 'setRequesterValue':\n      return { ...state, requesterValue: action.payload };\n    case 'clearFilters':\n      return { ...state, requesterValue: '', nameValue: '', isFetching: true };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst RequestsList = ({ routes, persona, actionResolver }) => {\n  const { requests: { data, meta }, sortBy, filterValue } = useSelector(\n    ({ requestReducer: { requests, sortBy, filterValue }}) => ({ requests, sortBy, filterValue }),\n    shallowEqual\n  );\n  const [{ nameValue, isFetching, isFiltering, requesterValue }, stateDispatch ] = useReducer(\n    requestsListState,\n    initialState(filterValue.name, filterValue.requester)\n  );\n\n  const { userRoles: userRoles } = useContext(UserContext);\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const isApprovalAdmin = useIsApprovalAdmin(userRoles);\n  const isApprovalApprover = useIsApprovalApprover(userRoles);\n\n  const updateRequests = (pagination) => {\n    if (!isApprovalApprover && persona === APPROVAL_APPROVER_PERSONA) {\n      stateDispatch({ type: 'setFetching', payload: false });\n      return;\n    }\n\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchRequests(persona, pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const resetList = () => {\n    dispatch(resetRequestList());\n  };\n\n  useEffect(() => {\n    resetList();\n    updateRequests();\n    scrollToTop();\n  }, [ persona ]);\n\n  const handleFilterChange = (value, type) => {\n    const updateFilter = () => dispatch(setFilterValueRequests(value, type));\n\n    let debouncedValue = false;\n\n    if (type === 'name') {\n      stateDispatch({ type: 'setNameValue', payload: value });\n      debouncedValue = true;\n    } else if (type === 'requester') {\n      stateDispatch({ type: 'setRequesterValue', payload: value });\n      debouncedValue = true;\n    }\n\n    if (!debouncedValue) {\n      dispatch(setFilterValueRequests(value, type));\n    }\n\n    return debouncedFilter(\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      persona,\n      debouncedValue && updateFilter\n    );\n  };\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandRequest(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  const onSort = (_e, index, direction, { property }) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(sortRequests({ index, direction, property }));\n    return updateRequests();\n  };\n\n  const clearFilters = () => {\n    stateDispatch({ type: 'clearFilters' });\n    dispatch(clearFilterValueRequests());\n    return updateRequests();\n  };\n\n  const onDeleteChip = ([{ key, chips: [{ value }] }]) => {\n    const newValue = [ 'name', 'requester' ].includes(key) ? '' : filterValue[key].filter(val => value !== val);\n    handleFilterChange(newValue, key);\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        { isApprovalAdmin && <AppTabs/> }\n      </TopToolbar>\n      <TableToolbarView\n        sortBy={ sortBy }\n        onSort={ onSort }\n        data={ data }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ updateRequests }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"requests\"\n        titleSingular=\"request\"\n        pagination={ meta }\n        handlePagination={ updateRequests }\n        filterValue={ nameValue }\n        onFilterChange={ (value) => handleFilterChange(value, 'name') }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n        renderEmptyState={ () => (\n          <TableEmptyState\n            title={ isEmpty(filterValue) ? 'No requests' : 'No results found' }\n            Icon={ SearchIcon }\n            PrimaryAction={ () =>\n              isEmpty(filterValue) ? null : (\n                <Button onClick={ clearFilters } variant=\"link\">\n                            Clear all filters\n                </Button>\n              )\n            }\n            description={\n              isEmpty(filterValue)\n                ? ''\n                : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n            }\n          />\n        ) }\n        activeFiltersConfig={ {\n          filters: prepareChips({ name: nameValue, requester: requesterValue, status: filterValue.status, decision: filterValue.decision }),\n          onDelete: (_e, chip, deleteAll) => deleteAll ? clearFilters() : onDeleteChip(chip)\n        } }\n        filterConfig={ [\n          {\n            label: intl.formatMessage({\n              id: 'requester',\n              defaultMessage: 'Requester'\n            }),\n            filterValues: {\n              placeholder: intl.formatMessage({\n                id: 'filter-by-requester',\n                defaultMessage: 'Filter by requester'\n              }),\n              'aria-label': intl.formatMessage({\n                id: 'filter-by-requester',\n                defaultMessage: 'Filter by requester'\n              }),\n              onChange: (_event, value) => handleFilterChange(value, 'requester'),\n              value: requesterValue\n            }\n          }, {\n            label: intl.formatMessage({\n              id: 'status',\n              defaultMessage: 'Status'\n            }),\n            type: 'checkbox',\n            filterValues: {\n              placeholder: intl.formatMessage({\n                id: 'filter-by-status',\n                defaultMessage: 'Filter by status'\n              }),\n              'aria-label': intl.formatMessage({\n                id: 'filter-by-status',\n                defaultMessage: 'Filter by status'\n              }),\n              onChange: (_event, value) => handleFilterChange(value, 'status'),\n              value: filterValue.status,\n              items: [ 'canceled', 'completed', 'failed', 'notified', 'pending', 'skipped', 'started' ].map((state) => ({\n                label: state,\n                value: state\n              }))\n            }\n          }, {\n            label: intl.formatMessage({\n              id: 'decision',\n              defaultMessage: 'Decision'\n            }),\n            type: 'checkbox',\n            filterValues: {\n              placeholder: intl.formatMessage({\n                id: 'filter-by-decision',\n                defaultMessage: 'Filter by decision'\n              }),\n              'aria-label': intl.formatMessage({\n                id: 'filter-by-decision',\n                defaultMessage: 'Filter by decision'\n              }),\n              onChange: (_event, value) => handleFilterChange(value, 'decision'),\n              value: filterValue.decision,\n              items: [ 'approved', 'canceled', 'denied', 'error', 'undecided' ].map((state) => ({\n                label: state,\n                value: state\n              }))\n            }\n          }\n        ] }\n      />\n    </Fragment>);\n};\n\nRequestsList.propTypes = {\n  routes: PropTypes.func,\n  actionResolver: PropTypes.func,\n  persona: PropTypes.string\n};\n\nexport default RequestsList;\n"],"sourceRoot":""}