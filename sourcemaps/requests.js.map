{"version":3,"sources":["webpack:///./src/smart-components/request/expandable-content.js","webpack:///./src/smart-components/request/request-table-helpers.js","webpack:///./src/smart-components/request/requests.js","webpack:///./src/smart-components/request/chips-helpers.js","webpack:///./src/constants/routes.js","webpack:///./src/utilities/use-query.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/redux/actions/request-actions.js","webpack:///./src/helpers/request/request-helper.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/forms/request-comment-form.schema.js","webpack:///./src/smart-components/request/action-modal.js"],"names":["ExpandedItem","title","detail","TextContent","Text","className","component","TextVariants","small","h5","propTypes","PropTypes","node","ExpandableContent","id","number_of_children","state","reason","requestActive","isRequestStateActive","useState","requestContent","setRequestContent","isLoading","setIsLoading","fetchStarted","setIsFetching","userPersona","useContext","UserContext","expandedRequests","useSelector","requestReducer","useEffect","includes","fetchRequestContent","then","data","Bullseye","Spinner","Level","LevelItem","product","isApprovalApprover","to","pathname","routes","requests","approve","search","Button","variant","aria-label","isDisabled","deny","portfolio","platform","string","content","object","number","uname","createRows","reduce","acc","key","name","requester_name","created_at","notified_at","finished_at","decision","isOpen","cells","request","index","timeAgo","parent","fullWidth","columns","cellFormatters","expandable","transforms","sortable","debouncedFilter","asyncDebounce","dispatch","filteringCallback","persona","updateFilter","fetchRequests","requestsListState","action","type","isFetching","payload","nameValue","requesterValue","isFiltering","Requests","sortBy","filterValue","shallowEqual","meta","useReducer","initialState","requester","stateDispatch","useDispatch","history","useHistory","intl","useIntl","updateRequests","pagination","scrollToTop","status","handleFilterChange","value","debouncedValue","setFilterValueRequests","clearFilters","clearFilterValueRequests","isApprovalAdmin","tabItems","eventKey","onSort","_e","direction","property","sortRequests","fetchData","exact","path","routesLinks","addComment","render","props","actionType","postMethod","actionResolver","requestData","areActionsDisabled","onClick","push","titlePlural","titleSingular","handlePagination","onFilterChange","onCollapse","setRows","setOpen","expandRequest","rows","renderEmptyState","isEmpty","Icon","SearchIcon","PrimaryAction","description","activeFiltersConfig","filters","category","chips","length","map","stat","dec","onDelete","chip","deleteAll","newValue","filter","val","filterConfig","label","formatMessage","defaultMessage","filterValues","placeholder","onChange","_event","items","array","bool","defaultProps","workflows","add","remove","editInfo","editGroups","editSequence","useQuery","requiredParams","useLocation","query","URLSearchParams","curr","get","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","getState","finalPagination","defaultSettings","limit","offset","ActionTypes","RequestHelper","fetchRequest","apiProps","createRequestAction","actionName","requestId","actionIn","notifications","fulfilled","rejected","actionApi","getActionApi","graphqlInstance","getGraphqlInstance","sortPropertiesMapper","opened","filterQuery","forEach","join","undefined","paginationQuery","Math","max","sortQuery","fetchUrl","APPROVAL_API_BASE","fetchHeaders","getAxiosInstance","method","url","headers","fetchRequestTranscript","parent_id","APPROVAL_APPROVER_PERSONA","APPROVAL_REQUESTER_PERSONA","fetchRequestCapabilities","isParent","fetchRequestWithSubrequests","a","result","find","item","metadata","createAction","AppTabs","location","activeTab","activeKey","onSelect","tabIndex","shape","isRequired","func","withRouter","TableToolbarView","isSelectable","toolbarButtons","setCheckedItems","row","setSelected","newData","selected","checkedItems","paginationConfig","itemCount","count","page","getCurrentPage","perPage","onSetPage","getNewPage","onPerPageSelect","size","page-type","actionsConfig","actions","_index","_isOpen","dropDirection","isCompact","TableEmptyState","renderDescription","centered","icon","h1","any","Select","input","isReadOnly","FieldProvider","rest","FormSelect","inputValue","selectOptions","createOptions","FormSelectOption","toString","arrayOf","Pf4SelectWrapper","componentType","helperText","hideLabel","error","showError","touched","FormGroup","fieldId","isValid","helperTextInvalid","buttonPositioning","default","modal","buttonOrder","buttonClassName","FormRenderer","componentMapper","formContainer","formFieldsMapper","componentTypes","SELECT","layoutMapper","oneOf","schemaFields","isDeny","TEXTAREA_FIELD","createRequestCommentSchema","schema","validate","validatorTypes","REQUIRED","fields","ActionModal","addNotification","closeUrl","onCancel","dismissable","Modal","isLarge","onClose","schemaType","onSubmit","operationType","Approve","Deny","operation","match","connect","bindActionCreators"],"mappings":"sYAUaA,EAAe,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,MAAeC,cAAf,MAAwB,GAAxB,SAC1B,kBAACC,EAAA,YAAD,KACE,kBAACC,EAAA,KAAD,CAAMC,UAAU,4BAA4BC,UAAYC,eAAaC,OAAUP,GAC/E,kBAACG,EAAA,KAAD,CAAMC,UAAU,4BAA4BC,UAAYC,eAAaE,IAAOP,KAIhFF,EAAaU,UAAY,CACvBT,MAAOU,IAAUC,KACjBV,OAAQS,IAAUC,MAGpB,IAAMC,EAAoB,SAAC,GAA8C,IAA5CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,mBAAoBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACpDC,EAAgBC,YAAqBH,KAAWD,EADiB,EAEzBK,mBAAS,IAFgB,WAE/DC,EAF+D,KAE/CC,EAF+C,OAGnCF,oBAAS,GAH0B,WAG/DG,EAH+D,KAGpDC,EAHoD,OAI/BJ,oBAAS,GAJsB,WAI/DK,EAJ+D,KAIjDC,EAJiD,KAKlDC,EAAgBC,qBAAWC,KAAxCF,YACFG,EAAmBC,uBAAY,qBAAGC,eAAkBF,oBAS1D,OAPAG,qBAAU,YACHR,GAAgBF,GAAaO,EAAiBI,SAASpB,KAC1DY,GAAc,GACdS,YAAoBrB,GAAIsB,MAAK,SAACC,GAAWf,EAAkBe,GAAOb,GAAa,MAA/E,OAAgG,kBAAMA,GAAa,SAEpH,CAAEM,IAEDP,EACM,kBAACe,EAAA,SAAD,KACN,kBAACC,EAAA,QAAD,OAKF,kBAAC,WAAD,KACE,kBAACC,EAAA,MAAD,KACE,kBAACC,EAAA,UAAD,KACE,kBAAC,EAAD,CAAcxC,MAAM,UAAUC,OAASmB,EAAiBA,EAAeqB,QAAU,aAEjFxB,GAAiByB,YAAmBhB,IAAgB,kBAACc,EAAA,UAAD,KACpD,kBAAC,OAAD,CAAMG,GAAK,CAAEC,SAAUC,IAAOC,SAASC,QAASC,OAAQ,WAAF,OAAanC,IAAUT,UAAU,cACrF,kBAAC6C,EAAA,OAAD,CAAQC,QAAQ,UAAUC,aAAW,kBAAkBC,YAAcnC,GAArE,YAIF,kBAAC,OAAD,CAAM0B,GAAK,CAAEC,SAAUC,IAAOC,SAASO,KAAML,OAAQ,WAAF,OAAanC,KAC9D,kBAACoC,EAAA,OAAD,CAAQC,QAAQ,SAASC,aAAW,gBAApC,WAMN,kBAACZ,EAAA,MAAD,KACE,kBAACC,EAAA,UAAD,KACE,kBAAC,EAAD,CAAcxC,MAAM,YAAYC,OAASmB,EAAiBA,EAAekC,UAAY,YACrF,kBAAC,EAAD,CAActD,MAAM,WAAWC,OAASmB,EAAiBA,EAAemC,SAAW,YACnF,kBAAC,EAAD,CAAcvD,MAAM,SAASC,OAASe,GAAkB,SAOlEJ,EAAkBH,UAAY,CAC5BI,GAAIH,IAAU8C,OACdC,QAAS/C,IAAUgD,OACnB5C,mBAAoBJ,IAAUiD,OAC9BC,MAAOlD,IAAU8C,OACjBzC,MAAOL,IAAU8C,OACjBxC,OAAQN,IAAU8C,QAGL5C,QC5EFiD,EAAa,SAACzB,GAAD,OACxBA,EAAK0B,QAAO,SAACC,EAAD,EAUTC,GAVS,IAAQnD,EAAR,EAAQA,GAClBoD,EADU,EACVA,KACAC,EAFU,EAEVA,eACAC,EAHU,EAGVA,WACAC,EAJU,EAIVA,YACAC,EALU,EAKVA,YACAtD,EANU,EAMVA,MACAuD,EAPU,EAOVA,SACAtD,EARU,EAQVA,OACAF,EATU,EASVA,mBATU,oBAWPiD,GAXO,CAWF,CACNlD,KACA0D,QAAQ,EACRxD,QACAD,qBACA0D,MAAO,CACL,kBAAC,WAAD,CAAUR,IAAMnD,GAAK,kBAAC,OAAD,CAAM8B,GAAK,CAAEC,SAAUC,IAAO4B,QAAQC,MAAO1B,OAAQ,YAAF,OAAcnC,KAAWoD,IACjGC,EACAS,YAAQR,GACRE,EAAcM,YAAQN,GAAgBD,EAAcO,YAAQP,GAAeO,YAAQR,GACnFpD,EACAuD,IAED,CACDM,OAAc,EAANZ,EACRa,WAAW,EACXL,MAAO,CAAC,CACNxE,MAAO,kBAAC,EAAD,CAAmBa,GAAKA,EAC7BC,mBAAqBA,EACrBC,MAAQA,EACRC,OAASA,WAGb,K,6mBCjBN,IAAM8D,EAAU,CAAC,CACf9E,MAAO,OACP+E,eAAgB,CAAEC,KAClBC,WAAY,CAAEC,MAEhB,CAAElF,MAAO,YAAaiF,WAAY,CAAEC,MACpC,CAAElF,MAAO,SAAUiF,WAAY,CAAEC,MACjC,CAAElF,MAAO,WACT,CAAEA,MAAO,SAAUiF,WAAY,CAAEC,MACjC,CAAElF,MAAO,WAAYiF,WAAY,CAAEC,OAG7BC,EAAkBC,aACtB,SAACC,EAAUC,EAAmBC,EAASC,GAGrC,OAFAF,GAAkB,GAClBE,GAAgBA,IACTH,EAASI,YAAcF,IAAUpD,MAAK,kBAC3CmD,GAAkB,QAGtB,KAWII,EAAoB,SAAC3E,EAAO4E,GAChC,OAAQA,EAAOC,MACb,IAAK,cACH,YAAY7E,EAAZ,CAAmB8E,WAAYF,EAAOG,UACxC,IAAK,eACH,YAAY/E,EAAZ,CAAmBgF,UAAWJ,EAAOG,UACvC,IAAK,oBACH,YAAY/E,EAAZ,CAAmBiF,eAAgBL,EAAOG,UAC5C,IAAK,eACH,YAAY/E,EAAZ,CAAmBiF,eAAgB,GAAID,UAAW,GAAIF,YAAY,IACpE,IAAK,mBACH,YAAY9E,EAAZ,CAAmBkF,YAAaN,EAAOG,UACzC,QACE,OAAO/E,IAIPmF,EAAW,WAAM,MACqCpE,uBACxD,oBAAGC,eAAH,MAA2D,CAAEe,SAA7D,EAAqBA,SAAkDqD,OAAvE,EAA+BA,OAAgDC,YAA/E,EAAuCA,eACvCC,gBAHmB,IACbvD,SAAYV,EADC,EACDA,KAAMkE,EADL,EACKA,KAAQH,EADb,EACaA,OAAQC,EADrB,EACqBA,YADrB,EAK4DG,qBAC/Eb,EA/BiB,eAACK,EAAD,uDAAa,GAAIC,EAAjB,uDAAkC,GAAlC,MAA0C,CAC7DD,YACAC,iBACAzB,QAAQ,EACRsB,YAAY,EACZI,aAAa,GA2BXO,CAAaJ,EAAYnC,KAAMmC,EAAYK,YAPxB,kBAKZV,EALY,EAKZA,UAAWF,EALC,EAKDA,WAAYI,EALX,EAKWA,YAAaD,EALxB,EAKwBA,eAAkBU,EAL1C,KAUAhF,EAAgBC,qBAAWC,KAAxCF,YAEF2D,EAAWsB,wBACXC,EAAUC,cACVC,EAAOC,cAEPC,EAAiB,SAACC,GAEtB,OADAP,EAAc,CAAEd,KAAM,cAAeE,SAAS,IACvCT,EAASI,YAAc/D,EAAauF,IAC1C9E,MAAK,kBAAMuE,EAAc,CAAEd,KAAM,cAAeE,SAAS,OADnD,OAEA,kBAAMY,EAAc,CAAEd,KAAM,cAAeE,SAAS,QAG7D9D,qBAAU,WACRgF,IACAE,gBACC,IAEH,ICpG2B,EAAEjD,EAAMwC,EAAWU,EAAQ7C,EDoGhD8C,EAAqB,SAACC,EAAOzB,GACjC,IAEI0B,GAAiB,EAcrB,MAZa,SAAT1B,GACFc,EAAc,CAAEd,KAAM,eAAgBE,QAASuB,IAC/CC,GAAiB,GACC,cAAT1B,IACTc,EAAc,CAAEd,KAAM,oBAAqBE,QAASuB,IACpDC,GAAiB,GAGdA,GACHjC,EAASkC,YAAuBF,EAAOzB,IAGlCT,EACLE,GACA,SAACY,GAAD,OACES,EAAc,CAAEd,KAAM,mBAAoBE,QAASG,MACrDvE,EACA4F,GArBmB,kBAAMjC,EAASkC,YAAuBF,EAAOzB,OAkE9D4B,EAAe,WAGnB,OAFAd,EAAc,CAAEd,KAAM,iBACtBP,EAASoC,eACFT,KAQT,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAiBhH,MAAM,aACrB0H,YAAgBhG,IAAgB,kBAAC,IAAD,CAASiG,SAxDhC,CAAC,CAAEC,SAAU,EAAG5H,MAAO,gBAAiBiE,KAAM,aAC7D,CAAE2D,SAAU,EAAG5H,MAAO,qBAAsBiE,KAAM,kBAyDhD,kBAAC,IAAD,CACEkC,OAASA,EACT0B,OAzBS,SAACC,EAAIpD,EAAOqD,EAAZ,GAAwC,IAAfC,EAAe,EAAfA,SAGtC,OAFAtB,EAAc,CAAEd,KAAM,cAAeE,SAAS,IAC9CT,EAAS4C,YAAa,CAAEvD,QAAOqD,YAAWC,cACnChB,KAuBH5E,KAAOA,EACPyB,WAAaA,EACbiB,QAAUA,EACVoD,UAAYlB,EACZnE,OA9DS,kBAAM,kBAAC,WAAD,KACnB,kBAAC,IAAD,CAAOsF,OAAK,EAACC,KAAOC,IAAYvF,SAASwF,WAAaC,OAAS,SAAAC,GAAK,OAAI,kBAAC,IAAD,OAAkBA,EAAlB,CACtEC,WAAa,cACbC,WAAajD,UACf,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAOC,IAAYvF,SAASC,QAAUwF,OAAS,SAAAC,GAAK,OAAI,kBAAC,IAAD,OAAkBA,EAAlB,CAA0BC,WAAa,UAC1GC,WAAajD,UACf,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAOC,IAAYvF,SAASO,KAAOkF,OAAS,SAAAC,GAAK,OAAI,kBAAC,IAAD,OAAkBA,EAAlB,CAA0BC,WAAa,OACvGC,WAAajD,YAwDXkD,eAjDiB,SAACC,GACtB,OAAQA,GAAeA,EAAY/H,IALV,SAAC+H,GAAD,OAAiBA,IAC1CA,EAAY7H,SACXG,YAAqB0H,EAAY7H,QAAU6H,EAAY9H,mBAAqB,IAAM4B,YAAmBhB,IAG7DmH,CAAmBD,GAAe,KACzE,CACE,CACE5I,MAAO,UACP8I,QAAS,kBAAMlC,EAAQmC,KAAK,CAC1BnG,SAAUyF,IAAYvF,SAASwF,WAC/BtF,OAAQ,YAAF,OAAc4F,EAAY/H,UA2CpCmI,YAAY,WACZC,cAAc,UACdhC,WAAaX,EACb4C,iBAAmBlC,EACnBZ,YAAcL,EACdoD,eAAiB,SAAC9B,GAAD,OAAWD,EAAmBC,EAAO,SACtD/F,UAAYuE,GAAcI,EAC1BmD,WA5Ca,SAACvI,EAAIwI,EAASC,GAC/BjE,EAASkE,YAAc1I,IACvBwI,GAAQ,SAACG,GAAD,OAAUF,EAAQE,EAAM3I,OA2C5B4I,iBAAmB,kBACjB,kBAAC,IAAD,CACEzJ,MAAQ0J,IAAQtD,GAAe,cAAgB,mBAC/CuD,KAAOC,aACPC,cAAgB,kBACdH,IAAQtD,GAAe,KACrB,kBAACnD,EAAA,OAAD,CAAQ6F,QAAUtB,EAAetE,QAAQ,QAAzC,sBAKJ4G,YACEJ,IAAQtD,GACJ,GACA,oGAIV2D,oBAAsB,CACpBC,SC5NmB,ED4NG,CAAE/F,KAAM8B,EAAWU,UAAWT,EAAgBmB,OAAQf,EAAYe,OAAQ7C,SAAU8B,EAAY9B,UC5NjGL,EAAH,EAAGA,KAAMwC,EAAT,EAASA,UAAWU,EAApB,EAAoBA,OAAQ7C,EAA5B,EAA4BA,SAA5B,cACtBL,EAAO,CAAC,CACVgG,SAAU,OACVjG,IAAK,OACLkG,MAAO,CAAC,CAAEjG,OAAMoD,MAAOpD,MACpB,IALqB,IAMtBwC,EAAY,CAAC,CACfwD,SAAU,YACVjG,IAAK,YACLkG,MAAO,CAAC,CAAEjG,KAAMwC,EAAWY,MAAOZ,MAC/B,IAVqB,IAWtBU,GAAUA,EAAOgD,OAAS,EAAI,CAAC,CACjCF,SAAU,SACVjG,IAAK,SACLkG,MAAO/C,EAAOiD,KAAI,SAAAC,GAAI,MAAK,CAAEpG,KAAMoG,EAAMhD,MAAOgD,QAC7C,IAfqB,IAgBtB/F,GAAYA,EAAS6F,OAAS,EAAI,CAAC,CACrCF,SAAU,WACVjG,IAAK,WACLkG,MAAO5F,EAAS8F,KAAI,SAAAE,GAAG,MAAK,CAAErG,KAAMqG,EAAKjD,MAAOiD,QAC7C,MDyMGC,SAAU,SAACzC,EAAI0C,EAAMC,GAAX,OAAyBA,EAAYjD,KAhDjC,EAgD+DgD,EAhD7B,cAA/BxG,EAA+B,EAA/BA,IAAeqD,EAAgB,MAA1B6C,MAA0B,MAAhB7C,MAChCqD,EAAW,CAAE,OAAQ,aAAczI,SAAS+B,GAAO,GAAKoC,EAAYpC,GAAK2G,QAAO,SAAAC,GAAG,OAAIvD,IAAUuD,UACvGxD,EAAmBsD,EAAU1G,IAFV,IAAC,EAAkC,EAA/BA,EAAeqD,EAChCqD,IAiDFG,aAAe,CACb,CACEC,MAAOhE,EAAKiE,cAAc,CACxBlK,GAAI,YACJmK,eAAgB,cAElBC,aAAc,CACZC,YAAapE,EAAKiE,cAAc,CAC9BlK,GAAI,sBACJmK,eAAgB,wBAElB,aAAclE,EAAKiE,cAAc,CAC/BlK,GAAI,sBACJmK,eAAgB,wBAElBG,SAAU,SAACC,EAAQ/D,GAAT,OAAmBD,EAAmBC,EAAO,cACvDA,MAAOrB,IAER,CACD8E,MAAOhE,EAAKiE,cAAc,CACxBlK,GAAI,SACJmK,eAAgB,WAElBpF,KAAM,WACNqF,aAAc,CACZC,YAAapE,EAAKiE,cAAc,CAC9BlK,GAAI,mBACJmK,eAAgB,qBAElB,aAAclE,EAAKiE,cAAc,CAC/BlK,GAAI,mBACJmK,eAAgB,qBAElBG,SAAU,SAACC,EAAQ/D,GAAT,OAAmBD,EAAmBC,EAAO,WACvDA,MAAOjB,EAAYe,OACnBkE,MAAO,CAAE,WAAY,YAAa,SAAU,WAAY,UAAW,UAAW,WAAYjB,KAAI,SAACrJ,GAAD,MAAY,CACxG+J,MAAO/J,EACPsG,MAAOtG,QAGV,CACD+J,MAAOhE,EAAKiE,cAAc,CACxBlK,GAAI,WACJmK,eAAgB,aAElBpF,KAAM,WACNqF,aAAc,CACZC,YAAapE,EAAKiE,cAAc,CAC9BlK,GAAI,qBACJmK,eAAgB,uBAElB,aAAclE,EAAKiE,cAAc,CAC/BlK,GAAI,qBACJmK,eAAgB,uBAElBG,SAAU,SAACC,EAAQ/D,GAAT,OAAmBD,EAAmBC,EAAO,aACvDA,MAAOjB,EAAY9B,SACnB+G,MAAO,CAAE,WAAY,WAAY,SAAU,QAAS,aAAcjB,KAAI,SAACrJ,GAAD,MAAY,CAChF+J,MAAO/J,EACPsG,MAAOtG,aASvBmF,EAASzF,UAAY,CACnBqC,SAAUpC,IAAU4K,MACpBhK,UAAWZ,IAAU6K,MAGvBrF,EAASsF,aAAe,CACtB1I,SAAU,GACVxB,WAAW,GAGE4E,a,iCEtRArD,IAvBA,CACbC,SAAU,CACR4B,MAAO,YACP4D,WAAY,wBACZvF,QAAS,oBACTM,KAAM,kBAERoB,QAAS,CACPC,MAAO,WACP4D,WAAY,uBACZvF,QAAS,mBACTM,KAAM,iBAERoI,UAAW,CACT/G,MAAO,aACPgH,IAAK,0BACLC,OAAQ,oBACRC,SAAU,uBACVC,WAAY,yBACZC,aAAc,8B,8nBCDHC,IAhBE,WAAyB,IAAxBC,EAAwB,uDAAP,GAAO,EACrBC,cAAXjJ,EADgC,EAChCA,OACFkJ,EAAQ,IAAIC,gBAAgBnJ,GAClC,MAAO,CACLgJ,EAAelI,QACb,SAACC,EAAKqI,GAAN,YACKrI,EADL,OAEGqI,EAAOF,EAAMG,IAAID,OAEpB,IAEFpJ,EACAkJ,K,iCCdJ,aAEe,aACbI,GADa,IAEbC,EAFa,uDAEE,IACfC,EAHa,uDAGH,CAAEC,kBAAkB,GAHjB,OAIVC,YAAuBJ,EAAeC,EAAcC,K,iCCNzD,4SAIa/G,EAAgB,SAACF,EAAS0B,GAAV,OAAyB,SAAC5B,EAAUsH,GAAa,MAClCA,IAAW5K,eAA7CoE,EADoE,EACpEA,OAAQrD,EAD4D,EAC5DA,SAAUsD,EADkD,EAClDA,YAEtBwG,EAAkB3F,GAAc4F,IAEpC,IAAK5F,GAAcnE,EAAU,OACDA,EAASwD,KACnCsG,EAAkB,CAAEE,MAFO,EACnBA,MACmBC,OAFA,EACZA,QAIjB,OAAO1H,EAAS,CACdO,KAAMoH,IACNlH,QAASmH,IAA4B7G,EAAawG,EAAiBrH,EAASY,OAInE+G,EAAe,SAACC,EAAU5H,GAAX,MAAwB,CAClDK,KAAMoH,IACNlH,QAASmH,IAA0CE,EAAU5H,KAGlDrD,EAAsB,SAACiL,EAAU5H,GAAX,MAAwB,CACzDK,KAAMoH,IACNlH,QAASmH,IAAkCE,EAAU5H,KAG1C6H,EAAsB,SAACC,EAAYC,EAAWC,GAAxB,MAAsC,CACvE3H,KAAMoH,IACNlH,QAASmH,IAAkCK,EAAWC,GACtDjH,KAAM,CACJkH,cAAe,CACbC,UAAW,CACTvK,QAAS,UACTlD,MAAO,UACP8J,YAAa,OAAF,OAASuD,EAAT,qBAEbK,SAAU,CACRxK,QAAS,SACTlD,MAAO,GAAF,OAAKqN,EAAL,UACLvD,YAAa,OAAF,OAASuD,EAAT,wBAMN9D,EAAgB,SAAC1I,GAAD,MAAS,CACpC+E,KAAMoH,IACNlH,QAASjF,IAGEoH,EAAe,SAAC9B,GAAD,MAAa,CACvCP,KAAMoH,IACNlH,QAASK,IAGEoB,EAAyB,SAACnB,EAAaR,GAAd,MAAwB,CAC5DA,KAAMoH,IACNlH,QAAS,CAAEM,cAAaR,UAGb6B,EAA2B,iBAAO,CAC7C7B,KAAMoH,O,g0BC5DR,IAAMW,EAAYC,cACZC,EAAkBC,cAElBC,EAAuB,SAAC/F,GAAD,MAAe,CAC1CgG,OAAQ,aACRvH,UAAW,iBACXU,OAAQ,SACRa,IAAaA,GAETiG,EAAc,SAAC7H,GACnB,IAAM8F,EAAQ,GAqBd,OApBI9F,EAAYnC,MACdiI,EAAMnD,KAAN,mCAAuC3C,EAAYnC,OAGjDmC,EAAYK,WACdyF,EAAMnD,KAAN,6CAAiD3C,EAAYK,YAG3DL,EAAYe,QACdf,EAAYe,OAAO+G,SAAQ,SAAAnN,GACzBmL,EAAMnD,KAAN,8BAAkChI,OAIlCqF,EAAY9B,UACd8B,EAAY9B,SAAS4J,SAAQ,SAAA5D,GAC3B4B,EAAMnD,KAAN,iCAAqCuB,OAIlC4B,EAAMiC,KAAK,MAGb,SAAS1I,IAAsF,IAAxEkF,EAAwE,uDAA/D,GAAI1D,EAA2D,uDAA9C4F,IAAiBtH,EAA6B,4DAAnB6I,EAAWjI,EAAQ,uCAC9FkI,EAAkB,UAAH,OAAaC,KAAKC,IAAItH,EAAW6F,MAAO,IAAxC,mBAAsD7F,EAAW8F,QAChFyB,EAAY,YAAH,OAAeT,EAAqB5H,EAAO6B,UAA3C,YAAwD7B,EAAO4B,WACxE0G,EAAW,GAAH,OAAMC,IAAN,sBAAqCT,EAAYtD,IAAjD,OAA2D0D,GAA3D,OAA6EG,GACrFG,EAAepJ,EAAU,CAAE,eAAgBA,QAAY6I,EAC7D,OAAOQ,cAAmB,CAAEC,OAAQ,MAAOC,IAAKL,EAAUM,QAASJ,IAGrE,IAuCaK,EAAyB,SAAC1B,EAAW/H,GAChD,IAxC8B0J,EAwCxBN,EAAgBpJ,GAAWA,IAAY2J,IAA6B,CAAE,eAAgB3J,GACxF,CAAE,eAAgB4J,KACtB,OAAOtB,EAAgB,CAAEgB,OAAQ,OAAQC,IAAK,GAAF,OAAKJ,IAAL,YAC1CK,QAASJ,EAAcvM,KAAM,CAAE8J,OA3CH+C,EA2CiC3B,EA3ClC,mCACb2B,EADa,qkBA4C5B9M,MAAK,qBAAGC,KAAQU,aAGNZ,EAAsB,SAACrB,GAClC,IAAM4N,EAAW,GAAH,OAAMC,IAAN,qBAAoC7N,EAApC,YACR8N,EAAe,CAAE,eAAgBQ,KACvC,OAAOP,cAAmB,CAAEC,OAAQ,MAAOC,IAAKL,EAAUM,QAASJ,KAGxDS,EAA2B,SAACvO,EAAIwO,GAC3C,IAAMZ,EAAW,GAAH,OAAMC,IAAN,qBAAoC7N,GAApC,OAAyCwO,EAAW,YAAc,IAC1EV,EAAe,CAAE,eAAgBQ,KACvC,OAAOP,cAAmB,CAAEC,OAAQ,MAAOC,IAAKL,EAAUM,QAASJ,KAG9D,SAAeW,EAAtB,oC,oCAAO,WAA2CzO,EAAI0E,GAA/C,mBAAAgK,EAAA,sEACqBP,EAAuBnO,EAAI0E,GADhD,WACCqD,EADD,SAGsC,IAAvBA,EAAYuB,OAH3B,yCAGkD,IAHlD,UAKD5E,IAAY2J,IALX,sBAMCtG,GAAeA,EAAYuB,OAAS,GAAKvB,EAAY,GAAG9H,mBAAqB,GAN9E,iCAOoBsO,EAAyBvO,GAAI,GAPjD,QAOK2O,EAPL,SASaA,EAAOpN,OACnBwG,EAAY,GAAG9F,SAAW8F,EAAY,GAAG9F,SAASsH,KAAI,SAAA3F,GACpD,YAAY+K,EAAOpN,KAAKqN,MAAK,SAACC,GAAD,OAAWA,EAAK7O,KAAO4D,EAAQ5D,IAAO6O,EAAKC,YAAxE,GACKlL,OAZR,yCAiBqB2K,EAAyBvO,GAAI,GAjBlD,SAiBK4D,EAjBL,UAmBCmE,EAAY,GAAZ,KAAsBA,EAAY,GAAlC,CAAsC+G,SAAUlL,EAAQkL,YAnBzD,sCAwBQ/G,EAAY,KAxBpB,6C,sBA2BA,SAAewE,EAAtB,oC,oCAAO,WAAoCE,EAAWC,GAA/C,SAAAgC,EAAA,sEACQ5B,EAAUiC,aAAatC,EAAWC,GAD1C,oF,yDCrIP,8DAKMsC,EAAU,SAAC,GAA4D,IAA/C9G,EAA+C,EAA1DnC,QAAWmC,KAAoBnG,EAA2B,EAAvCkN,SAAYlN,SAAY+E,EAAe,EAAfA,SACtDoI,EAAYpI,EAAS8H,MAAK,gBAAGxL,EAAH,EAAGA,KAAH,OAAcrB,EAASX,SAASgC,MAGhE,OACE,kBAAC,OAAD,CAAM7D,UAAU,aAAa4P,UAAYD,EAAYA,EAAUnI,SAAW,EAAIqI,SAHzD,SAAC7E,EAAQ8E,GAAT,OAAsBnH,EAAKpB,EAASuI,GAAUjM,QAI/D0D,EAASyC,KAAI,SAACsF,GAAD,OAAU,kBAAC,MAAD,CAAK1P,MAAQ0P,EAAK1P,MAAQgE,IAAM0L,EAAK9H,SAAWA,SAAW8H,EAAK9H,SAAW3D,KAAOyL,EAAKzL,YAKtH4L,EAAQpP,UAAY,CAClBqP,SAAUpP,IAAUyP,MAAM,CACxBvN,SAAUlC,IAAU8C,OAAO4M,aAE7BxJ,QAASlG,IAAUyP,MAAM,CACvBpH,KAAMrI,IAAU2P,KAAKD,aAEvBzI,SAAUjH,IAAU4K,MAAM8E,YAGbE,gBAAWT,I,kzBCVnB,IAAMU,EAAmB,SAAC,GAsB3B,IArBJC,EAqBI,EArBJA,aACA3M,EAoBI,EApBJA,WACAiB,EAmBI,EAnBJA,QACAoD,EAkBI,EAlBJA,UACAuI,EAiBI,EAjBJA,eACArO,EAgBI,EAhBJA,KACAuG,EAeI,EAfJA,eACA9F,EAcI,EAdJA,OACAmG,EAaI,EAbJA,YACAC,EAYI,EAZJA,cACAhC,EAWI,EAXJA,WACAyJ,EAUI,EAVJA,gBACAtK,EASI,EATJA,YACA+C,EAQI,EARJA,eACA7H,EAOI,EAPJA,UACA8H,EAMI,EANJA,WACAK,EAKI,EALJA,iBACAtD,EAII,EAJJA,OACA0B,EAGI,EAHJA,OACAkC,EAEI,EAFJA,oBACAc,EACI,EADJA,aAEM/D,EAAOC,cADT,EAEsB5F,mBAAS,IAF/B,WAEIqI,EAFJ,KAEUH,EAFV,KAIJrH,qBAAU,WACRqH,EAAQxF,EAAWzB,MAClB,CAAEA,IAEL,IAAMkH,EAAU,SAAClH,EAAMvB,GAAP,OAAcuB,EAAKgI,KAAI,SAAAuG,GAAG,OAAIA,EAAI9P,KAAOA,EAAX,KAEvC8P,EAFuC,CAG1CpM,QAASoM,EAAIpM,SAH6B,KAKvCoM,OAGDC,EAAc,SAACxO,EAAMvB,GACzB,IAAMgQ,EAAUzO,EAAKgI,KAAI,SAAAuG,GAAG,OAAIA,EAAI9P,KAAOA,EAAX,KAEzB8P,EAFyB,CAG5BG,UAAWH,EAAIG,WAHa,KAKzBH,MAGDI,EAAeF,EAAQlG,QAAO,SAAA+E,GAAI,OAAKA,EAAK7O,IAAM6O,EAAKoB,YAE7D,OADAJ,EAAgBK,GACTF,GAWHG,EAAmB,CACvBC,UAAWhK,EAAWiK,MACtBC,KAAMC,YAAenK,EAAW6F,MAAO7F,EAAW8F,QAClDsE,QAASpK,EAAW6F,MACpBwE,UAAW,SAACxJ,EAAIqJ,GAAL,OAAcjJ,EAAU,EAAD,GAAMjB,EAAN,CAAkB8F,OAAQwE,YAAWJ,EAAMlK,EAAW6F,WACxF0E,gBAAiB,SAAC1J,EAAI2J,GAAL,OAAcvJ,EAAU,EAAD,GAAMjB,EAAN,CAAkB6F,MAAO2E,MACjErO,WAAY9B,GAmCd,OACE,kBAAC,UAAD,CAASsE,KAAK,UAAU8L,YAAA,cAAmB1I,GAAgBnI,GAAE,cAAUmI,IACnEnG,IAjCJ,kBAAC,iBAAD,KACEzC,UAAU,2CACV6G,WAAa+J,GACPP,GAAkB,CAAEkB,cAAe,CAAGC,QAAS,CAAEnB,OAHzD,CAIE5F,aAAe,CACbQ,MAAO,CAAC,CACNP,MAAOhE,EAAKiE,cAAc,CACxBlK,GAAI,OACJmK,eAAgB,SAElBC,aAAc,CACZpK,GAAI,iBACJqK,YAAapE,EAAKiE,cAAc,CAC9BlK,GAAI,iBACJmK,eAAgB,qBACf,CAAEhL,MAAOiJ,IACZ,aAAcnC,EAAKiE,cAAc,CAC/BlK,GAAI,iBACJmK,eAAgB,qBACf,CAAEhL,MAAOiJ,IACZkC,SAAU,SAACC,EAAQ/D,GAAT,OAAmB8B,EAAe9B,IAC5CA,MAAOjB,KAhBN,WAmBFyE,KAGLd,oBAAsBA,KAQpBzI,GAAa,kBAAC,IAAD,MACZA,GAA6B,IAAhBkI,EAAKW,OAGnB,kBAAC,WAAD,MACK7I,GACH,kBAAC,IAAD,CACE6B,aAAA,UAAgB6F,EAAhB,UACAI,WA7DiB,SAACgC,EAAQyG,EAAQC,EAAjB,OAA4BjR,EAA5B,EAA4BA,GAA5B,OAAqCuI,EAC9DA,EAAWvI,EAAIwI,EAASC,GACxBD,GAAQ,SAACG,GAAD,OAAUF,EAAQE,EAAM3I,OA4DxB2I,KAAOA,EACPhF,MAAQM,EACRmL,SAAWO,GA5DH,SAACpF,EAAQ0F,EAAUpM,GAAnB,6DAAmC,GAAP7D,EAA5B,EAA4BA,GAA5B,OACdwI,GADmE,IAAX3E,EAChD8E,EAAKY,KAAI,SAAAuG,GAAG,YAAUA,EAAV,CAAeG,gBAC3B,SAACtH,GAAD,OAAUoH,EAAYpH,EAAM3I,MA2D9B8H,eAAiBA,EACjBvI,UAAU,YACV+F,OAASA,EACT0B,OAASA,GAET,kBAAC,IAAD,MACA,kBAAC,IAAD,OAEAZ,EAAWiK,MAAQ,GACnB,kBAAC,iBAAD,CACE9Q,UAAU,uDACV6G,WAAU,KACL+J,EADK,CAERe,cAAe,KACf7O,QAAS,SACT8O,WAAW,OAzBnBvI,MAkCR8G,EAAiB9P,UAAY,CAC3B+P,aAAc/P,IAAU8K,KACxB1H,WAAYpD,IAAU4P,KAAKD,WAC3BtL,QAASrE,IAAU6K,MAAM8E,WACzBK,eAAgBhQ,IAAU4P,KAC1BnI,UAAWzH,IAAU4P,KAAKD,WAC1BhO,KAAM3B,IAAU6K,MAChBrE,WAAYxG,IAAU0P,MAAM,CAC1BrD,MAAOrM,IAAUkD,OACjBoJ,OAAQtM,IAAUkD,OAClBuN,MAAOzQ,IAAUkD,SAEnBqF,YAAavI,IAAU+C,OACvByF,cAAexI,IAAU+C,OACzBX,OAAQpC,IAAU4P,KAClB1H,eAAgBlI,IAAU4P,KAC1BK,gBAAiBjQ,IAAU4P,KAC3BjK,YAAa3F,IAAU+C,OACvB2F,eAAgB1I,IAAU4P,KAC1B/O,UAAWb,IAAU8K,KACrBnC,WAAY3I,IAAU4P,KACtB5G,iBAAkBhJ,IAAU4P,KAC5BlK,OAAQ1F,IAAUiD,OAClBmE,OAAQpH,IAAU4P,KAClBtG,oBAAqBtJ,IAAUiD,OAC/BmH,aAAcpK,IAAU6K,OAG1BiF,EAAiB/E,aAAe,CAC9B1I,SAAU,GACVxB,WAAW,EACX2F,WAAY4F,IACZ2D,aAAc,KACd3N,OAAQ,kBAAM,MACd4G,iBAAkB,kBAAM,MACxB5B,OAAQ,kBAAM,MACdgD,aAAc,K,iCCjMhB,yGAeMoH,GAfN,MAewB,SAAC,GAAD,IACtBjS,EADsB,EACtBA,MACA2J,EAFsB,EAEtBA,KACAG,EAHsB,EAGtBA,YACAD,EAJsB,EAItBA,cACAqI,EALsB,EAKtBA,kBALsB,OAOtB,kBAAC,aAAD,CAAYC,UAAQ,EAClBhP,aAAW,cAEX,kBAAC,aAAD,CAAY/C,UAAU,6BACpB,kBAAC,iBAAD,CAAgBgS,KAAOzI,IACvB,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMtJ,UAAYC,eAAa+R,IAAOrS,IAExC,kBAAC,iBAAD,KACI8J,EACAoI,KAEJ,kBAAC,6BAAD,KACIrI,GAAiB,kBAACA,EAAD,WAM3BoI,EAAgBzG,aAAe,CAC7B0G,kBAAmB,kBAAM,OAG3BD,EAAgBxR,UAAY,CAC1BT,MAAOU,IAAU8C,OAAO4M,WACxBzG,KAAMjJ,IAAU4R,IAAIlC,WACpBtG,YAAapJ,IAAU8C,OAAO4M,WAC9BvG,cAAenJ,IAAU4R,IACzBJ,kBAAmBxR,IAAU2P,MAGhB4B,MASRvR,IAAU8C,OAAO4M,WACf1P,IAAU8C,OAAO4M,Y,8NChDpBmC,EAAS,SAAC,GAAD,IACbC,EADa,EACbA,MACAhG,EAFa,EAEbA,QACAiG,EAHa,EAGbA,WACArP,EAJa,EAIbA,WAEAgN,GANa,EAKbsC,cALa,EAMbtC,YACGuC,EAPU,yFASb,kBAACC,EAAA,WAAD,OAAiBJ,EAAaG,EAA9B,CAAqCvP,WAAaA,GAAcqP,IApB5C,SAACjG,EAASqG,EAAYzC,GAC1C,GAAIyC,GAAczC,EAChB,OAAO5D,EAGT,IAAMsG,EAAgB,IAAKtG,GAC3B,OAAOsG,EAAcrD,MAAK,wBAAyBrB,IAAzB,EAAG/G,SAAtB,IACEyL,GADF,CAEF,CAAEhI,MAAOsF,EAAa,gBAAkB,SAFtC,WAEmD0C,IAatDC,CAAcvG,EAASgG,EAAMnL,MAAO+I,GAAYhG,KAAI,SAAC5B,GAAD,OACpD,kBAACwK,EAAA,iBAAD,KAAkBhP,IAAMwE,EAAMnB,OAASmB,EAAMsC,OAAatC,EAA1D,CAAkEsC,MAAQtC,EAAMsC,MAAMmI,mBAK5FV,EAAO9R,UAAY,CACjB+R,MAAO9R,IAAUgD,OAAO0M,WACxB5D,QAAS9L,IAAUwS,QAAQxS,IAAUyP,MAAM,CACzC9I,MAAO3G,IAAU4R,IACjBxH,MAAOpK,IAAU8C,OAAO4M,cACtBA,WACJqC,WAAY/R,IAAU6K,KACtBnI,WAAY1C,IAAU6K,KACtB6E,WAAY1P,IAAU6K,KACtBmH,cAAehS,IAAU4R,KAG3B,IAAMa,EAAmB,SAAC,GASpB,EARJC,cAQI,IAPJtI,EAOI,EAPJA,MACAsF,EAMI,EANJA,WACAiD,EAKI,EALJA,WACA/M,EAII,EAJJA,KACAwD,EAGI,EAHJA,YACAwJ,EAEI,EAFJA,UACGX,EACC,4FACIY,EAAmBjN,EAAnBiN,MACFC,EADqBlN,EAAZmN,SACcF,EAE7B,OACE,kBAACG,EAAA,UAAD,CACEtD,WAAaA,EACbtF,OAASwI,GAAaxI,EACtB6I,QAAUhB,EAAK9R,GACf+S,SAAWJ,EACXH,WAAaA,EACbQ,kBAAoBvN,EAAKiN,OAEvBzJ,GAAe,kBAAC5J,EAAA,YAAD,KAAa,kBAACC,EAAA,KAAD,CAAME,UAAYC,eAAaC,OAAUuJ,IACvE,kBAAC,EAAD,KAAQgB,MAAQA,EAAQ8I,SAAWJ,EAAYpD,WAAaA,GAAkBuC,MAKpFQ,EAAiB1S,UAAY,CAC3B2S,cAAe1S,IAAU8C,OACzBsH,MAAOpK,IAAU8C,OACjB4M,WAAY1P,IAAU6K,KACtB8H,WAAY3S,IAAU8C,OACtB8C,KAAM5F,IAAUgD,OAChBoG,YAAapJ,IAAU8C,OACvB8P,UAAW5S,IAAU6K,MAGR4H,Q,ikBC3Ef,IAAMW,EAAoB,CACxBC,QAAS,GACTC,MAAO,CACLC,YAAa,CAAE,SAAU,QAAS,QAClCC,gBAAiB,2BAIfC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,cAAkB1B,EAAtC,kDACnB,yBAAKvS,UAAY0T,EAAkBO,GAAeH,iBAChD,kBAAC,IAAD,KACEI,iBAAgB,KACXA,mBADW,KAEdF,mBACCG,iBAAeC,OAASrB,IAE3BsB,aAAeA,gBACVX,EAAkBO,GAClB1B,MAKXwB,EAAa1T,UAAY,CACvB2T,gBAAiB1T,IAAUgD,OAC3B2Q,cAAe3T,IAAUgU,MAAM,CAAE,UAAW,WAG9CP,EAAa3I,aAAe,CAC1B4I,gBAAiB,GACjBC,cAAe,WAGFF,Q,kDCrCTQ,EAAe,SAACC,GAAD,MAAY,CAC/BvU,UAAWkU,iBAAeM,eAC1B5Q,KAAM,WACN2B,KAAM,OACNwK,WAAYwE,EACZ9J,MAAO8J,EAAS,SAAW,YAGhBE,EAA6B,WAAoB,IAAnBF,EAAmB,wDACtDG,EAASJ,EAAaC,GAO5B,OANIA,IACFG,EAAOC,SAAW,CAAC,CACjBpP,KAAMqP,iBAAeC,YAIlB,CAAEC,OAAQ,CAAEJ,K,mlBCLrB,IAAMK,EAAc,SAAC,GAMf,IALJ3M,EAKI,EALJA,WACA4M,EAII,EAJJA,gBACAjI,EAGI,EAHJA,oBACAkI,EAEI,EAFJA,SACA5M,EACI,EADJA,WAEQK,EAASlC,cAATkC,KADJ,EAEsBgD,YAAS,CAAE,YAAnBlL,EAFd,YAEK4D,QAkBH8Q,EAAW,WACf,IAAMlI,EAA4B,gBAAf5E,EAA+BA,EAA/B,UAA+CA,EAA/C,YACnB4M,EAAgB,CACdnS,QAAS,UACTlD,MAAOqN,EACPmI,aAAa,EACb1L,YAAa,GAAF,OAAKuD,EAAL,iCAEbtE,EAAKuM,IAGP,OACE,kBAACG,EAAA,MAAD,CACEC,SAAO,EACP1V,MAAuB,gBAAfyI,EAAA,mBAA2C5H,GAA3C,UAAqD4H,EAArD,qBAA4E5H,GACpF0D,QAAM,EACNoR,QAAUJ,GAEV,kBAAC,EAAD,CACER,OAASD,EAA2C,SAAfrM,GACrCmN,WAAW,UACXC,SArCW,SAACzT,GAChB,IAAM0T,EAAgB,CAAE,cAAe,OAAQC,QAAS,UAAWC,KAAM,QACnE3I,EAA4B,gBAAf5E,EAA+BA,EAA/B,UAA+CA,EAA/C,YACnB,OAAOC,EACL0E,EACEC,EACAxM,EAFiB,GAGfoV,UAAWH,EAAcrN,IAAgBrG,IAC3CD,MAAK,kBAAMuG,OAAcvG,MAAK,kBAAM4G,EAAKuM,MACzClI,EACAC,EACAxM,EAFmB,GAGjBoV,UAAWH,EAAcrN,IAAgBrG,IAC3CD,MAAK,kBAAM4G,EAAKuM,OAyBhBC,SAAWA,EACXlB,cAAc,YAMtBe,EAAY5J,aAAe,CACzB8J,SAAUzS,IAAOC,SAAS4B,OAG5B0Q,EAAY3U,UAAY,CACtB4U,gBAAiB3U,IAAU2P,KAAKD,WAChChD,oBAAqB1M,IAAU2P,KAAKD,WACpC1H,WAAYhI,IAAU2P,KACtBxP,GAAIH,IAAU8C,OACdiF,WAAY/H,IAAU8C,OACtB8R,SAAU5U,IAAU8C,OACpB0S,MAAOxV,IAAUgD,OACjBoM,SAAUpP,IAAUgD,QAQPyS,sBAAQ,MALI,SAAC9Q,GAAD,OAAc+Q,YAAmB,CAC1Df,kCACAjI,yBACC/H,KAEY8Q,CAAkCf","file":"js/requests.js","sourcesContent":["import React, { Fragment, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { TextContent, Text, TextVariants, Level, LevelItem, Button, Bullseye, Spinner } from '@patternfly/react-core';\nimport { isApprovalApprover, isRequestStateActive } from '../../helpers/shared/helpers';\nimport { fetchRequestContent } from '../../helpers/request/request-helper';\nimport UserContext from '../../user-context';\nimport routes from '../../constants/routes';\n\nexport const ExpandedItem = ({ title = '', detail = '' }) => (\n  <TextContent>\n    <Text className=\"data-table-detail heading\" component={ TextVariants.small }>{ title }</Text>\n    <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ detail }</Text>\n  </TextContent>\n);\n\nExpandedItem.propTypes = {\n  title: PropTypes.node,\n  detail: PropTypes.node\n};\n\nconst ExpandableContent = ({ id, number_of_children, state, reason }) => {\n  const requestActive = isRequestStateActive(state) && !number_of_children;\n  const [ requestContent, setRequestContent ] = useState([]);\n  const [ isLoading, setIsLoading ] = useState(true);\n  const [ fetchStarted, setIsFetching ] = useState(false);\n  const { userPersona: userPersona } = useContext(UserContext);\n  const expandedRequests = useSelector(({ requestReducer: { expandedRequests }}) => expandedRequests);\n\n  useEffect(() => {\n    if (!fetchStarted && isLoading && expandedRequests.includes(id)) {\n      setIsFetching(true);\n      fetchRequestContent(id).then((data) => { setRequestContent(data); setIsLoading(false); }).catch(() => setIsLoading(false));\n    }\n  }, [ expandedRequests ]);\n\n  if (isLoading) {\n    return (<Bullseye>\n      <Spinner/>\n    </Bullseye>);\n  }\n\n  return (\n    <Fragment>\n      <Level>\n        <LevelItem>\n          <ExpandedItem title=\"Product\" detail={ requestContent ? requestContent.product : 'Unknown' } />\n        </LevelItem>\n        { requestActive && isApprovalApprover(userPersona) && <LevelItem>\n          <Link to={ { pathname: routes.requests.approve, search: `request=${id}` } }  className=\"pf-u-mr-md\">\n            <Button variant=\"primary\" aria-label=\"Approve Request\" isDisabled={ !requestActive }>\n              Approve\n            </Button>\n          </Link>\n          <Link to={ { pathname: routes.requests.deny, search: `request=${id}` } }>\n            <Button variant=\"danger\" aria-label=\"Deny Request\">\n              Deny\n            </Button>\n          </Link>\n        </LevelItem>\n        }</Level>\n      <Level>\n        <LevelItem>\n          <ExpandedItem title=\"Portfolio\" detail={ requestContent ? requestContent.portfolio : 'Unknown' }/>\n          <ExpandedItem title=\"Platform\" detail={ requestContent ? requestContent.platform : 'Unknown' }/>\n          <ExpandedItem title=\"Reason\" detail={ reason ? reason : '' }/>\n        </LevelItem>\n      </Level>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  id: PropTypes.string,\n  content: PropTypes.object,\n  number_of_children: PropTypes.number,\n  uname: PropTypes.string,\n  state: PropTypes.string,\n  reason: PropTypes.string\n};\n\nexport default ExpandableContent;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport ExpandableContent from './expandable-content';\nimport { timeAgo }  from '../../helpers/shared/helpers';\nimport routes from '../../constants/routes';\n\nexport const createRows = (data) =>\n  data.reduce((acc, { id,\n    name,\n    requester_name,\n    created_at,\n    notified_at,\n    finished_at,\n    state,\n    decision,\n    reason,\n    number_of_children\n  }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      state,\n      number_of_children,\n      cells: [\n        <Fragment key={ id }><Link to={ { pathname: routes.request.index, search: `?request=${id}` } }>{ name }</Link></Fragment>,\n        requester_name,\n        timeAgo(created_at),\n        finished_at ? timeAgo(finished_at) : (notified_at ? timeAgo(notified_at) : timeAgo(created_at)),\n        state,\n        decision\n      ]\n    }, {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [{\n        title: <ExpandableContent id={ id }\n          number_of_children={ number_of_children }\n          state={ state }\n          reason={ reason }/>\n      }]\n    }\n  ]), []);\n\n","import React, { Fragment, useEffect, useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Route, useHistory } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { expandable, sortable } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/index';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { fetchRequests, expandRequest, sortRequests, setFilterValueRequests, clearFilterValueRequests } from '../../redux/actions/request-actions';\nimport ActionModal from './action-modal';\nimport { createRows } from './request-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { isApprovalAdmin, isApprovalApprover, isRequestStateActive } from '../../helpers/shared/helpers';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../../smart-components/app-tabs/app-tabs';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\nimport UserContext from '../../user-context';\nimport routesLinks from '../../constants/routes';\nimport { prepareChips } from './chips-helpers';\n\nconst columns = [{\n  title: 'Name',\n  cellFormatters: [ expandable ],\n  transforms: [ sortable ]\n},\n{ title: 'Requester', transforms: [ sortable ]},\n{ title: 'Opened', transforms: [ sortable ]},\n{ title: 'Updated' },\n{ title: 'Status', transforms: [ sortable ]},\n{ title: 'Decision', transforms: [ sortable ]}\n];\n\nconst debouncedFilter = asyncDebounce(\n  (dispatch, filteringCallback, persona, updateFilter) => {\n    filteringCallback(true);\n    updateFilter && updateFilter();\n    return dispatch(fetchRequests(persona)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst initialState = (nameValue = '', requesterValue = '') => ({\n  nameValue,\n  requesterValue,\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n});\n\nconst requestsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setNameValue':\n      return { ...state, nameValue: action.payload };\n    case 'setRequesterValue':\n      return { ...state, requesterValue: action.payload };\n    case 'clearFilters':\n      return { ...state, requesterValue: '', nameValue: '', isFetching: true };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Requests = () => {\n  const { requests: { data, meta }, sortBy, filterValue } = useSelector(\n    ({ requestReducer: { requests, sortBy, filterValue }}) => ({ requests, sortBy, filterValue }),\n    shallowEqual\n  );\n  const [{ nameValue, isFetching, isFiltering, requesterValue }, stateDispatch ] = useReducer(\n    requestsListState,\n    initialState(filterValue.name, filterValue.requester)\n  );\n\n  const { userPersona: userPersona } = useContext(UserContext);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const intl = useIntl();\n\n  const updateRequests = (pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchRequests(userPersona, pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    updateRequests();\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value, type) => {\n    const updateFilter = () => dispatch(setFilterValueRequests(value, type));\n\n    let debouncedValue = false;\n\n    if (type === 'name') {\n      stateDispatch({ type: 'setNameValue', payload: value });\n      debouncedValue = true;\n    } else if (type === 'requester') {\n      stateDispatch({ type: 'setRequesterValue', payload: value });\n      debouncedValue = true;\n    }\n\n    if (!debouncedValue) {\n      dispatch(setFilterValueRequests(value, type));\n    }\n\n    return debouncedFilter(\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      userPersona,\n      debouncedValue && updateFilter\n    );\n  };\n\n  const tabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n    { eventKey: 1, title: 'Approval processes', name: '/workflows' }];\n\n  const routes = () => <Fragment>\n    <Route exact path={ routesLinks.requests.addComment } render={ props => <ActionModal { ...props }\n      actionType={ 'Add Comment' }\n      postMethod={ fetchRequests } /> }/>\n    <Route exact path={ routesLinks.requests.approve } render={ props => <ActionModal { ...props } actionType={ 'Approve' }\n      postMethod={ fetchRequests }/> } />\n    <Route exact path={ routesLinks.requests.deny } render={ props => <ActionModal { ...props } actionType={ 'Deny' }\n      postMethod={ fetchRequests }/> } />\n  </Fragment>;\n\n  const areActionsDisabled = (requestData) => requestData &&\n    requestData.state ?\n    !isRequestStateActive(requestData.state) || requestData.number_of_children > 0 || !isApprovalApprover(userPersona) : true;\n\n  const actionResolver = (requestData) => {\n    return (requestData && requestData.id && areActionsDisabled(requestData) ? null :\n      [\n        {\n          title: 'Comment',\n          onClick: () => history.push({\n            pathname: routesLinks.requests.addComment,\n            search: `?request=${requestData.id}`\n          })\n        }\n      ]);\n  };\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandRequest(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  const onSort = (_e, index, direction, { property }) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(sortRequests({ index, direction, property }));\n    return updateRequests();\n  };\n\n  const clearFilters = () => {\n    stateDispatch({ type: 'clearFilters' });\n    dispatch(clearFilterValueRequests());\n    return updateRequests();\n  };\n\n  const onDeleteChip = ([{ key, chips: [{ value }] }]) => {\n    const newValue = [ 'name', 'requester' ].includes(key) ? '' : filterValue[key].filter(val => value !== val);\n    handleFilterChange(newValue, key);\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        { isApprovalAdmin(userPersona) && <AppTabs tabItems={ tabItems } /> }\n      </TopToolbar>\n      <TableToolbarView\n        sortBy={ sortBy }\n        onSort={ onSort }\n        data={ data }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ updateRequests }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"requests\"\n        titleSingular=\"request\"\n        pagination={ meta }\n        handlePagination={ updateRequests }\n        filterValue={ nameValue }\n        onFilterChange={ (value) => handleFilterChange(value, 'name') }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n        renderEmptyState={ () => (\n          <TableEmptyState\n            title={ isEmpty(filterValue) ? 'No requests' : 'No results found' }\n            Icon={ SearchIcon }\n            PrimaryAction={ () =>\n              isEmpty(filterValue) ? null : (\n                <Button onClick={ clearFilters } variant=\"link\">\n                            Clear all filters\n                </Button>\n              )\n            }\n            description={\n              isEmpty(filterValue)\n                ? ''\n                : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n            }\n          />\n        ) }\n        activeFiltersConfig={ {\n          filters: prepareChips({ name: nameValue, requester: requesterValue, status: filterValue.status, decision: filterValue.decision }),\n          onDelete: (_e, chip, deleteAll) => deleteAll ? clearFilters() : onDeleteChip(chip)\n        } }\n        filterConfig={ [\n          {\n            label: intl.formatMessage({\n              id: 'requester',\n              defaultMessage: 'Requester'\n            }),\n            filterValues: {\n              placeholder: intl.formatMessage({\n                id: 'filter-by-requester',\n                defaultMessage: 'Filter by requester'\n              }),\n              'aria-label': intl.formatMessage({\n                id: 'filter-by-requester',\n                defaultMessage: 'Filter by requester'\n              }),\n              onChange: (_event, value) => handleFilterChange(value, 'requester'),\n              value: requesterValue\n            }\n          }, {\n            label: intl.formatMessage({\n              id: 'status',\n              defaultMessage: 'Status'\n            }),\n            type: 'checkbox',\n            filterValues: {\n              placeholder: intl.formatMessage({\n                id: 'filter-by-status',\n                defaultMessage: 'Filter by status'\n              }),\n              'aria-label': intl.formatMessage({\n                id: 'filter-by-status',\n                defaultMessage: 'Filter by status'\n              }),\n              onChange: (_event, value) => handleFilterChange(value, 'status'),\n              value: filterValue.status,\n              items: [ 'canceled', 'completed', 'failed', 'notified', 'pending', 'skipped', 'started' ].map((state) => ({\n                label: state,\n                value: state\n              }))\n            }\n          }, {\n            label: intl.formatMessage({\n              id: 'decision',\n              defaultMessage: 'Decision'\n            }),\n            type: 'checkbox',\n            filterValues: {\n              placeholder: intl.formatMessage({\n                id: 'filter-by-decision',\n                defaultMessage: 'Filter by decision'\n              }),\n              'aria-label': intl.formatMessage({\n                id: 'filter-by-decision',\n                defaultMessage: 'Filter by decision'\n              }),\n              onChange: (_event, value) => handleFilterChange(value, 'decision'),\n              value: filterValue.decision,\n              items: [ 'approved', 'canceled', 'denied', 'error', 'undecided' ].map((state) => ({\n                label: state,\n                value: state\n              }))\n            }\n          }\n        ] }\n      />\n    </Fragment>);\n};\n\nRequests.propTypes = {\n  requests: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nRequests.defaultProps = {\n  requests: [],\n  isLoading: false\n};\n\nexport default Requests;\n","export const prepareChips = ({ name, requester, status, decision }) => ([\n  ...(name ? [{\n    category: 'Name',\n    key: 'name',\n    chips: [{ name, value: name }]\n  }] : []),\n  ...(requester ? [{\n    category: 'Requester',\n    key: 'requester',\n    chips: [{ name: requester, value: requester }]\n  }] : []),\n  ...(status && status.length > 0 ? [{\n    category: 'Status',\n    key: 'status',\n    chips: status.map(stat => ({ name: stat, value: stat }))\n  }] : []),\n  ...(decision && decision.length > 0 ? [{\n    category: 'Decision',\n    key: 'decision',\n    chips: decision.map(dec => ({ name: dec, value: dec }))\n  }] : [])\n]);\n","const routes = {\n  requests: {\n    index: '/requests',\n    addComment: '/requests/add-comment',\n    approve: '/requests/approve',\n    deny: '/requests/deny'\n  },\n  request: {\n    index: '/request',\n    addComment: '/request/add-comment',\n    approve: '/request/approve',\n    deny: '/request/deny'\n  },\n  workflows: {\n    index: '/workflows',\n    add: '/workflows/add-workflow',\n    remove: '/workflows/remove',\n    editInfo: '/workflows/edit-info',\n    editGroups: '/workflows/edit-groups',\n    editSequence: '/workflows/edit-sequence'\n  }\n};\n\nexport default routes;\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import * as ActionTypes from '../action-types';\nimport * as RequestHelper from '../../helpers/request/request-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const fetchRequests = (persona, pagination) => (dispatch, getState) => {\n  const { sortBy, requests, filterValue } = getState().requestReducer;\n\n  let finalPagination = pagination || defaultSettings;\n\n  if (!pagination && requests) {\n    const { limit, offset } = requests.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_REQUESTS,\n    payload: RequestHelper.fetchRequests(filterValue, finalPagination, persona, sortBy)\n  });\n};\n\nexport const fetchRequest = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST,\n  payload: RequestHelper.fetchRequestWithSubrequests(apiProps, persona)\n});\n\nexport const fetchRequestContent = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST_CONTENT,\n  payload: RequestHelper.fetchRequestContent(apiProps, persona)\n});\n\nexport const createRequestAction = (actionName, requestId, actionIn) => ({\n  type: ActionTypes.CREATE_REQUEST_ACTION,\n  payload: RequestHelper.createRequestAction(requestId, actionIn),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success',\n        description: `The ${actionName} was successful.`\n      },\n      rejected: {\n        variant: 'danger',\n        title: `${actionName} error`,\n        description: `The ${actionName} action failed.`\n      }\n    }\n  }\n});\n\nexport const expandRequest = (id) => ({\n  type: ActionTypes.EXPAND_REQUEST,\n  payload: id\n});\n\nexport const sortRequests = (sortBy) => ({\n  type: ActionTypes.SORT_REQUESTS,\n  payload: sortBy\n});\n\nexport const setFilterValueRequests = (filterValue, type) => ({\n  type: ActionTypes.SET_FILTER_REQUESTS,\n  payload: { filterValue, type }\n});\n\nexport const clearFilterValueRequests = () => ({\n  type: ActionTypes.CLEAR_FILTER_REQUESTS\n});\n","import { getActionApi, getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_REQUESTER_PERSONA, APPROVAL_APPROVER_PERSONA } from '../shared/helpers';\n\nconst actionApi = getActionApi();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sortPropertiesMapper = (property) => ({\n  opened: 'created_at',\n  requester: 'requester_name',\n  status: 'state'\n}[property] || property);\n\nconst filterQuery = (filterValue) => {\n  const query = [];\n  if (filterValue.name) {\n    query.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.requester) {\n    query.push(`filter[requester_name][contains_i]=${filterValue.requester}`);\n  }\n\n  if (filterValue.status) {\n    filterValue.status.forEach(state => {\n      query.push(`filter[state][eq][]=${state}`);\n    });\n  }\n\n  if (filterValue.decision) {\n    filterValue.decision.forEach(dec => {\n      query.push(`filter[decision][eq][]=${dec}`);\n    });\n  }\n\n  return query.join('&');\n};\n\nexport function fetchRequests(filter = {}, pagination = defaultSettings, persona = undefined, sortBy) {\n  const paginationQuery = `&limit=${Math.max(pagination.limit, 10)}&offset=${pagination.offset}`;\n  const sortQuery = `&sort_by=${sortPropertiesMapper(sortBy.property)}:${sortBy.direction}`;\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/?${filterQuery(filter)}${paginationQuery}${sortQuery}`;\n  const fetchHeaders = persona ? { 'x-rh-persona': persona } : undefined;\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n}\n\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    id\n    name\n    number_of_children\n    decision\n    description\n    group_name\n    number_of_finished_children\n    state\n    actions {\n      id\n      operation\n      comments\n      created_at\n      processed_by\n    }\n    requests {\n      id\n      name\n      number_of_children\n      decision\n      description\n      group_name\n      number_of_finished_children\n      state\n      workflow_id\n      parent_id\n      actions {\n        id\n        operation\n        comments\n        created_at\n        processed_by\n      }\n    }\n  }\n}`;\n\nexport const fetchRequestTranscript = (requestId, persona) => {\n  const fetchHeaders = (persona && persona !== APPROVAL_APPROVER_PERSONA) ? { 'x-rh-persona': persona }\n    : { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return graphqlInstance({ method: 'post', url: `${APPROVAL_API_BASE}/graphql`,\n    headers: fetchHeaders, data: { query: requestTranscriptQuery(requestId) }})\n  .then(({ data: { requests }}) => requests);\n};\n\nexport const fetchRequestContent = (id) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}/content`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport const fetchRequestCapabilities = (id, isParent) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}${isParent ? '/requests' : ''}`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport async function fetchRequestWithSubrequests(id, persona) {\n  const requestData = await fetchRequestTranscript(id, persona);\n\n  if (!requestData || requestData.length === 0) { return {}; }\n\n  if (persona === APPROVAL_APPROVER_PERSONA) {\n    if (requestData && requestData.length > 0 && requestData[0].number_of_children > 0) {\n      const result = await fetchRequestCapabilities(id, true);\n\n      if (result && result.data) {\n        requestData[0].requests = requestData[0].requests.map(request => {\n          return { ...result.data.find((item) => (item.id === request.id) && item.metadata),\n            ...request };\n        });\n      }\n    }\n    else {\n      const request = await fetchRequestCapabilities(id, false);\n      if (request) {\n        requestData[0] = { ...requestData[0], metadata: request.metadata };\n      }\n    }\n  }\n\n  return  { ...requestData[0] };\n}\n\nexport async function createRequestAction (requestId, actionIn) {\n  return await actionApi.createAction(requestId, actionIn);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","\nimport React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings, getCurrentPage, getNewPage  } from '../../helpers/shared/pagination';\nimport { DataListLoader } from './loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse,\n  renderEmptyState,\n  sortBy,\n  onSort,\n  activeFiltersConfig,\n  filterConfig\n}) => {\n  const intl = useIntl();\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (data, id) => {\n    const newData = data.map(row => row.id === id ?\n      {\n        ...row,\n        selected: !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return newData;\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse ?\n    onCollapse(id, setRows, setOpen) :\n    setRows((rows) => setOpen(rows, id));\n\n  const selectRow = (_event, selected, index, { id } = {}) => index === -1\n    ? setRows(rows.map(row => ({ ...row, selected })))\n    : setRows((rows) => setSelected(rows, id));\n\n  const paginationConfig = {\n    itemCount: pagination.count,\n    page: getCurrentPage(pagination.limit, pagination.offset),\n    perPage: pagination.limit,\n    onSetPage: (_e, page) => fetchData({ ...pagination, offset: getNewPage(page, pagination.limit) }),\n    onPerPageSelect: (_e, size) => fetchData({ ...pagination, limit: size }),\n    isDisabled: isLoading\n  };\n\n  const renderToolbar = () => (\n    <PrimaryToolbar\n      className=\"pf-u-p-lg ins__approval__primary_toolbar\"\n      pagination={ paginationConfig }\n      { ...(toolbarButtons && { actionsConfig: {  actions: [ toolbarButtons() ]}}) }\n      filterConfig={ {\n        items: [{\n          label: intl.formatMessage({\n            id: 'name',\n            defaultMessage: 'Name'\n          }),\n          filterValues: {\n            id: 'filter-by-name',\n            placeholder: intl.formatMessage({\n              id: 'filter-by-name',\n              defaultMessage: 'Filter by {title}'\n            }, { title: titleSingular }),\n            'aria-label': intl.formatMessage({\n              id: 'filter-by-name',\n              defaultMessage: 'Filter by {title}'\n            }, { title: titleSingular }),\n            onChange: (_event, value) => onFilterChange(value),\n            value: filterValue\n          }\n        },\n        ...filterConfig\n        ]\n      } }\n      activeFiltersConfig={ activeFiltersConfig }\n    />\n  );\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ `${titlePlural} table` }\n            onCollapse={ onCollapseInternal }\n            rows={ rows }\n            cells={ columns }\n            onSelect={ isSelectable && selectRow }\n            actionResolver={ actionResolver }\n            className=\"table-fix\"\n            sortBy={ sortBy }\n            onSort={ onSort }\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 && (\n            <PrimaryToolbar\n              className=\"pf-u-pl-lg pf-u-pr-lg ins__approval__primary_toolbar\"\n              pagination={ {\n                ...paginationConfig,\n                dropDirection: 'up',\n                variant: 'bottom',\n                isCompact: false\n              } }\n            />\n          ) }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func,\n  renderEmptyState: propTypes.func,\n  sortBy: propTypes.object,\n  onSort: propTypes.func,\n  activeFiltersConfig: propTypes.object,\n  filterConfig: propTypes.array\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null,\n  onSort: () => null,\n  filterConfig: []\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\nimport { Link }  from 'react-router-dom';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered\n    aria-label=\"No records\"\n  >\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={ Icon } />\n      <TextContent>\n        <Text component={ TextVariants.h1 }>{ title }</Text>\n      </TextContent>\n      <EmptyStateBody>\n        { description }\n        { renderDescription() }\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        { PrimaryAction && <PrimaryAction /> }\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n\nexport const EmptyStatePrimaryAction = ({ url, label }) => (\n  <Link to={ url }>\n    <Button variant=\"secondary\">{ label }</Button>\n  </Link>\n);\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormSelect, FormSelectOption, FormGroup, TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  const selectOptions = [ ...options ];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [ ...selectOptions ]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  ...rest\n}) => (\n  <FormSelect { ...input } { ...rest } isDisabled={ isDisabled || isReadOnly }>\n    { createOptions(options, input.value, isRequired).map((props) => (\n      <FormSelectOption key={ props.value || props.label } { ...props } label={ props.label.toString() }/> // eslint-disable-line react/prop-types\n    )) }\n  </FormSelect>\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  FieldProvider: PropTypes.any\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={ isRequired }\n      label={ !hideLabel && label }\n      fieldId={ rest.id }\n      isValid={ !showError }\n      helperText={ helperText }\n      helperTextInvalid={ meta.error }\n    >\n      { description && <TextContent><Text component={ TextVariants.small }>{ description }</Text></TextContent> }\n      <Select label={ label } isValid={ !showError } isRequired={ isRequired } { ...rest }/>\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender, { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      formFieldsMapper={ {\n        ...formFieldsMapper,\n        componentMapper,\n        [componentTypes.SELECT]: Pf4SelectWrapper\n      } }\n      layoutMapper={ layoutMapper }\n      { ...buttonPositioning[formContainer] }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\n\nconst schemaFields = (isDeny) =>({\n  component: componentTypes.TEXTAREA_FIELD,\n  name: 'comments',\n  type: 'text',\n  isRequired: isDeny,\n  label: isDeny ? 'Reason' : 'Comment'\n});\n\nexport const createRequestCommentSchema = (isDeny = false) => {\n  const schema = schemaFields(isDeny);\n  if (isDeny) {\n    schema.validate = [{\n      type: validatorTypes.REQUIRED\n    }];\n  }\n\n  return { fields: [ schema ]};\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { createRequestAction } from '../../redux/actions/request-actions';\nimport { createRequestCommentSchema } from '../../forms/request-comment-form.schema';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\n\nconst ActionModal = ({\n  actionType,\n  addNotification,\n  createRequestAction,\n  closeUrl,\n  postMethod\n}) => {\n  const { push } = useHistory();\n  const [{ request: id }] = useQuery([ 'request' ]);\n\n  const onSubmit = (data) => {\n    const operationType = { 'Add Comment': 'memo', Approve: 'approve', Deny: 'deny' };\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n    return postMethod ?\n      createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => postMethod()).then(() => push(closeUrl))\n      : createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n    addNotification({\n      variant: 'warning',\n      title: actionName,\n      dismissable: true,\n      description: `${actionName} was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ actionType === 'Add Comment' ? `Request #${id}` : `${actionType} Request #${id}` }\n      isOpen\n      onClose={ onCancel }\n    >\n      <FormRenderer\n        schema={ createRequestCommentSchema (actionType === 'Deny') }\n        schemaType=\"default\"\n        onSubmit={ onSubmit }\n        onCancel={ onCancel }\n        formContainer=\"modal\"\n      />\n    </Modal>\n  );\n};\n\nActionModal.defaultProps = {\n  closeUrl: routes.requests.index\n};\n\nActionModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  createRequestAction: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  id: PropTypes.string,\n  actionType: PropTypes.string,\n  closeUrl: PropTypes.string,\n  match: PropTypes.object,\n  location: PropTypes.object\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRequestAction\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(ActionModal);\n"],"sourceRoot":""}