{"version":3,"sources":["webpack:///./src/smart-components/request/requests.js","webpack:///./src/smart-components/request/allrequests.js","webpack:///./src/utilities/use-query.js","webpack:///./src/smart-components/workflow/add-groups/summary-content.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/redux/actions/request-actions.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/helpers/request/request-helper.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/forms/request-comment-form.schema.js","webpack:///./src/smart-components/request/action-modal.js","webpack:///./src/smart-components/request/expandable-content.js","webpack:///./src/smart-components/request/request-table-helpers.js","webpack:///./src/smart-components/request/chips-helpers.js","webpack:///./src/smart-components/request/requests-list.js"],"names":["Requests","userPersona","useContext","UserContext","history","useHistory","actionsDisabled","requestData","state","isRequestStateActive","number_of_children","isApprovalApprover","routes","exact","path","routesLinks","requests","addComment","render","props","actionType","postMethod","fetchRequests","approve","deny","persona","APPROVAL_APPROVER_PERSONA","actionResolver","id","title","component","onClick","push","pathname","search","AllRequests","APPROVAL_ADMIN_PERSONA","useQuery","requiredParams","useLocation","query","URLSearchParams","reduce","acc","curr","get","SummaryContent","getState","useFormApi","values","name","description","wfGroups","Stack","gutter","StackItem","Title","size","TextContent","Text","className","TextVariants","h5","Grid","GridItem","span","p","length","map","group","idx","key","value","label","buttonPositioning","default","modal","buttonOrder","buttonClassName","componentMapperExtended","componentMapper","summary","FormRenderer","formContainer","rest","FormTemplate","propTypes","PropTypes","oneOf","defaultProps","pagination","dispatch","requestReducer","sortBy","filterValue","finalPagination","defaultSettings","meta","limit","offset","type","ActionTypes","payload","RequestHelper","fetchRequest","apiProps","fetchRequestContent","createRequestAction","actionName","requestId","actionIn","notifications","fulfilled","variant","rejected","expandRequest","sortRequests","setFilterValueRequests","clearFilterValueRequests","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","actionApi","getActionApi","graphqlInstance","getGraphqlInstance","sortPropertiesMapper","property","opened","requester","status","filterQuery","forEach","decision","dec","join","filter","undefined","paginationQuery","Math","max","sortQuery","direction","fetchUrl","APPROVAL_API_BASE","fetchHeaders","getAxiosInstance","method","url","headers","fetchRequestTranscript","parent_id","APPROVAL_REQUESTER_PERSONA","data","then","fetchRequestCapabilities","isParent","fetchRequestWithSubrequests","a","result","request","find","item","metadata","createAction","approvalTabItems","eventKey","AppTabs","tabItems","activeTab","includes","activeKey","onSelect","_event","tabIndex","array","TableToolbarView","isSelectable","createRows","columns","fetchData","toolbarButtons","titlePlural","titleSingular","setCheckedItems","onFilterChange","isLoading","onCollapse","renderEmptyState","onSort","activeFiltersConfig","filterConfig","intl","useIntl","useState","rows","setRows","useEffect","setOpen","row","isOpen","paginationConfig","itemCount","count","page","getCurrentPage","perPage","onSetPage","_e","getNewPage","onPerPageSelect","isDisabled","page-type","actionsConfig","actions","items","formatMessage","defaultMessage","filterValues","placeholder","onChange","aria-label","_index","_isOpen","cells","selected","index","newData","checkedItems","dropDirection","isCompact","bool","func","isRequired","shape","number","string","object","TableEmptyState","Icon","PrimaryAction","renderDescription","centered","icon","h1","any","createRequestCommentSchema","isDeny","fields","componentTypes","TEXTAREA","validate","validatorTypes","REQUIRED","ActionModal","addNotification","closeUrl","onCancel","dismissable","Modal","isLarge","onClose","schema","onSubmit","operationType","Approve","Deny","operation","oneOfType","patname","connect","bindActionCreators","ExpandedItem","detail","small","node","ExpandableContent","reason","requestActive","requestContent","setRequestContent","setIsLoading","fetchStarted","setIsFetching","expandedRequests","useSelector","Bullseye","Spinner","Level","LevelItem","product","to","Button","portfolio","platform","content","uname","decisionIcon","decisionValues","decisionDisplayName","displayName","requester_name","created_at","notified_at","finished_at","timeAgo","style","marginBottom","parent","fullWidth","prepareChips","category","chips","stat","cellFormatters","expandable","transforms","sortable","cellWidth","wrappable","debouncedFilter","asyncDebounce","filteringCallback","updateFilter","requestsListState","action","isFetching","nameValue","requesterValue","isFiltering","RequestsList","shallowEqual","useReducer","initialState","stateDispatch","useDispatch","updateRequests","scrollToTop","handleFilterChange","debouncedValue","clearFilters","isApprovalAdmin","handlePagination","isEmpty","SearchIcon","filters","onDelete","chip","deleteAll","newValue","val"],"mappings":"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","file":"js/requests.js","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport { Route, useHistory } from 'react-router-dom';\nimport { fetchRequests } from '../../redux/actions/request-actions';\nimport ActionModal from './action-modal';\nimport {\n  APPROVAL_APPROVER_PERSONA,\n  isApprovalApprover,\n  isRequestStateActive\n} from '../../helpers/shared/helpers';\nimport UserContext from '../../user-context';\nimport routesLinks from '../../constants/routes';\nimport RequestsList from './requests-list';\n\nconst Requests = () => {\n  const { userPersona: userPersona } = useContext(UserContext);\n  const history = useHistory();\n\n  const routes = () => <Fragment>\n    <Route exact path={ routesLinks.requests.addComment } render={ props => <ActionModal { ...props }\n      actionType={ 'Add Comment' }\n      postMethod={ fetchRequests } /> }/>\n    <Route exact path={ routesLinks.requests.approve } render={ props => <ActionModal { ...props } actionType={ 'Approve' }\n      postMethod={ fetchRequests }/> } />\n    <Route exact path={ routesLinks.requests.deny } render={ props => <ActionModal { ...props } actionType={ 'Deny' }\n      postMethod={ fetchRequests }/> } />\n  </Fragment>;\n\n  const actionsDisabled = (requestData) => requestData &&\n    requestData.state ?\n    !isRequestStateActive(requestData.state) || requestData.number_of_children > 0 || !isApprovalApprover(userPersona) : true;\n\n  const actionResolver = (requestData) => {\n    return (requestData && requestData.id && actionsDisabled(requestData) ? null :\n      [\n        {\n          title: 'Comment',\n          component: 'button',\n          onClick: () => history.push({\n            pathname: routesLinks.requests.addComment,\n            search: `?request=${requestData.id}`\n          })\n        }\n      ]);\n  };\n\n  return <RequestsList\n    routes={ routes }\n    persona={ APPROVAL_APPROVER_PERSONA }\n    actionsDisabled={ actionsDisabled }\n    actionResolver={ actionResolver }\n  />;\n};\n\nexport default Requests;\n","import React from 'react';\nimport { APPROVAL_ADMIN_PERSONA } from '../../helpers/shared/helpers';\nimport RequestsList from './requests-list';\n\nconst AllRequests = () => {\n  return <RequestsList persona={ APPROVAL_ADMIN_PERSONA } actionsDisabled={ () => true } />;\n};\n\nexport default AllRequests;\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import React, { Fragment } from 'react';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nconst SummaryContent = () => {\n  const { getState } = useFormApi();\n  const { name, description, wfGroups } = getState().values;\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                    Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              { wfGroups && wfGroups.length > 0 && wfGroups.map((group, idx) => (\n                <Fragment key={ group.value }>\n                  <Grid gutter=\"md\">\n                    <GridItem span={ 2 }>\n                      <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                        { idx === 0 ? 'Groups' : '' }\n                      </Text>\n                    </GridItem>\n                    <GridItem span={ 10 }>\n                      <Text className=\"data-table-detail content\" component={ TextVariants.p }>\n                        { group.label }\n                      </Text>\n                    </GridItem>\n                  </Grid>\n                </Fragment>)\n              ) }\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nexport default SummaryContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\n\nimport SummaryContent from '../workflow/add-groups/summary-content';\n\nconst buttonPositioning = {\n  default: {},\n  modal: {\n    buttonOrder: [ 'cancel', 'reset', 'save' ],\n    buttonClassName: 'modal-form-right-align'\n  }\n};\n\nconst componentMapperExtended = {\n  ...componentMapper,\n  summary: SummaryContent\n};\n\nconst FormRenderer = ({ formContainer, ...rest }) => (\n  <div className={ buttonPositioning[formContainer].buttonClassName }>\n    <ReactFormRender\n      componentMapper={ componentMapperExtended }\n      FormTemplate={ (props) => <FormTemplate { ...props } { ...buttonPositioning[formContainer] }/> }\n      { ...rest }\n    />\n  </div>\n);\n\nFormRenderer.propTypes = {\n  formContainer: PropTypes.oneOf([ 'default', 'modal' ])\n};\n\nFormRenderer.defaultProps = {\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import * as ActionTypes from '../action-types';\nimport * as RequestHelper from '../../helpers/request/request-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const fetchRequests = (persona, pagination) => (dispatch, getState) => {\n  const { sortBy, requests, filterValue } = getState().requestReducer;\n\n  let finalPagination = pagination || defaultSettings;\n\n  if (!pagination && requests) {\n    const { limit, offset } = requests.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_REQUESTS,\n    payload: RequestHelper.fetchRequests(filterValue, finalPagination, persona, sortBy)\n  });\n};\n\nexport const fetchRequest = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST,\n  payload: RequestHelper.fetchRequestWithSubrequests(apiProps, persona)\n});\n\nexport const fetchRequestContent = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST_CONTENT,\n  payload: RequestHelper.fetchRequestContent(apiProps, persona)\n});\n\nexport const createRequestAction = (actionName, requestId, actionIn) => ({\n  type: ActionTypes.CREATE_REQUEST_ACTION,\n  payload: RequestHelper.createRequestAction(requestId, actionIn),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success',\n        description: `The ${actionName} was successful.`\n      },\n      rejected: {\n        variant: 'danger',\n        title: `${actionName} error`,\n        description: `The ${actionName} action failed.`\n      }\n    }\n  }\n});\n\nexport const expandRequest = (id) => ({\n  type: ActionTypes.EXPAND_REQUEST,\n  payload: id\n});\n\nexport const sortRequests = (sortBy) => ({\n  type: ActionTypes.SORT_REQUESTS,\n  payload: sortBy\n});\n\nexport const setFilterValueRequests = (filterValue, type) => ({\n  type: ActionTypes.SET_FILTER_REQUESTS,\n  payload: { filterValue, type }\n});\n\nexport const clearFilterValueRequests = () => ({\n  type: ActionTypes.CLEAR_FILTER_REQUESTS\n});\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import { getActionApi, getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_REQUESTER_PERSONA, APPROVAL_APPROVER_PERSONA } from '../shared/helpers';\n\nconst actionApi = getActionApi();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sortPropertiesMapper = (property) => ({\n  'request-id': 'id',\n  opened: 'created_at',\n  requester: 'requester_name',\n  status: 'state'\n}[property] || property\n);\n\nconst filterQuery = (filterValue) => {\n  const query = [];\n  if (filterValue.name) {\n    query.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.requester) {\n    query.push(`filter[requester_name][contains_i]=${filterValue.requester}`);\n  }\n\n  if (filterValue.status) {\n    filterValue.status.forEach(state => {\n      query.push(`filter[state][eq][]=${state}`);\n    });\n  }\n\n  if (filterValue.decision) {\n    filterValue.decision.forEach(dec => {\n      query.push(`filter[decision][eq][]=${dec}`);\n    });\n  }\n\n  return query.join('&');\n};\n\nexport function fetchRequests(filter = {}, pagination = defaultSettings, persona = undefined, sortBy) {\n  const paginationQuery = `&limit=${Math.max(pagination.limit, 10)}&offset=${pagination.offset}`;\n  const sortQuery = `&sort_by=${sortPropertiesMapper(sortBy.property)}:${sortBy.direction}`;\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/?${filterQuery(filter)}${paginationQuery}${sortQuery}`;\n  const fetchHeaders = persona ? { 'x-rh-persona': persona } : undefined;\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n}\n\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    id\n    name\n    number_of_children\n    decision\n    description\n    group_name\n    number_of_finished_children\n    state\n    actions {\n      id\n      operation\n      comments\n      created_at\n      processed_by\n    }\n    requests {\n      id\n      name\n      number_of_children\n      decision\n      description\n      group_name\n      number_of_finished_children\n      state\n      workflow_id\n      parent_id\n      actions {\n        id\n        operation\n        comments\n        created_at\n        processed_by\n      }\n    }\n  }\n}`;\n\nexport const fetchRequestTranscript = (requestId, persona) => {\n  const fetchHeaders = (persona && persona !== APPROVAL_APPROVER_PERSONA) ? { 'x-rh-persona': persona }\n    : { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return graphqlInstance({ method: 'post', url: `${APPROVAL_API_BASE}/graphql`,\n    headers: fetchHeaders, data: { query: requestTranscriptQuery(requestId) }})\n  .then(({ data: { requests }}) => requests);\n};\n\nexport const fetchRequestContent = (id) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}/content`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport const fetchRequestCapabilities = (id, isParent) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}${isParent ? '/requests' : ''}`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport async function fetchRequestWithSubrequests(id, persona) {\n  const requestData = await fetchRequestTranscript(id, persona);\n\n  if (!requestData || requestData.length === 0) { return {}; }\n\n  if (persona === APPROVAL_APPROVER_PERSONA) {\n    if (requestData && requestData.length > 0 && requestData[0].number_of_children > 0) {\n      const result = await fetchRequestCapabilities(id, true);\n\n      if (result && result.data) {\n        requestData[0].requests = requestData[0].requests.map(request => {\n          return {\n            ...result.data.find((item) => (item.id === request.id) && item.metadata),\n            ...request\n          };\n        });\n      }\n    }\n    else {\n      const request = await fetchRequestCapabilities(id, false);\n      if (request) {\n        requestData[0] = { ...requestData[0], metadata: request.metadata };\n      }\n    }\n  }\n\n  return requestData[0];\n}\n\nexport const createRequestAction = (requestId, actionIn) => actionApi.createAction(requestId, actionIn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst approvalTabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n  { eventKey: 1, title: 'All requests', name: '/allrequests' },\n  { eventKey: 2, title: 'Approval processes', name: '/workflows' }];\n\nexport const AppTabs = ({ tabItems = approvalTabItems }) => {\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    history.push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array\n};\n","\nimport React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings, getCurrentPage, getNewPage  } from '../../helpers/shared/pagination';\nimport { DataListLoader } from './loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse,\n  renderEmptyState,\n  sortBy,\n  onSort,\n  activeFiltersConfig,\n  filterConfig\n}) => {\n  const intl = useIntl();\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (_event, selected, index, { id } = {}) => {\n    const newData = rows.map(row => row.id === id || index === -1 ?\n      {\n        ...row,\n        selected: index === -1 ? selected : !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return setRows(newData);\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse\n    ? onCollapse(id, setRows, setOpen)\n    : setRows(setOpen(rows, id));\n\n  const paginationConfig = {\n    itemCount: pagination.count,\n    page: getCurrentPage(pagination.limit, pagination.offset),\n    perPage: pagination.limit,\n    onSetPage: (_e, page) => fetchData({ ...pagination, offset: getNewPage(page, pagination.limit) }),\n    onPerPageSelect: (_e, size) => fetchData({ ...pagination, limit: size }),\n    isDisabled: isLoading\n  };\n\n  const renderToolbar = () => (\n    <PrimaryToolbar\n      className=\"pf-u-p-lg ins__approval__primary_toolbar\"\n      pagination={ paginationConfig }\n      { ...(toolbarButtons && { actionsConfig: {  actions: [ toolbarButtons() ]}}) }\n      filterConfig={ {\n        items: [{\n          label: intl.formatMessage({\n            id: 'name',\n            defaultMessage: 'Name'\n          }),\n          filterValues: {\n            id: 'filter-by-name',\n            placeholder: intl.formatMessage({\n              id: 'filter-by-name',\n              defaultMessage: 'Filter by {title}'\n            }, { title: titleSingular }),\n            'aria-label': intl.formatMessage({\n              id: 'filter-by-name',\n              defaultMessage: 'Filter by {title}'\n            }, { title: titleSingular }),\n            onChange: (_event, value) => onFilterChange(value),\n            value: filterValue\n          }\n        },\n        ...filterConfig\n        ]\n      } }\n      activeFiltersConfig={ activeFiltersConfig }\n    />\n  );\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ `${titlePlural} table` }\n            onCollapse={ onCollapseInternal }\n            rows={ rows }\n            cells={ columns }\n            onSelect={ isSelectable && setSelected }\n            actionResolver={ actionResolver }\n            className=\"table-fix\"\n            sortBy={ sortBy }\n            onSort={ onSort }\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 && (\n            <PrimaryToolbar\n              className=\"pf-u-pl-lg pf-u-pr-lg ins__approval__primary_toolbar\"\n              pagination={ {\n                ...paginationConfig,\n                dropDirection: 'up',\n                variant: 'bottom',\n                isCompact: false\n              } }\n            />\n          ) }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func,\n  renderEmptyState: propTypes.func,\n  sortBy: propTypes.object,\n  onSort: propTypes.func,\n  activeFiltersConfig: propTypes.object,\n  filterConfig: propTypes.array\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null,\n  filterConfig: []\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered aria-label=\"No records\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={ Icon } />\n      <TextContent>\n        <Text component={ TextVariants.h1 }>{ title }</Text>\n      </TextContent>\n      <EmptyStateBody>\n        { description }\n        { renderDescription && renderDescription() }\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        { PrimaryAction && <PrimaryAction /> }\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nexport const createRequestCommentSchema = (isDeny = false) => ({\n  fields: [{\n    component: componentTypes.TEXTAREA,\n    name: 'comments',\n    isRequired: isDeny,\n    label: isDeny ? 'Reason' : 'Comment',\n    ...(isDeny && { validate: [{ type: validatorTypes.REQUIRED }]})\n  }]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { createRequestAction } from '../../redux/actions/request-actions';\nimport { createRequestCommentSchema } from '../../forms/request-comment-form.schema';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\n\nconst ActionModal = ({\n  actionType,\n  addNotification,\n  createRequestAction,\n  closeUrl,\n  postMethod\n}) => {\n  const { push } = useHistory();\n  const [{ request: id }] = useQuery([ 'request' ]);\n\n  const onSubmit = (data) => {\n    const operationType = { 'Add Comment': 'memo', Approve: 'approve', Deny: 'deny' };\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n\n    return postMethod ?\n      createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => postMethod()).then(() => push(closeUrl))\n      : createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data }\n      ).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => {\n    const actionName = actionType === 'Add Comment' ? actionType : `${actionType} Request`;\n    addNotification({\n      variant: 'warning',\n      title: actionName,\n      dismissable: true,\n      description: `${actionName} was cancelled by the user.`\n    });\n    push(closeUrl);\n  };\n\n  return (\n    <Modal\n      isLarge\n      title={ actionType === 'Add Comment' ? `Request #${id}` : `${actionType} Request #${id}` }\n      isOpen\n      onClose={ onCancel }\n    >\n      <FormRenderer\n        schema={ createRequestCommentSchema(actionType === 'Deny') }\n        onSubmit={ onSubmit }\n        onCancel={ onCancel }\n        formContainer=\"modal\"\n      />\n    </Modal>\n  );\n};\n\nActionModal.defaultProps = {\n  closeUrl: routes.requests.index\n};\n\nActionModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  createRequestAction: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  actionType: PropTypes.string,\n  closeUrl: PropTypes.oneOfType([ PropTypes.string, PropTypes.shape({ patname: PropTypes.string, search: PropTypes.string }) ])\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  createRequestAction\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(ActionModal);\n","import React, { Fragment, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { TextContent, Text, TextVariants, Level, LevelItem, Button, Bullseye, Spinner } from '@patternfly/react-core';\nimport { isApprovalApprover, isRequestStateActive } from '../../helpers/shared/helpers';\nimport { fetchRequestContent } from '../../helpers/request/request-helper';\nimport UserContext from '../../user-context';\nimport routes from '../../constants/routes';\n\nexport const ExpandedItem = ({ title = '', detail = '' }) => (\n  <TextContent>\n    <Text className=\"data-table-detail heading\" component={ TextVariants.small }>{ title }</Text>\n    <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ detail }</Text>\n  </TextContent>\n);\n\nExpandedItem.propTypes = {\n  title: PropTypes.node,\n  detail: PropTypes.node\n};\n\nconst ExpandableContent = ({ id, number_of_children, state, reason }) => {\n  const requestActive = isRequestStateActive(state) && !number_of_children;\n  const [ requestContent, setRequestContent ] = useState([]);\n  const [ isLoading, setIsLoading ] = useState(true);\n  const [ fetchStarted, setIsFetching ] = useState(false);\n  const { userPersona: userPersona } = useContext(UserContext);\n  const expandedRequests = useSelector(({ requestReducer: { expandedRequests }}) => expandedRequests);\n\n  useEffect(() => {\n    if (!fetchStarted && isLoading && expandedRequests.includes(id)) {\n      setIsFetching(true);\n      fetchRequestContent(id).then((data) => { setRequestContent(data); setIsLoading(false); }).catch(() => setIsLoading(false));\n    }\n  }, [ expandedRequests ]);\n\n  if (isLoading) {\n    return (<Bullseye>\n      <Spinner/>\n    </Bullseye>);\n  }\n\n  return (\n    <Fragment>\n      <Level>\n        <LevelItem>\n          <ExpandedItem title=\"Product\" detail={ requestContent ? requestContent.product : 'Unknown' } />\n        </LevelItem>\n        { requestActive && isApprovalApprover(userPersona) && <LevelItem>\n          <Link to={ { pathname: routes.requests.approve, search: `request=${id}` } }  className=\"pf-u-mr-md\">\n            <Button variant=\"primary\" aria-label=\"Approve Request\" isDisabled={ !requestActive }>\n              Approve\n            </Button>\n          </Link>\n          <Link to={ { pathname: routes.requests.deny, search: `request=${id}` } }>\n            <Button variant=\"danger\" aria-label=\"Deny Request\">\n              Deny\n            </Button>\n          </Link>\n        </LevelItem>\n        }</Level>\n      <Level>\n        <LevelItem>\n          <ExpandedItem title=\"Portfolio\" detail={ requestContent ? requestContent.portfolio : 'Unknown' }/>\n          <ExpandedItem title=\"Platform\" detail={ requestContent ? requestContent.platform : 'Unknown' }/>\n          <ExpandedItem title=\"Reason\" detail={ reason ? reason : '' }/>\n        </LevelItem>\n      </Level>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  id: PropTypes.string,\n  content: PropTypes.object,\n  number_of_children: PropTypes.number,\n  uname: PropTypes.string,\n  state: PropTypes.string,\n  reason: PropTypes.string\n};\n\nexport default ExpandableContent;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport ExpandableContent from './expandable-content';\nimport { timeAgo }  from '../../helpers/shared/helpers';\nimport routes from '../../constants/routes';\nimport { Text } from '@patternfly/react-core';\nimport { decisionValues } from '../../utilities/constants';\n\nconst decisionIcon = (decision) => decisionValues[decision] ? decisionValues[decision].icon : '';\nconst decisionDisplayName = (decision) => decisionValues[decision] ? decisionValues[decision].displayName : '';\n\nexport const createRows = (data) =>\n  data.reduce((acc, { id,\n    name,\n    requester_name,\n    created_at,\n    notified_at,\n    finished_at,\n    state,\n    decision,\n    reason,\n    number_of_children\n  }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      state,\n      number_of_children,\n      cells: [\n        <Fragment key={ id }><Link to={ { pathname: routes.request.index, search: `?request=${id}` } }>{ id }</Link></Fragment>,\n        name,\n        requester_name,\n        timeAgo(created_at),\n        finished_at ? timeAgo(finished_at) : (notified_at ? timeAgo(notified_at) : timeAgo(created_at)),\n        state,\n        <Fragment key={ `decision-${id}` }><Text key={ `${decision}-$(id}` } style={ { marginBottom: 0 } }\n          className=\"data-table-detail content\">\n          { decisionIcon(decision) } { `${decisionDisplayName(decision)}` }\n        </Text></Fragment>\n      ]\n    }, {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [{\n        title: <ExpandableContent id={ id }\n          number_of_children={ number_of_children }\n          state={ state }\n          reason={ reason }/>\n      }]\n    }\n  ]), []);\n\n","export const prepareChips = ({ name, requester, status, decision }) => ([\n  ...(name ? [{\n    category: 'Name',\n    key: 'name',\n    chips: [{ name, value: name }]\n  }] : []),\n  ...(requester ? [{\n    category: 'Requester',\n    key: 'requester',\n    chips: [{ name: requester, value: requester }]\n  }] : []),\n  ...(status && status.length > 0 ? [{\n    category: 'Status',\n    key: 'status',\n    chips: status.map(stat => ({ name: stat, value: stat }))\n  }] : []),\n  ...(decision && decision.length > 0 ? [{\n    category: 'Decision',\n    key: 'decision',\n    chips: decision.map(dec => ({ name: dec, value: dec }))\n  }] : [])\n]);\n","import React, { Fragment, useEffect, useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\nimport { expandable, sortable, wrappable, cellWidth } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/index';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { fetchRequests, expandRequest, sortRequests, setFilterValueRequests, clearFilterValueRequests } from '../../redux/actions/request-actions';\nimport { createRows } from './request-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { isApprovalAdmin } from '../../helpers/shared/helpers';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { AppTabs } from '../../smart-components/app-tabs/app-tabs';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\nimport UserContext from '../../user-context';\nimport { prepareChips } from './chips-helpers';\n\nconst columns = [{\n  title: 'Request ID',\n  cellFormatters: [ expandable ],\n  transforms: [ sortable, cellWidth(5) ]\n},\n{ title: 'Name', transforms: [ sortable, wrappable, cellWidth(25) ]},\n{ title: 'Requester', transforms: [ sortable, wrappable, cellWidth(20) ]},\n{ title: 'Opened   ', transforms: [ sortable, cellWidth(10) ]},\n{ title: 'Updated  ', transforms: [ cellWidth(10) ]},\n{ title: 'Status   ', transforms: [ sortable, cellWidth(15) ]},\n{ title: 'Decision ', transforms: [ sortable, cellWidth(15) ]}\n];\n\nconst debouncedFilter = asyncDebounce(\n  (dispatch, filteringCallback, persona, updateFilter) => {\n    filteringCallback(true);\n    updateFilter && updateFilter();\n    return dispatch(fetchRequests(persona)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst initialState = (nameValue = '', requesterValue = '') => ({\n  nameValue,\n  requesterValue,\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n});\n\nconst requestsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setNameValue':\n      return { ...state, nameValue: action.payload };\n    case 'setRequesterValue':\n      return { ...state, requesterValue: action.payload };\n    case 'clearFilters':\n      return { ...state, requesterValue: '', nameValue: '', isFetching: true };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst RequestsList = ({ routes, persona, actionResolver }) => {\n  const { requests: { data, meta }, sortBy, filterValue } = useSelector(\n    ({ requestReducer: { requests, sortBy, filterValue }}) => ({ requests, sortBy, filterValue }),\n    shallowEqual\n  );\n  const [{ nameValue, isFetching, isFiltering, requesterValue }, stateDispatch ] = useReducer(\n    requestsListState,\n    initialState(filterValue.name, filterValue.requester)\n  );\n\n  const { userPersona: userPersona } = useContext(UserContext);\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const updateRequests = (pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchRequests(persona, pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    updateRequests();\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value, type) => {\n    const updateFilter = () => dispatch(setFilterValueRequests(value, type));\n\n    let debouncedValue = false;\n\n    if (type === 'name') {\n      stateDispatch({ type: 'setNameValue', payload: value });\n      debouncedValue = true;\n    } else if (type === 'requester') {\n      stateDispatch({ type: 'setRequesterValue', payload: value });\n      debouncedValue = true;\n    }\n\n    if (!debouncedValue) {\n      dispatch(setFilterValueRequests(value, type));\n    }\n\n    return debouncedFilter(\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      persona,\n      debouncedValue && updateFilter\n    );\n  };\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandRequest(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  const onSort = (_e, index, direction, { property }) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(sortRequests({ index, direction, property }));\n    return updateRequests();\n  };\n\n  const clearFilters = () => {\n    stateDispatch({ type: 'clearFilters' });\n    dispatch(clearFilterValueRequests());\n    return updateRequests();\n  };\n\n  const onDeleteChip = ([{ key, chips: [{ value }] }]) => {\n    const newValue = [ 'name', 'requester' ].includes(key) ? '' : filterValue[key].filter(val => value !== val);\n    handleFilterChange(newValue, key);\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        { isApprovalAdmin(userPersona) && <AppTabs/> }\n      </TopToolbar>\n      <TableToolbarView\n        sortBy={ sortBy }\n        onSort={ onSort }\n        data={ data }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ updateRequests }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"requests\"\n        titleSingular=\"request\"\n        pagination={ meta }\n        handlePagination={ updateRequests }\n        filterValue={ nameValue }\n        onFilterChange={ (value) => handleFilterChange(value, 'name') }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n        renderEmptyState={ () => (\n          <TableEmptyState\n            title={ isEmpty(filterValue) ? 'No requests' : 'No results found' }\n            Icon={ SearchIcon }\n            PrimaryAction={ () =>\n              isEmpty(filterValue) ? null : (\n                <Button onClick={ clearFilters } variant=\"link\">\n                            Clear all filters\n                </Button>\n              )\n            }\n            description={\n              isEmpty(filterValue)\n                ? ''\n                : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n            }\n          />\n        ) }\n        activeFiltersConfig={ {\n          filters: prepareChips({ name: nameValue, requester: requesterValue, status: filterValue.status, decision: filterValue.decision }),\n          onDelete: (_e, chip, deleteAll) => deleteAll ? clearFilters() : onDeleteChip(chip)\n        } }\n        filterConfig={ [\n          {\n            label: intl.formatMessage({\n              id: 'requester',\n              defaultMessage: 'Requester'\n            }),\n            filterValues: {\n              placeholder: intl.formatMessage({\n                id: 'filter-by-requester',\n                defaultMessage: 'Filter by requester'\n              }),\n              'aria-label': intl.formatMessage({\n                id: 'filter-by-requester',\n                defaultMessage: 'Filter by requester'\n              }),\n              onChange: (_event, value) => handleFilterChange(value, 'requester'),\n              value: requesterValue\n            }\n          }, {\n            label: intl.formatMessage({\n              id: 'status',\n              defaultMessage: 'Status'\n            }),\n            type: 'checkbox',\n            filterValues: {\n              placeholder: intl.formatMessage({\n                id: 'filter-by-status',\n                defaultMessage: 'Filter by status'\n              }),\n              'aria-label': intl.formatMessage({\n                id: 'filter-by-status',\n                defaultMessage: 'Filter by status'\n              }),\n              onChange: (_event, value) => handleFilterChange(value, 'status'),\n              value: filterValue.status,\n              items: [ 'canceled', 'completed', 'failed', 'notified', 'pending', 'skipped', 'started' ].map((state) => ({\n                label: state,\n                value: state\n              }))\n            }\n          }, {\n            label: intl.formatMessage({\n              id: 'decision',\n              defaultMessage: 'Decision'\n            }),\n            type: 'checkbox',\n            filterValues: {\n              placeholder: intl.formatMessage({\n                id: 'filter-by-decision',\n                defaultMessage: 'Filter by decision'\n              }),\n              'aria-label': intl.formatMessage({\n                id: 'filter-by-decision',\n                defaultMessage: 'Filter by decision'\n              }),\n              onChange: (_event, value) => handleFilterChange(value, 'decision'),\n              value: filterValue.decision,\n              items: [ 'approved', 'canceled', 'denied', 'error', 'undecided' ].map((state) => ({\n                label: state,\n                value: state\n              }))\n            }\n          }\n        ] }\n      />\n    </Fragment>);\n};\n\nRequestsList.propTypes = {\n  routes: PropTypes.func,\n  actionResolver: PropTypes.func,\n  persona: PropTypes.string\n};\n\nexport default RequestsList;\n"],"sourceRoot":""}