{"version":3,"sources":["webpack:///./src/helpers/request/request-helper.js","webpack:///./src/redux/actions/request-actions.js","webpack:///./src/messages/action-modal.messages.js","webpack:///./src/smart-components/request/request-actions.js","webpack:///./src/forms/request-comment-form.schema.js","webpack:///./src/smart-components/request/action-modal.js"],"names":["actionApi","getActionApi","graphqlInstance","getGraphqlInstance","sortPropertiesMapper","property","opened","requester","status","filterQuery","filterValue","query","name","push","decision","forEach","dec","join","fetchRequests","filter","pagination","defaultSettings","persona","undefined","sortBy","paginationQuery","Math","max","limit","offset","sortQuery","direction","fetchUrl","APPROVAL_API_BASE","fetchHeaders","getAxiosInstance","method","url","headers","fetchRequestTranscript","requestId","parent_id","APPROVAL_APPROVER_PERSONA","APPROVAL_REQUESTER_PERSONA","data","then","requests","fetchRequestCapabilities","id","isParent","fetchRequestWithSubrequests","a","requestData","length","number_of_children","result","map","request","find","item","metadata","createRequestAction","actionIn","createAction","dispatch","getState","requestReducer","finalPagination","meta","type","ActionTypes","payload","RequestHelper","fetchRequest","apiProps","fetchRequestContent","actionName","intl","notifications","fulfilled","variant","title","formatMessage","actionModalMessages","successTitle","description","fulfilledAction","rejected","failedTitle","failedAction","sortRequests","setFilterValueRequests","clearFilterValueRequests","resetRequestList","defineMessages","require","requestTitle","defaultMessage","requestActionTitle","JustChildren","children","className","propTypes","PropTypes","node","string","RequestActions","denyLink","approveLink","commentLink","canApproveDeny","canComment","useIntl","state","approveDenyAllowed","isRequestStateActive","commentAllowed","ApproveDenyLink","Link","CommentLink","style","display","to","pathname","search","aria-label","requestsMessages","approveRequest","isDisabled","approveTitle","denyTitle","commentTitle","object","isRequired","bool","defaultProps","createRequestCommentSchema","isDeny","fields","component","componentTypes","TEXTAREA","label","reasonTitle","validate","validatorTypes","REQUIRED","actionTypeToMsg","Approve","Deny","ActionModal","actionType","closeUrl","postMethod","useHistory","useQuery","onCancel","Modal","isOpen","onClose","schema","onSubmit","operationType","addCommentTitle","operation","formContainer","routes","index","func","oneOfType","shape","patname","connect","bindActionCreators"],"mappings":"+gCAKA,IAAMA,EAAYC,cACZC,EAAkBC,cAElBC,EAAuB,SAACC,GAAD,MAAe,CAC1C,aAAc,KACdC,OAAQ,aACRC,UAAW,iBACXC,OAAQ,SACRH,IAAaA,GAGTI,EAAc,SAACC,GACnB,IAAMC,EAAQ,GAed,OAdID,EAAYE,MACdD,EAAME,KAAN,mCAAuCH,EAAYE,OAGjDF,EAAYH,WACdI,EAAME,KAAN,6CAAiDH,EAAYH,YAG3DG,EAAYI,UACdJ,EAAYI,SAASC,SAAQ,SAAAC,GAC3BL,EAAME,KAAN,iCAAqCG,OAIlCL,EAAMM,KAAK,MAGb,SAASC,IAAsF,IAAxEC,EAAwE,uDAA/D,GAAIC,EAA2D,uDAA9CC,IAAiBC,EAA6B,4DAAnBC,EAAWC,EAAQ,uCAC9FC,EAAkB,UAAH,OAAaC,KAAKC,IAAIP,EAAWQ,MAAO,IAAxC,mBAAsDR,EAAWS,QAChFC,EAAY,YAAH,OAAe1B,EAAqBoB,EAAOnB,UAA3C,YAAwDmB,EAAOO,WACxEC,EAAW,GAAH,OAAMC,IAAN,sBAAqCxB,EAAYU,IAAjD,OAA2DM,GAA3D,OAA6EK,GACrFI,EAAeZ,EAAU,CAAE,eAAgBA,QAAYC,EAC7D,OAAOY,cAAmB,CAAEC,OAAQ,MAAOC,IAAKL,EAAUM,QAASJ,IAGrE,IAwCaK,EAAyB,SAACC,EAAWlB,GAChD,IAzC8BmB,EAyCxBP,EAAgBZ,GAAWA,IAAYoB,IAA6B,CAAE,eAAgBpB,GACxF,CAAE,eAAgBqB,KACtB,OAAOzC,EAAgB,CAAEkC,OAAQ,OAAQC,IAAK,GAAF,OAAKJ,IAAL,YAC1CK,QAASJ,EAAcU,KAAM,CAAEjC,OA5CH8B,EA4CiCD,EA5ClC,mCACbC,EADa,ylBA6C5BI,MAAK,qBAAGD,KAAQE,aASNC,EAA2B,SAACC,EAAIC,GAC3C,IAAMjB,EAAW,GAAH,OAAMC,IAAN,qBAAoCe,GAApC,OAAyCC,EAAW,YAAc,IAC1Ef,EAAe,CAAE,eAAgBS,KACvC,OAAOR,cAAmB,CAAEC,OAAQ,MAAOC,IAAKL,EAAUM,QAASJ,KAG9D,SAAegB,EAAtB,oC,oCAAO,WAA2CF,EAAI1B,GAA/C,mBAAA6B,EAAA,sEACqBZ,EAAuBS,EAAI1B,GADhD,WACC8B,EADD,SAGsC,IAAvBA,EAAYC,OAH3B,yCAGkD,IAHlD,UAKD/B,IAAYoB,IALX,sBAMCU,GAAeA,EAAYC,OAAS,GAAKD,EAAY,GAAGE,mBAAqB,GAN9E,iCAOoBP,EAAyBC,GAAI,GAPjD,QAOKO,EAPL,SASaA,EAAOX,OACnBQ,EAAY,GAAGN,SAAWM,EAAY,GAAGN,SAASU,KAAI,SAAAC,GACpD,cACKF,EAAOX,KAAKc,MAAK,SAACC,GAAD,OAAWA,EAAKX,KAAOS,EAAQT,IAAOW,EAAKC,aAC5DH,OAbR,yCAmBqBV,EAAyBC,GAAI,GAnBlD,SAmBKS,EAnBL,UAqBCL,EAAY,GAAZ,OAAsBA,EAAY,IAAlC,IAAsCQ,SAAUH,EAAQG,YArBzD,iCA0BER,EAAY,IA1Bd,6C,sBA6BA,IAAMS,EAAsB,SAACrB,EAAWsB,GAAZ,OAAyB9D,EAAU+D,aAAavB,EAAWsB,I,SC/HjF5C,EAAgB,SAACI,EAASF,GAAV,OAAyB,SAAC4C,EAAUC,GAAa,MAClCA,IAAWC,eAA7C1C,EADoE,EACpEA,OAAQsB,EAD4D,EAC5DA,SAAUpC,EADkD,EAClDA,YAEtByD,EAAkB/C,GAAcC,IAEpC,IAAKD,GAAc0B,EAAU,OACDA,EAASsB,KACnCD,EAAkB,CAAEvC,MAFO,EACnBA,MACmBC,OAFA,EACZA,QAIjB,OAAOmC,EAAS,CACdK,KAAMC,IACNC,QAASC,EAA4B9D,EAAayD,EAAiB7C,EAASE,OAInEiD,EAAe,SAACC,EAAUpD,GAAX,MAAwB,CAClD+C,KAAMC,IACNC,QAASC,EAA0CE,EAAUpD,KAGlDqD,EAAsB,SAACD,EAAUpD,GAAX,MAAwB,CACzD+C,KAAMC,IACNC,SD+DkCvB,EC/DS0B,EDgErC1C,EAAW,GAAH,OAAMC,IAAN,qBAAoCe,EAApC,YACRd,EAAe,CAAE,eAAgBS,KAChCR,cAAmB,CAAEC,OAAQ,MAAOC,IAAKL,EAAUM,QAASJ,MAHlC,IAACc,EAC5BhB,EACAE,GC9DK2B,EAAsB,SAACe,EAAYpC,EAAWsB,EAAUe,GAAlC,MAA4C,CAC7ER,KAAMC,IACNC,QAASC,EAAkChC,EAAWsB,GACtDM,KAAM,CACJU,cAAe,CACbC,UAAW,CACTC,QAAS,UACTC,MAAOJ,EAAKK,cAAcC,IAAoBC,cAC9CC,YAAaR,EAAKK,cAAcC,IAAoBG,gBAAiB,CAAEV,gBAEzEW,SAAU,CACRP,QAAS,SACTC,MAAOJ,EAAKK,cAAcC,IAAoBK,YAAa,CAAEZ,eAC7DS,YAAaR,EAAKK,cAAcC,IAAoBM,aAAc,CAAEb,oBAM/Dc,EAAe,SAAClE,GAAD,MAAa,CACvC6C,KAAMC,IACNC,QAAS/C,IAGEmE,EAAyB,SAACjF,EAAa2D,GAAd,MAAwB,CAC5DA,KAAMC,IACNC,QAAS,CAAE7D,cAAa2D,UAGbuB,EAA2B,iBAAO,CAC7CvB,KAAMC,MAGKuB,EAAmB,iBAAO,CACrCxB,KAAMC,O,qCC/DFa,GAAsBW,EAFDC,EAAQ,KAA3BD,gBAEmC,CACzCE,aAAc,CACZhD,GAAI,2BACJiD,eAAgB,iBAElBC,mBAAoB,CAClBlD,GAAI,2BACJiD,eAAgB,8BAElBrB,WAAY,CACV5B,GAAI,yBACJiD,eAAgB,wBAElBX,gBAAiB,CACftC,GAAI,8BACJiD,eAAgB,oCAElBR,aAAc,CACZzC,GAAI,2BACJiD,eAAgB,mCAElBb,aAAc,CACZpC,GAAI,2BACJiD,eAAgB,WAElBT,YAAa,CACXxC,GAAI,0BACJiD,eAAgB,wBAILd,O,iCCjCf,8EASMgB,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAb,OAA6B,0BAAMA,UAAYA,GAAcD,IAElFD,EAAaG,UAAY,CACvBF,SAAUG,IAAUC,KACpBH,UAAWE,IAAUE,QAGvB,IAAMC,EAAiB,SAAC,GAOlB,IANJC,EAMI,EANJA,SACAC,EAKI,EALJA,YACAC,EAII,EAJJA,YACApD,EAGI,EAHJA,QACAqD,EAEI,EAFJA,eACAC,EACI,EADJA,WAEMlC,EAAOmC,cAELhE,EAAcS,EAAdT,GAAIiE,EAAUxD,EAAVwD,MACNC,EAAqBC,YAAqBF,IAAUH,EACpDM,EAAiBD,YAAqBF,IAAUF,EAEhDM,EAAkBH,EAAqBI,IAAOnB,EAC9CoB,EAAcH,EAAiBE,IAAOnB,EAE5C,OACE,yBAAKqB,MAAQ,CAAEC,QAAS,SACtB,kBAACJ,EAAD,CACEK,GAAK,CAAEC,SAAUf,EAAagB,OAAQ,WAAF,OAAa5E,IACjDqD,UAAU,aACVrD,GAAE,kBAAcS,EAAQT,KAExB,kBAAC,SAAD,CACEgC,QAAQ,UACR6C,aAAahD,EAAKK,cAAc4C,IAAiBC,gBACjDC,YAAcd,GAEZrC,EAAKK,cAAc4C,IAAiBG,gBAG1C,kBAACZ,EAAD,CACEK,GAAK,CAAEC,SAAUhB,EAAUiB,OAAQ,WAAF,OAAa5E,IAC9CqD,UAAU,aACVrD,GAAE,eAAWS,EAAQT,KAErB,kBAAC,SAAD,CACEgC,QAAQ,SACRgD,YAAcd,EACdW,aAAahD,EAAKK,cAAc4C,IAAiBI,YAE/CrD,EAAKK,cAAc4C,IAAiBI,aAG1C,kBAACX,EAAD,CACEG,GAAK,CAAEC,SAAUd,EAAae,OAAQ,WAAF,OAAa5E,IACjDA,GAAE,kBAAcS,EAAQT,KAExB,kBAAC,SAAD,CACEgC,QAAQ,YACRgD,YAAcZ,EACdS,aAAahD,EAAKK,cAAc4C,IAAiBK,eAE/CtD,EAAKK,cAAc4C,IAAiBK,kBAOhDzB,EAAeJ,UAAY,CACzBK,SAAUJ,IAAUE,OACpBG,YAAaL,IAAUE,OACvBI,YAAaN,IAAUE,OACvBhD,QAAS8C,IAAU6B,OAAOC,WAC1BvB,eAAgBP,IAAU+B,KAC1BvB,WAAYR,IAAU+B,MAGxB5B,EAAe6B,aAAe,CAC5BzB,gBAAgB,EAChBC,YAAY,GAGCL,O,ywBCvFR,IAAM8B,EAA6B,eAACC,EAAD,wDAAiB5D,EAAjB,6CAA2B,CACnE6D,OAAQ,CAAC,EAAD,CACNC,UAAWC,IAAeC,SAC1BjI,KAAM,WACNyH,WAAYI,EACZK,MAAOL,EAAS5D,EAAKK,cAAc4C,IAAiBiB,aAAelE,EAAKK,cAAc4C,IAAiBK,eACnGM,GAAU,CAAEO,SAAU,CAAC,CAAE3E,KAAM4E,IAAeC,gB,omBCKtD,IAAMC,EAAkB,CACtBC,QAAStB,IAAiBG,aAC1BoB,KAAMvB,IAAiBI,WAGnBoB,EAAc,SAAC,GAKf,IAJJC,EAII,EAJJA,WACA1F,EAGI,EAHJA,oBACA2F,EAEI,EAFJA,SACAC,EACI,EADJA,WAEM5E,EAAOmC,cACLnG,EAAS6I,cAAT7I,KAFJ,EAGsB8I,YAAS,CAAE,YAAnB3G,EAHd,YAGKS,QAuBHmG,EAAW,kBAAM/I,EAAK2I,IAE5B,OACE,kBAACK,EAAA,MAAD,CACE7E,QAAQ,QACRC,MAAuB,gBAAfsE,EACJ1E,EAAKK,cAAcC,IAAoBa,aAAc,CAAEhD,OACvD6B,EAAKK,cAAcC,IAAoBe,mBAAoB,CAAElD,KAAIuG,WAAY1E,EAAKK,cAAciE,EAAgBI,MAEpHO,QAAM,EACNC,QAAUH,GAEV,kBAAC,IAAD,CACEI,OAASxB,EAA0C,SAAfe,EAAuB1E,GAC3DoF,SAnCW,SAACrH,GAChB,IAAMsH,EAAgB,CAAE,cAAe,OAAQd,QAAS,UAAWC,KAAM,QACnEzE,EAA4B,gBAAf2E,EACf1E,EAAKK,cAAc4C,IAAiBqC,iBACpCtF,EAAKK,cAAcC,IAAoBP,WAAY,CAAEA,WAAYC,EAAKK,cAAciE,EAAgBI,MAExG,OAAOE,EACL5F,EACEe,EACA5B,EAFiB,GAGfoH,UAAWF,EAAcX,IAAgB3G,GAC3CiC,GACAhC,MAAK,kBAAM4G,OAAc5G,MAAK,kBAAMhC,EAAK2I,MACzC3F,EACAe,EACA5B,EAFmB,GAGjBoH,UAAWF,EAAcX,IAAgB3G,GAC3CiC,GACAhC,MAAK,kBAAMhC,EAAK2I,OAkBhBI,SAAWA,EACXS,cAAc,YAMtBf,EAAYf,aAAe,CACzBiB,SAAUc,IAAOxH,SAASyH,OAG5BjB,EAAYhD,UAAY,CACtBzC,oBAAqB0C,IAAUiE,KAAKnC,WACpCoB,WAAYlD,IAAUiE,KACtBjB,WAAYhD,IAAUE,OACtB+C,SAAUjD,IAAUkE,UAAU,CAAElE,IAAUE,OAAQF,IAAUmE,MAAM,CAAEC,QAASpE,IAAUE,OAAQmB,OAAQrB,IAAUE,YAOpGmE,sBAAQ,MAJI,SAAC5G,GAAD,OAAc6G,YAAmB,CAC1DhH,yBACCG,KAEY4G,CAAkCtB","file":"js/lib~all-request-detail~request-detail~requests~5a4d8549.af82850ca6e778a544d9.js","sourcesContent":["import { getActionApi, getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_REQUESTER_PERSONA, APPROVAL_APPROVER_PERSONA } from '../shared/helpers';\n\nconst actionApi = getActionApi();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sortPropertiesMapper = (property) => ({\n  'request-id': 'id',\n  opened: 'created_at',\n  requester: 'requester_name',\n  status: 'state'\n}[property] || property\n);\n\nconst filterQuery = (filterValue) => {\n  const query = [];\n  if (filterValue.name) {\n    query.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.requester) {\n    query.push(`filter[requester_name][contains_i]=${filterValue.requester}`);\n  }\n\n  if (filterValue.decision) {\n    filterValue.decision.forEach(dec => {\n      query.push(`filter[decision][eq][]=${dec}`);\n    });\n  }\n\n  return query.join('&');\n};\n\nexport function fetchRequests(filter = {}, pagination = defaultSettings, persona = undefined, sortBy) {\n  const paginationQuery = `&limit=${Math.max(pagination.limit, 10)}&offset=${pagination.offset}`;\n  const sortQuery = `&sort_by=${sortPropertiesMapper(sortBy.property)}:${sortBy.direction}`;\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/?${filterQuery(filter)}${paginationQuery}${sortQuery}`;\n  const fetchHeaders = persona ? { 'x-rh-persona': persona } : undefined;\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n}\n\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    id\n    name\n    number_of_children\n    decision\n    description\n    group_name\n    number_of_finished_children\n    state\n    requester_name\n    actions {\n      id\n      operation\n      comments\n      created_at\n      processed_by\n    }\n    requests {\n      id\n      name\n      number_of_children\n      decision\n      description\n      group_name\n      number_of_finished_children\n      state\n      workflow_id\n      parent_id\n      actions {\n        id\n        operation\n        comments\n        created_at\n        processed_by\n      }\n    }\n  }\n}`;\n\nexport const fetchRequestTranscript = (requestId, persona) => {\n  const fetchHeaders = (persona && persona !== APPROVAL_APPROVER_PERSONA) ? { 'x-rh-persona': persona }\n    : { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return graphqlInstance({ method: 'post', url: `${APPROVAL_API_BASE}/graphql`,\n    headers: fetchHeaders, data: { query: requestTranscriptQuery(requestId) }})\n  .then(({ data: { requests }}) => requests);\n};\n\nexport const fetchRequestContent = (id) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}/content`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport const fetchRequestCapabilities = (id, isParent) => {\n  const fetchUrl = `${APPROVAL_API_BASE}/requests/${id}${isParent ? '/requests' : ''}`;\n  const fetchHeaders = { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA };\n  return getAxiosInstance()({ method: 'get', url: fetchUrl, headers: fetchHeaders });\n};\n\nexport async function fetchRequestWithSubrequests(id, persona) {\n  const requestData = await fetchRequestTranscript(id, persona);\n\n  if (!requestData || requestData.length === 0) { return {}; }\n\n  if (persona === APPROVAL_APPROVER_PERSONA) {\n    if (requestData && requestData.length > 0 && requestData[0].number_of_children > 0) {\n      const result = await fetchRequestCapabilities(id, true);\n\n      if (result && result.data) {\n        requestData[0].requests = requestData[0].requests.map(request => {\n          return {\n            ...result.data.find((item) => (item.id === request.id) && item.metadata),\n            ...request\n          };\n        });\n      }\n    }\n    else {\n      const request = await fetchRequestCapabilities(id, false);\n      if (request) {\n        requestData[0] = { ...requestData[0], metadata: request.metadata };\n      }\n    }\n  }\n\n  return requestData[0];\n}\n\nexport const createRequestAction = (requestId, actionIn) => actionApi.createAction(requestId, actionIn);\n","import * as ActionTypes from '../action-types';\nimport * as RequestHelper from '../../helpers/request/request-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport actionModalMessages from '../../messages/action-modal.messages';\n\nexport const fetchRequests = (persona, pagination) => (dispatch, getState) => {\n  const { sortBy, requests, filterValue } = getState().requestReducer;\n\n  let finalPagination = pagination || defaultSettings;\n\n  if (!pagination && requests) {\n    const { limit, offset } = requests.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_REQUESTS,\n    payload: RequestHelper.fetchRequests(filterValue, finalPagination, persona, sortBy)\n  });\n};\n\nexport const fetchRequest = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST,\n  payload: RequestHelper.fetchRequestWithSubrequests(apiProps, persona)\n});\n\nexport const fetchRequestContent = (apiProps, persona) => ({\n  type: ActionTypes.FETCH_REQUEST_CONTENT,\n  payload: RequestHelper.fetchRequestContent(apiProps, persona)\n});\n\nexport const createRequestAction = (actionName, requestId, actionIn, intl) => ({\n  type: ActionTypes.CREATE_REQUEST_ACTION,\n  payload: RequestHelper.createRequestAction(requestId, actionIn),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(actionModalMessages.successTitle),\n        description: intl.formatMessage(actionModalMessages.fulfilledAction, { actionName })\n      },\n      rejected: {\n        variant: 'danger',\n        title: intl.formatMessage(actionModalMessages.failedTitle, { actionName }),\n        description: intl.formatMessage(actionModalMessages.failedAction, { actionName })\n      }\n    }\n  }\n});\n\nexport const sortRequests = (sortBy) => ({\n  type: ActionTypes.SORT_REQUESTS,\n  payload: sortBy\n});\n\nexport const setFilterValueRequests = (filterValue, type) => ({\n  type: ActionTypes.SET_FILTER_REQUESTS,\n  payload: { filterValue, type }\n});\n\nexport const clearFilterValueRequests = () => ({\n  type: ActionTypes.CLEAR_FILTER_REQUESTS\n});\n\nexport const resetRequestList = () => ({\n  type: ActionTypes.RESET_REQUEST_LIST\n});\n","const { defineMessages } = require('react-intl');\n\nconst actionModalMessages = defineMessages({\n  requestTitle: {\n    id: 'actionModal.requestTitle',\n    defaultMessage: 'Request #{id}'\n  },\n  requestActionTitle: {\n    id: 'actionModal.requestTitle',\n    defaultMessage: '{actionType} Request #{id}'\n  },\n  actionName: {\n    id: 'actionModal.actionName',\n    defaultMessage: '{actionType} Request'\n  },\n  fulfilledAction: {\n    id: 'actionModal.fullfiledAction',\n    defaultMessage: 'The {actionName} was successful.'\n  },\n  failedAction: {\n    id: 'actionModal.failedAction',\n    defaultMessage: 'The {actionName} action failed.'\n  },\n  successTitle: {\n    id: 'actionModal.successTitle',\n    defaultMessage: 'Success'\n  },\n  failedTitle: {\n    id: 'actionModal.failedTitle',\n    defaultMessage: '{actionName} error'\n  }\n});\n\nexport default actionModalMessages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Button } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nimport requestsMessages from '../../messages/requests.messages';\nimport { isRequestStateActive } from '../../helpers/shared/helpers';\n\nconst JustChildren = ({ children, className }) => <span className={ className }>{ children }</span>;\n\nJustChildren.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nconst RequestActions = ({\n  denyLink,\n  approveLink,\n  commentLink,\n  request,\n  canApproveDeny,\n  canComment\n}) => {\n  const intl = useIntl();\n\n  const { id, state } = request;\n  const approveDenyAllowed = isRequestStateActive(state) && canApproveDeny;\n  const commentAllowed = isRequestStateActive(state) && canComment;\n\n  const ApproveDenyLink = approveDenyAllowed ? Link : JustChildren;\n  const CommentLink = commentAllowed ? Link : JustChildren;\n\n  return (\n    <div style={ { display: 'flex' } }>\n      <ApproveDenyLink\n        to={ { pathname: approveLink, search: `request=${id}` } }\n        className=\"pf-u-mr-sm\"\n        id={ `approve-${request.id}` }\n      >\n        <Button\n          variant=\"primary\"\n          aria-label={ intl.formatMessage(requestsMessages.approveRequest) }\n          isDisabled={ !approveDenyAllowed }\n        >\n          { intl.formatMessage(requestsMessages.approveTitle) }\n        </Button>\n      </ApproveDenyLink>\n      <ApproveDenyLink\n        to={ { pathname: denyLink, search: `request=${id}` } }\n        className=\"pf-u-mr-sm\"\n        id={ `deny-${request.id}` }\n      >\n        <Button\n          variant=\"danger\"\n          isDisabled={ !approveDenyAllowed }\n          aria-label={ intl.formatMessage(requestsMessages.denyTitle) }\n        >\n          { intl.formatMessage(requestsMessages.denyTitle) }\n        </Button>\n      </ApproveDenyLink>\n      <CommentLink\n        to={ { pathname: commentLink, search: `request=${id}` } }\n        id={ `comment-${request.id}` }\n      >\n        <Button\n          variant=\"secondary\"\n          isDisabled={ !commentAllowed }\n          aria-label={ intl.formatMessage(requestsMessages.commentTitle) }\n        >\n          { intl.formatMessage(requestsMessages.commentTitle) }\n        </Button>\n      </CommentLink>\n    </div>\n  );\n};\n\nRequestActions.propTypes = {\n  denyLink: PropTypes.string,\n  approveLink: PropTypes.string,\n  commentLink: PropTypes.string,\n  request: PropTypes.object.isRequired,\n  canApproveDeny: PropTypes.bool,\n  canComment: PropTypes.bool\n};\n\nRequestActions.defaultProps = {\n  canApproveDeny: true,\n  canComment: true\n};\n\nexport default RequestActions;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport requestsMessages from '../messages/requests.messages';\n\nexport const createRequestCommentSchema = (isDeny = false, intl) => ({\n  fields: [{\n    component: componentTypes.TEXTAREA,\n    name: 'comments',\n    isRequired: isDeny,\n    label: isDeny ? intl.formatMessage(requestsMessages.reasonTitle) : intl.formatMessage(requestsMessages.commentTitle),\n    ...(isDeny && { validate: [{ type: validatorTypes.REQUIRED }]})\n  }]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal } from '@patternfly/react-core';\nimport { createRequestAction } from '../../redux/actions/request-actions';\nimport { createRequestCommentSchema } from '../../forms/request-comment-form.schema';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\nimport { useIntl } from 'react-intl';\nimport actionModalMessages from '../../messages/action-modal.messages';\nimport requestsMessages from '../../messages/requests.messages';\n\nconst actionTypeToMsg = {\n  Approve: requestsMessages.approveTitle,\n  Deny: requestsMessages.denyTitle\n};\n\nconst ActionModal = ({\n  actionType,\n  createRequestAction,\n  closeUrl,\n  postMethod\n}) => {\n  const intl = useIntl();\n  const { push } = useHistory();\n  const [{ request: id }] = useQuery([ 'request' ]);\n\n  const onSubmit = (data) => {\n    const operationType = { 'Add Comment': 'memo', Approve: 'approve', Deny: 'deny' };\n    const actionName = actionType === 'Add Comment'\n      ? intl.formatMessage(requestsMessages.addCommentTitle)\n      : intl.formatMessage(actionModalMessages.actionName, { actionName: intl.formatMessage(actionTypeToMsg[actionType]) }) ;\n\n    return postMethod ?\n      createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data },\n        intl\n      ).then(() => postMethod()).then(() => push(closeUrl))\n      : createRequestAction(\n        actionName,\n        id,\n        { operation: operationType[actionType], ...data },\n        intl\n      ).then(() => push(closeUrl));\n  };\n\n  const onCancel = () => push(closeUrl);\n\n  return (\n    <Modal\n      variant=\"large\"\n      title={ actionType === 'Add Comment'\n        ? intl.formatMessage(actionModalMessages.requestTitle, { id })\n        : intl.formatMessage(actionModalMessages.requestActionTitle, { id, actionType: intl.formatMessage(actionTypeToMsg[actionType]) })\n      }\n      isOpen\n      onClose={ onCancel }\n    >\n      <FormRenderer\n        schema={ createRequestCommentSchema(actionType === 'Deny', intl) }\n        onSubmit={ onSubmit }\n        onCancel={ onCancel }\n        formContainer=\"modal\"\n      />\n    </Modal>\n  );\n};\n\nActionModal.defaultProps = {\n  closeUrl: routes.requests.index\n};\n\nActionModal.propTypes = {\n  createRequestAction: PropTypes.func.isRequired,\n  postMethod: PropTypes.func,\n  actionType: PropTypes.string,\n  closeUrl: PropTypes.oneOfType([ PropTypes.string, PropTypes.shape({ patname: PropTypes.string, search: PropTypes.string }) ])\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  createRequestAction\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(ActionModal);\n"],"sourceRoot":""}