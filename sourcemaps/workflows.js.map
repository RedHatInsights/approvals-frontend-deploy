{"version":3,"sources":["webpack:///./src/helpers/group/group-helper.js","webpack:///./src/helpers/workflow/workflow-helper.js","webpack:///./src/redux/actions/workflow-actions.js","webpack:///./src/smart-components/workflow/add-stages/summary-content.js","webpack:///./src/smart-components/workflow/add-stages/stage-information.js","webpack:///./src/smart-components/workflow/add-stages/set-stages.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/smart-components/workflow/add-stages/add-stages-wizard.js","webpack:///./src/smart-components/workflow/add-stages/workflow-sequence.js","webpack:///./src/smart-components/workflow/edit-workflow-info-modal.js","webpack:///./src/smart-components/workflow/edit-workflow-stages-modal.js","webpack:///./src/smart-components/workflow/remove-workflow-modal.js","webpack:///./src/smart-components/workflow/expandable-content.js","webpack:///./src/smart-components/workflow/workflow-table-helpers.js","webpack:///./src/smart-components/workflow/workflows.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js"],"names":["api","getRbacGroupApi","fetchGroupNames","groupRefs","a","Promise","all","map","id","getGroup","group","name","status","fetchFilterApprovalGroups","filterValue","filterQuery","getAxiosInstance","get","RBAC_API_BASE","length","then","data","uuid","label","value","workflowApi","getWorkflowApi","templateApi","getTemplateApi","fetchWorkflows","filter","pagination","defaultSettings","paginationQuery","limit","offset","APPROVAL_API_BASE","fetchWorkflowWithGroupNames","showWorkflow","wfData","group_refs","wfWithGroups","group_names","fetchWorkflow","removeWorkflow","workflowId","destroyWorkflow","removeWorkflows","selectedWorkflows","type","ActionTypes","payload","WorkflowHelper","apiProps","addWorkflow","workflowData","workflow","listTemplates","Error","addWorkflowToTemplate","meta","notifications","fulfilled","variant","title","description","updateWorkflow","workflows","SummaryContent","formData","wfGroups","Stack","gutter","StackItem","Title","size","TextContent","Text","className","component","TextVariants","h5","Grid","GridItem","span","p","undefined","stage","idx","key","propTypes","PropTypes","object","validateName","fetchWorkflowByName","find","wf","WorkflowInfoForm","initialValue","handleChange","isValid","setIsValid","useState","error","setError","setResult","result","handleNameChange","validateCallback","asyncDebounce","Form","FormGroup","isRequired","fieldId","helperTextInvalid","TextInput","aria-describedby","onChange","_","event","currentTarget","TextArea","string","func","bool","shape","SetStages","isExpanded","setExpanded","stageValues","setStageValues","stageIndex","setStageIndex","inputValue","setInputValue","isFetching","setIsFetching","defaultOptions","useSelector","groupReducer","groups","dispatch","useDispatch","useEffect","FETCH_RBAC_GROUPS","GroupHelper","onToggle","removeStage","i","parseInt","target","values","j","loadGroupOptions","createStageInput","cacheOptions","isClearable","aria-label","e","inpuValue","isexpanded","loadOptions","onInputChange","replace","style","display","Button","isInline","onClick","_stage","borderTop","AddWorkflow","setValues","push","useHistory","rbacGroups","steps","enableNext","options","nextButtonText","Wizard","isOpen","onClose","addNotification","dismissable","onSave","defaultProps","initialValues","history","match","postMethod","arrayOf","oneOfType","number","WorkflowSequence","sequence","handleSequenceChange","EditWorkflowInfoModal","params","editType","setFormData","setInitialValue","onCancel","Modal","width","ActionGroup","Split","SplitItem","withRouter","connect","workflowReducer","isRecordLoading","bindActionCreators","EditWorkflowStagesModal","stageOptions","isDisabled","fetchRbacGroups","item","RemoveWorkflowModal","goBack","ids","fetchData","setSelectedWorkflows","isSmall","actions","Bullseye","h1","defaultMessage","count","array","ExpandableContent","groupNames","setGroupNames","isLoaded","setIsLoaded","fetching","setFetching","expandedWorkflows","ref","fetchGroupName","includes","small","join","Skeleton","SkeletonSize","sm","createRows","reduce","acc","selected","cells","parent","columns","cellFormatters","expandable","debouncedFilter","filteringCallback","initialState","isFiltering","workflowsListState","state","action","Workflows","useReducer","stateDispatch","scrollToTop","handleFilterChange","handlePagination","_apiProps","anyWorkflowsSelected","tabItems","eventKey","isSelectable","routes","exact","path","render","props","actionResolver","rowIndex","_event","_rowId","color","titlePlural","titleSingular","setCheckedItems","checkedWorkflows","toolbarButtons","ToolbarGroup","ToolbarItem","to","pathname","onFilterChange","isLoading","onCollapse","setRows","setOpen","expandWorkflow","rows","renderEmptyState","Icon","SearchIcon","PrimaryAction","asyncFunction","debounceTime","onlyResolvesLast","awesomeDebouncePromise","ApprovalBreadcrumbs","breadcrumbs","Breadcrumb","Object","BreadcrumbItem","isActive","TopToolbar","children","paddingBottom","Level","node","TopToolbarTitle","LevelItem","AppTabs","location","activeTab","activeKey","onSelect","tabIndex","TableEmptyState","renderDescription","centered","icon","any","FilterToolbarItem","searchValue","placeholder","height","AsyncPagination","apiRequest","isCompact","Pagination","perPage","itemCount","onPerPageSelect","page","getCurrentPage","onSetPage","debounce","getNewPage","request","debouncePromise","direction","BottomPaginationContainer","TableToolbarView","row","setSelected","newData","checkedItems","page-type","Toolbar","flex","renderToolbar","Table","_index","_isOpen","index","dropDirection","requests"],"mappings":"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","file":"js/workflows.js","sourcesContent":["import { getRbacGroupApi, getAxiosInstance } from '../shared/user-login';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst api = getRbacGroupApi();\n\nexport async function fetchGroupNames(groupRefs) {\n  if (groupRefs) {\n    return Promise.all(groupRefs.map(async id => {\n      try {\n        const group = await api.getGroup(id);\n        return group.name;\n      } catch (error) {\n        if (error.status !== 404) {\n          throw error;\n        }\n        else {\n          return id;\n        }\n      }\n    }));\n  }\n}\n\nexport const fetchGroupName = (id) =>\n  getAxiosInstance().get(`${RBAC_API_BASE}/groups/${id}/`)\n  .then((data) => data.name).catch((error) => {\n    if (error.status !== 404) {\n      throw error;\n    } else {\n      return id;\n    }\n  });\n\nexport const fetchFilterApprovalGroups = (filterValue) => {\n  const filterQuery = `&name=${filterValue}`;\n  return getAxiosInstance().get(`${RBAC_API_BASE}/groups/?role_names=\",Approval Administrator,Approval Approver,\"\n  ${filterValue && filterValue.length > 0\n    ? filterQuery : ''}`)\n  .then(({ data }) => data.map(({ uuid, name }) => ({ label: name, value: uuid })));\n};\n\n","import { getWorkflowApi, getTemplateApi, getAxiosInstance } from '../shared/user-login';\nimport { fetchGroupNames } from '../group/group-helper';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\n\nconst workflowApi = getWorkflowApi();\nconst templateApi = getTemplateApi();\n\nexport function fetchWorkflows(filter = '', pagination = defaultSettings) {\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains_i]=${filter}`;\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows/?${filterQuery}${paginationQuery}`\n  );\n}\n\nexport async function fetchWorkflowWithGroupNames(id) {\n  const wfData = await workflowApi.showWorkflow(id);\n  const  wfWithGroups = await fetchGroupNames(wfData.group_refs);\n  return { ...wfData, group_names: wfWithGroups };\n}\n\nexport async function fetchWorkflow(id) {\n  return await workflowApi.showWorkflow(id);\n}\n\nexport function fetchWorkflowByName(name) {\n  return fetchWorkflows(name);\n}\n\nexport function updateWorkflow(data) {\n  return workflowApi.updateWorkflow(data.id, data);\n}\n\nexport  function addWorkflow(workflow) {\n  return templateApi.listTemplates().then(({ data }) => {\n    // workaround for v1. Need to pass template ID with the workflow. Assigning to first template\n    if (!data[0]) {\n      throw new Error('No template exists');\n    }\n\n    return data[0].id;\n\n  }).then(id => workflowApi.addWorkflowToTemplate(id, workflow, {}));\n}\n\nexport async function removeWorkflow(workflowId) {\n  return await workflowApi.destroyWorkflow(workflowId);\n}\n\nexport async function removeWorkflows(selectedWorkflows) {\n  return Promise.all(selectedWorkflows.map(async workflowId => await workflowApi.destroyWorkflow(workflowId)));\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as WorkflowHelper from '../../helpers/workflow/workflow-helper';\n\nexport const fetchWorkflows = (filter, pagination) => ({\n  type: ActionTypes.FETCH_WORKFLOWS,\n  payload: WorkflowHelper.fetchWorkflows(filter, pagination)\n});\n\nexport const fetchWorkflow = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW,\n  payload: WorkflowHelper.fetchWorkflow(apiProps)\n});\n\nexport const fetchWorkflowWithGroupNames = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW_WITH_GROUP_NAMES,\n  payload: WorkflowHelper.fetchWorkflowWithGroupNames(apiProps)\n});\n\nexport const addWorkflow = (workflowData) => ({\n  type: ActionTypes.ADD_WORKFLOW,\n  payload: WorkflowHelper.addWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding approval process',\n        description: 'The approval process was added successfully.'\n      }\n    }\n  }\n});\n\nexport const updateWorkflow = (workflowData) => ({\n  type: ActionTypes.UPDATE_WORKFLOW,\n  payload: WorkflowHelper.updateWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating approval process',\n        description: 'The approval process was updated successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflow = (workflow) => ({\n  type: ActionTypes.REMOVE_WORKFLOW,\n  payload: WorkflowHelper.removeWorkflow(workflow),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval process',\n        description: 'The approval process was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflows = (workflows) => ({\n  type: ActionTypes.REMOVE_WORKFLOWS,\n  payload: WorkflowHelper.removeWorkflows(workflows),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval processes',\n        description: 'The selected approval processes were removed successfully.'\n      }\n    }\n  }\n});\n\nexport const expandWorkflow = (id) => ({\n  type: ActionTypes.EXPAND_WORKFLOW,\n  payload: id\n});\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst SummaryContent = ({ formData }) => {\n  const { name, description, wfGroups } = formData ? formData : { name: '', description: '', wfGroups: []};\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                    Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              { (wfGroups !== undefined) && wfGroups.map((stage, idx)  =>\n              { return (<Fragment key={ `Group-${idx}` }>\n                <Grid gutter=\"md\">\n                  <GridItem span={ 2 }>\n                    <Text key={ stage.value } className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                      { `Group ${idx + 1}` }\n                    </Text>\n                  </GridItem>\n                  <GridItem span={ 10 }>\n                    <Text key={ stage.label } className=\"data-table-detail content\" component={ TextVariants.p }>\n                      { `${wfGroups[idx].label}` }\n                    </Text>\n                  </GridItem>\n                </Grid>\n              </Fragment>); })\n              }\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  formData: PropTypes.object\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchWorkflowByName } from '../../../helpers/workflow/workflow-helper';\n\nconst validateName = (name) => fetchWorkflowByName(name)\n.then(({ data }) => {\n  return data.find(wf => name === wf.name)\n    ? 'Name has already been taken'\n    : undefined;\n});\n\nconst debouncedValidator = (data, validateCallback) => asyncDebounce(validateName(data).then((result) => validateCallback(result)));\n\nconst WorkflowInfoForm = ({ formData, initialValue, handleChange, isValid, setIsValid, title = undefined }) => {\n  const { name, description } = formData;\n  const [ error, setError ] = useState(undefined);\n\n  const setResult = (result) => {\n    setError(result);\n    setIsValid(!result);\n  };\n\n  const handleNameChange = (name) => {\n    if (!name || name.length < 1) {\n      setError('Enter a name for the approval process ');\n      setIsValid(false);\n    }\n    else if (!initialValue || initialValue.name !== name) {\n      debouncedValidator(name, setResult);\n    }\n    else {\n      setError(undefined);\n      setIsValid(true);\n    }\n    handleChange({ name });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Approval process name\"\n              isRequired\n              fieldId=\"workflow-name\"\n              isValid={ formData.name !== undefined && formData.name.length > 0 && isValid }\n              helperTextInvalid={ error || 'Enter a name for the approval process' }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"workflow-name\"\n                name=\"workflow-name\"\n                aria-describedby=\"workflow-name\"\n                value={ name }\n                isValid={ isValid }\n                onChange={ (_, event) => { setError(undefined); handleNameChange(event.currentTarget.value); } }\n              />\n            </FormGroup>\n            <FormGroup label=\"Description\" fieldId=\"workflow-description\">\n              <TextArea\n                type=\"text\"\n                id=\"workflow-description\"\n                name=\"workflow-description\"\n                value={ description }\n                onChange={ (_, event) => handleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowInfoForm.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  isValid: PropTypes.bool,\n  setIsValid: PropTypes.func.isRequired,\n  initialValue: PropTypes.shape({\n    name: PropTypes.string })\n};\n\nexport default WorkflowInfoForm;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { PlusIcon, TrashIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport AsyncSelect from 'react-select/async';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchFilterApprovalGroups } from '../../../helpers/group/group-helper';\nimport { WorkflowInfoFormLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button,\n  FormGroup,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Title\n} from '@patternfly/react-core';\nimport { fetchRbacApprovalGroups } from '../../../redux/actions/group-actions';\n\nconst SetStages = ({ formData, handleChange, title }) => {\n  const [ isExpanded, setExpanded ] = useState(false);\n  const [ stageValues, setStageValues ] = useState([]);\n  const [ stageIndex, setStageIndex ] = useState(1);\n  const [ inputValue, setInputValue ] = useState([]);\n  const [ isFetching, setIsFetching ] = useState([]);\n\n  const defaultOptions = useSelector(({ groupReducer: { groups }}) => groups || []);\n\n  const onInputChange = (newValue) => {\n    const value = newValue.replace(/\\W/g, '');\n    setInputValue(value);\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      fetchRbacApprovalGroups()).then(() => setIsFetching(false));\n  }, []);\n\n  useEffect(() => {\n    setStageValues(formData.wfGroups ? formData.wfGroups : []);\n    setStageIndex(formData.wfGroups ? formData.wfGroups.length : 1);\n  }, [ formData.wfGroups ]);\n\n  const onToggle = (isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  const onStageChange = (value, index) => {\n    const values = stageValues;\n    values[index] = value;\n    setStageValues(values);\n    handleChange({ wfGroups: values });\n  };\n\n  const addStage = () => {\n    setStageValues([ ...stageValues, undefined ]);\n    setStageIndex(stageIndex + 1);\n  };\n\n  const removeStage = (idx) => {\n    const i = parseInt(idx.target.id);\n    const values = [ ...stageValues.filter((_, j) => i !== j) ];\n    setStageValues(values);\n    setStageIndex(stageIndex - 1);\n    handleChange({ wfGroups: values });\n  };\n\n  const loadGroupOptions = (inputValue) => fetchFilterApprovalGroups(inputValue);\n\n  const createStageInput = (idx) => (\n    <StackItem key={ `Stack_${idx + 1}` }>\n      <FormGroup\n        label={ `Group ${idx + 1}` }\n        fieldId={ `${idx + 1}_stage_label` }\n      >\n        <Grid gutter=\"md\">\n          <GridItem span={ 8 }>\n            <AsyncSelect\n              cacheOptions\n              isClearable\n              label={ `${idx + 1} Group` }\n              aria-label={ `${idx + 1} Group` }\n              onToggle={ onToggle }\n              key={ `stage-${idx + 1}` }\n              onChange={ (e) => onStageChange(e, idx) }\n              value={ stageValues[idx] }\n              inpuValue={ inputValue }\n              isexpanded={ isExpanded }\n              loadOptions={ asyncDebounce(loadGroupOptions) }\n              defaultOptions={ defaultOptions }\n              onInputChange={ (e) => onInputChange(e, idx) }\n            />\n          </GridItem>\n          <GridItem span={ 1 } style={ { display: 'flex' } }>\n            { idx > 0 && <Button variant=\"link\" isInline key={ idx } id={ idx } onClick={ removeStage }>\n              <TrashIcon/> { 'Remove' }\n            </Button> }\n          </GridItem>\n        </Grid>\n      </FormGroup>\n    </StackItem>\n  );\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\">{ title || 'Set groups' }</Title>\n        </StackItem>\n        <StackItem>\n          { isFetching && <WorkflowInfoFormLoader/> }\n          { !isFetching &&\n          <Stack gutter=\"sm\">\n            { stageValues.map((_stage, idx) => createStageInput(idx)) }\n            <StackItem style={ { borderTop: 10 } }>\n              <Button id=\"add-workflow-stage\" variant=\"link\" isInline onClick={ addStage }>\n                <PlusIcon/> { `Add ${ stageValues.length > 0 ? 'another' : 'a'} group` }\n              </Button>\n            </StackItem>\n          </Stack> }\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetStages.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func\n};\n\nexport default SetStages;\n","import { FETCH_RBAC_GROUPS } from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchRbacApprovalGroups = () => ({\n  type: FETCH_RBAC_GROUPS,\n  payload: GroupHelper.fetchFilterApprovalGroups()\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow } from '../../../redux/actions/workflow-actions';\nimport SummaryContent from './summary-content';\nimport WorkflowInfoForm from './stage-information';\nimport SetStages from './set-stages';\n\nconst AddWorkflow = () => {\n  const [ formData, setValues ] = useState({});\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  const rbacGroups = useSelector(({ groupReducer: { groups }}) => groups);\n  const [ isValid, setIsValid ] = useState(formData.name !== undefined && formData.name.length > 0);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      component: <WorkflowInfoForm formData={ formData }\n        handleChange={ handleChange }\n        isValid={ isValid } setIsValid={ setIsValid }/> },\n    { name: 'Set groups', component: <SetStages formData={ formData }\n      handleChange={ handleChange } options={ rbacGroups } /> },\n    { name: 'Review', component: <SummaryContent formData={ formData }\n      options={ rbacGroups } />, nextButtonText: 'Confirm' }\n  ];\n\n  const onSave = () => {\n    const { name, description, wfGroups } = formData;\n    const workflowData = { name, description, group_refs: wfGroups ? wfGroups.map(group => group.value) : []};\n    push('/workflows');\n    dispatch(addWorkflow(workflowData));\n  };\n\n  const onCancel = () => {\n    dispatch(addNotification({\n      variant: 'warning',\n      title: 'Creating approval process',\n      dismissable: true,\n      description: 'Creating approval process was cancelled by the user.'\n    }));\n    push('/workflows');\n  };\n\n  return (\n    <Wizard\n      title={ 'Create approval process' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSave  }\n      steps={ steps }\n    />\n  );\n};\n\nAddWorkflow.defaultProps = {\n  rbacGroups: [],\n  initialValues: {}\n};\n\nAddWorkflow.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addWorkflow: PropTypes.func.isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflowWithGroupNames: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n};\n\nexport default AddWorkflow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  Title\n} from '@patternfly/react-core';\n\nconst WorkflowSequence = ({ formData, handleChange, isValid, setIsValid, title = undefined }) => {\n  const { sequence } = formData;\n\n  const handleSequenceChange = (sequence) => {\n    setIsValid(sequence >= 0);\n    handleChange({ sequence });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Enter sequence\"\n              isRequired\n              fieldId=\"workflow-sequence\"\n              isValid={ isValid }\n              helperTextInvalid={ 'Enter a positive number' }\n            >\n              <TextInput\n                isRequired\n                type=\"number\"\n                id=\"workflow-sequence\"\n                isValid={ isValid }\n                name=\"workflow-sequence\"\n                aria-describedby=\"workflow-name\"\n                value={ sequence }\n                onChange={ (_, event) => handleSequenceChange(event.currentTarget.value) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowSequence.propTypes = {\n  sequence: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  setIsValid: PropTypes.func.isRequired,\n  isValid: PropTypes.bool\n};\n\nexport default WorkflowSequence;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport WorkflowInfoForm from './add-stages/stage-information';\nimport WorkflowSequenceForm from './add-stages/workflow-sequence';\nimport '../../App.scss';\n\nconst EditWorkflowInfoModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  workflow,\n  isFetching,\n  editType\n}) => {\n  const [ formData, setFormData ] = useState({});\n  const [ initialValue, setInitialValue ] = useState({});\n  const [ isValid, setIsValid ] = useState(true);\n\n  const handleChange = data => setFormData({ ...formData, ...data });\n\n  useEffect(() => {\n    fetchWorkflow(id).then((data) => { setFormData({ ...formData, ...data.value }); setInitialValue({ ...data.value });});\n  }, []);\n\n  const onSave = () => {\n    if (!isValid) {return;}\n\n    const { name, description, sequence } = formData;\n    const workflowData = { id, name, description, sequence };\n    updateWorkflow(workflowData).then(() => postMethod()).then(() => push('/workflows'));\n  };\n\n  const onCancel = () => {\n    const { title, description } =\n        editType === 'sequence' ? { title: `Edit approval process's sequence`,\n          description: `Edit approval process's sequence was cancelled by the user.` } :\n          { title: `Edit approval process's information`,\n            description: `Edit approval process's information was cancelled by the user.` };\n    addNotification({\n      variant: 'warning',\n      title,\n      dismissable: true,\n      description\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ editType === 'sequence' ? 'Edit sequence' : 'Edit information' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"edit-workflow-info-modal-info\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (editType === 'info' ?\n              <WorkflowInfoForm formData={ formData } initialValue={ initialValue }\n                handleChange={ handleChange }\n                isValid={ isValid }\n                setIsValid={ setIsValid }\n                title={ `Make any changes to approval process ${workflow.name}` }/> :\n              <WorkflowSequenceForm formData={ formData }\n                initialValue={ initialValue }\n                handleChange={ handleChange }\n                isValid={ isValid }\n                setIsValid={ setIsValid }\n                title={ `Set the sequence for the approval process ${workflow.name}` }/>\n            ) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label={ 'Save' }\n                  id=\"save-edit-workflow-info\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  id=\"cancel-edit-workflow-info\"\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowInfoModal.defaultProps = {\n  isFetching: false,\n  editType: 'info'\n};\n\nEditWorkflowInfoModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  workflow: PropTypes.object,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { workflow, isRecordLoading }}) => ({\n  workflow,\n  isFetching: isRecordLoading\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditWorkflowInfoModal));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflowWithGroupNames } from '../../redux/actions/workflow-actions';\nimport { fetchRbacGroups } from '../../redux/actions/group-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport SetStages from './add-stages/set-stages';\nimport '../../App.scss';\n\nconst EditWorkflowStagesModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  fetchWorkflowWithGroupNames,\n  updateWorkflow,\n  postMethod,\n  isFetching\n}) => {\n  const [ formData, setValues ] = useState({});\n\n  const handleChange = data => {\n    setValues({ ...formData, ...data });\n  };\n\n  const initialValues = (wfData) => {\n    const stageOptions = wfData.group_refs.map((group, idx) => {\n      return { label: (wfData.group_names[idx] ? wfData.group_names[idx] : group), value: group };\n    });\n    const data = { ...wfData, wfGroups: stageOptions };\n    return data;\n  };\n\n  useEffect(() => {\n    fetchWorkflowWithGroupNames(id).then((result) => setValues(initialValues(result.value)));\n  }, []);\n\n  const onSave = () => {\n    const { wfGroups } = formData;\n    const workflowData = { group_refs: wfGroups.map(group => group ? group.value : undefined)  };\n    updateWorkflow({ id, ...workflowData }).then(() => postMethod()).then(()=>push('/workflows'));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Edit approval process's groups`,\n      dismissable: true,\n      description: `Edit approval process's groups was cancelled by the user.`\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ `Edit approval process's groups` }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"workflow-stages-formgroup\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (\n              <StackItem className=\"stages-modal\">\n                <SetStages className=\"stages-modal\" formData={ formData }\n                  handleChange={ handleChange }\n                  title={ `Add or remove ${formData.name}'s groups` }/>\n              </StackItem>) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button aria-label={ 'Save' }\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isDisabled={ isFetching }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowStagesModal.defaultProps = {\n  rbacGroups: [],\n  isFetching: false\n};\n\nEditWorkflowStagesModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  addWorkflow: PropTypes.func.isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflowWithGroupNames: PropTypes.func.isRequired,\n  fetchRbacGroups: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isFetching: PropTypes.bool,\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string\n  })\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflowWithGroupNames,\n  fetchRbacGroups\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { isRecordLoading }}) => ({\n  isFetching: isRecordLoading\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditWorkflowStagesModal));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal, Button, Bullseye, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { removeWorkflow, removeWorkflows } from '../../redux/actions/workflow-actions';\n\nconst RemoveWorkflowModal = ({\n  history: { goBack, push },\n  match: { params: { id: workflowId  }},\n  ids,\n  removeWorkflow,\n  removeWorkflows,\n  fetchData,\n  setSelectedWorkflows\n}) => {\n  if (!workflowId && (!ids || ids.length === 0)) {\n    return null;\n  }\n\n  const onSubmit = () => { return ((workflowId ? removeWorkflow(workflowId) : removeWorkflows(ids))\n  .then(setSelectedWorkflows([])).then(fetchData()).then(push('/workflows')));\n  };\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      width={ '40%' }\n      title={ '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button id=\"cancel-remove-workflow\" key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button id=\"submit-remove-workflow\" key=\"submit\" variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Bullseye>\n        <TextContent>\n          <Text component={ TextVariants.h1 }>\n            <FormattedMessage\n              id=\"remove-workflow-modal\"\n              defaultMessage={ `Removing {count, number} {count, plural,\n              one {approval process}\n              other {approval processes}\n            }` }\n              values={ {\n                count: workflowId !== undefined ? 1 : ids.length\n              } }\n            />\n          </Text>\n        </TextContent>\n      </Bullseye>\n    </Modal>\n  );\n};\n\nRemoveWorkflowModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.object,\n  removeWorkflows: PropTypes.func.isRequired,\n  removeWorkflow: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  setSelectedWorkflows: PropTypes.func.isRequired,\n  workflowId: PropTypes.string,\n  ids: PropTypes.array\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  removeWorkflow,\n  removeWorkflows\n}, dispatch);\n\nexport default withRouter(connect(null, mapDispatchToProps)(RemoveWorkflowModal));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport { fetchGroupName } from '../../helpers/group/group-helper';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/Skeleton';\n\nconst ExpandableContent = ({ description, groupRefs, id }) => {\n  const [ groupNames, setGroupNames ] = useState([]);\n  const [ isLoaded, setIsLoaded ] = useState();\n  const [ fetching, setFetching ] = useState();\n\n  const expandedWorkflows = useSelector(({ workflowReducer: { expandedWorkflows }}) => expandedWorkflows);\n\n  const fetchGroupNames = () => Promise.all(groupRefs.map((ref) => fetchGroupName(ref)));\n\n  useEffect(() => {\n    if (!isLoaded && expandedWorkflows.includes(id) && !fetching) {\n      setFetching(true);\n      fetchGroupNames(groupRefs).then((data) => { setGroupNames(data); setIsLoaded(true); }).catch(() => setIsLoaded(true));\n    }\n  }, [ expandedWorkflows ]);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Description</Text>\n        <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ description }</Text>\n      </TextContent>\n      <TextContent>\n        <Fragment>\n          <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Groups</Text>\n          { isLoaded ?\n            <Text className=\"data-table-detail content\"\n              component={ TextVariants.h5 }>\n              { groupNames.join(',') }\n            </Text> :\n            <div>\n              <Skeleton size={ SkeletonSize.sm } />\n            </div> }\n        </Fragment>\n      </TextContent>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  description: PropTypes.string,\n  groupRefs: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default ExpandableContent;\n","import React from 'react';\n\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data) =>\n  data.reduce((acc,\n    {\n      id,\n      name,\n      description,\n      sequence,\n      group_refs\n    }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      selected: false,\n      cells: [ name, description, sequence ]\n    }, {\n      parent: key * 2,\n      cells: [{ title: <ExpandableContent\n        description={ description }\n        groupRefs={ group_refs }\n        id={ id }\n      /> }]\n    }\n  ]), []);\n\n","import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Link, useHistory } from 'react-router-dom';\nimport { ToolbarGroup, ToolbarItem, Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { expandable } from '@patternfly/react-table';\nimport { fetchWorkflows, expandWorkflow } from '../../redux/actions/workflow-actions';\nimport AddWorkflow from './add-stages/add-stages-wizard';\nimport EditWorkflowInfo from './edit-workflow-info-modal';\nimport EditWorkflowStages from './edit-workflow-stages-modal';\nimport RemoveWorkflow from './remove-workflow-modal';\nimport { createRows } from './workflow-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../../smart-components/app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\n\nconst columns = [{\n  title: 'Name',\n  cellFormatters: [ expandable ]\n},\n'Description',\n'Sequence'\n];\n\nconst debouncedFilter = asyncDebounce(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchWorkflows(filter, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst workflowsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Workflows = () => {\n  const [ selectedWorkflows, setSelectedWorkflows ] = useState([]);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch ] = useReducer(\n    workflowsListState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ workflowReducer: { workflows }}) => workflows\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchWorkflows(filterValue, defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const tabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n    { eventKey: 1, title: 'Approval processes', name: '/workflows' }];\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(fetchWorkflows(filterValue, pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/workflows/add-workflow\" render={ props => <AddWorkflow { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-info/:id\" render={ props => <EditWorkflowInfo editType='info' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-stages/:id\" render={ props => <EditWorkflowStages editType='stages' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-sequence/:id\" render={ props => <EditWorkflowInfo editType='sequence' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/remove/:id\"\n      render={ props => <RemoveWorkflow { ...props }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows } /> }/>\n    <Route exact path=\"/workflows/remove\"\n      render={ props => <RemoveWorkflow { ...props }\n        ids={ selectedWorkflows }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows } /> }/>\n  </Fragment>;\n\n  const actionResolver = (workflowData, { rowIndex }) => rowIndex % 2 === 1 ?\n    null\n    : [\n      {\n        title: 'Edit info',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-info/${workflow.id}`)\n      },\n\n      {\n        title: 'Edit groups',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-stages/${workflow.id}`)\n      },\n      {\n        title: 'Edit sequence',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-sequence/${workflow.id}`)\n      },\n      {\n        title: 'Delete',\n        style: { color: 'var(--pf-global--danger-color--100)'\t},\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/remove/${workflow.id}`)\n      }\n    ];\n\n  const setCheckedItems = (checkedWorkflows) =>\n    setSelectedWorkflows(checkedWorkflows.map(wf => wf.id));\n\n  const anyWorkflowsSelected = selectedWorkflows.length > 0;\n\n  const toolbarButtons = () => <ToolbarGroup className={ `pf-u-pl-lg top-toolbar` }>\n    <ToolbarItem>\n      <Link id=\"add-workflow-link\" to=\"/workflows/add-workflow\">\n        <Button\n          variant=\"primary\"\n          aria-label=\"Create approval process\"\n        >\n          Create approval process\n        </Button>\n      </Link>\n    </ToolbarItem>\n    <ToolbarItem>\n      <Link id=\"remove-multiple-workflows\" className={ anyWorkflowsSelected ? '' : 'disabled-link' } to={ { pathname: '/workflows/remove' } }>\n        <Button\n          variant=\"link\"\n          isDisabled={ !anyWorkflowsSelected }\n          style={ { color: anyWorkflowsSelected ? 'var(--pf-global--danger-color--100)' : 'var(--pf-global--disabled-color--100)'\t} }\n          aria-label=\"Delete approval process\"\n        >\n          Delete\n        </Button>\n      </Link>\n    </ToolbarItem>\n  </ToolbarGroup>;\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandWorkflow(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        <AppTabs tabItems={ tabItems }/>\n      </TopToolbar>\n      <TableToolbarView\n        data={ data }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ handlePagination }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"approval processes\"\n        titleSingular=\"approval process\"\n        pagination={ meta }\n        setCheckedItems={ setCheckedItems }\n        toolbarButtons={ toolbarButtons }\n        filterValue={ filterValue }\n        onFilterChange={ handleFilterChange }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n        renderEmptyState={ () => (\n          <TableEmptyState\n            title={ filterValue === '' ? 'No approval processes' : 'No results found' }\n            Icon={ SearchIcon }\n            PrimaryAction={ () =>\n              filterValue !== '' ? (\n                <Button onClick={ () => handleFilterChange('') } variant=\"link\">\n                  Clear all filters\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? 'No approval processes.'\n                : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n            }\n          />\n        ) }\n      />\n    </Fragment>\n  );\n};\n\nWorkflows.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  workflows: PropTypes.array,\n  isLoading: PropTypes.bool,\n  selectedWorkflows: PropTypes.array\n};\n\nWorkflows.defaultProps = {\n  workflows: [],\n  rbacGroups: {},\n  isLoading: false\n};\n\nexport default Workflows;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nconst ApprovalBreadcrumbs = ({ breadcrumbs }) => breadcrumbs\n  ? (\n    <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        <BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n          { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n        </BreadcrumbItem>\n      )) }\n    </Breadcrumb>\n  ) : null;\n\nApprovalBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    isActive: PropTypes.bool,\n    to: PropTypes.string\n  }))\n};\n\nexport default ApprovalBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport ApprovalBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <ApprovalBreadcrumbs breadcrumbs={ breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n              <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n                <Text component={ TextVariants.p }>{ description }</Text>\n              </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\nimport { Link }  from 'react-router-dom';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered\n    aria-label=\"No records\"\n  >\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={ Icon } />\n      <TextContent>\n        <Text component={ TextVariants.h1 }>{ title }</Text>\n      </TextContent>\n      <EmptyStateBody>\n        { description }\n        { renderDescription() }\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        { PrimaryAction && <PrimaryAction /> }\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n\nexport const EmptyStatePrimaryAction = ({ url, label }) => (\n  <Link to={ url }>\n    <Button variant=\"secondary\">{ label }</Button>\n  </Link>\n);\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <div className=\"toolbar-filter-input-group\">\n      <TextInput\n        placeholder={ placeholder }\n        value={ searchValue }\n        type=\"text\"\n        onChange={ onFilterChange }\n        aria-label={ placeholder }\n      />\n      <span className=\"filter-icons-container\">\n        { (isClearable && searchValue && (\n          <CloseIcon\n            className=\"clear-filter\"\n            width=\"16\"\n            height=\"16\"\n            onClick={ () => onFilterChange('') }\n          />\n        )) || <SearchIcon /> }\n      </span>\n    </div>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={ className }>\n      <Pagination\n        perPage={ limit || 50 }\n        itemCount={ count || 0 }\n        onPerPageSelect={ handleOnPerPageSelect }\n        page={ getCurrentPage(limit, offset) }\n        onSetPage={ handleSetPage }\n        direction=\"down\"\n        isCompact={ isCompact }\n        { ...props }\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    { children }\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","\nimport React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Level, LevelItem } from '@patternfly/react-core';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings  } from '../../helpers/shared/pagination';\nimport FilterToolbar from '../../presentational-components/shared/filter-toolbar-item';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport { DataListLoader } from './loader-placeholders';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse,\n  renderEmptyState\n}) => {\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (data, id) => {\n    const newData = data.map(row => row.id === id ?\n      {\n        ...row,\n        selected: !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return newData;\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse ?\n    onCollapse(id, setRows, setOpen) :\n    setRows((rows) => setOpen(rows, id));\n\n  const selectRow = (_event, selected, index, { id } = {}) => index === -1\n    ? setRows(rows.map(row => ({ ...row, selected })))\n    : setRows((rows) => setSelected(rows, id));\n\n  const renderToolbar = (isLoading) => {\n    return (<Toolbar className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg pf-u-pb-lg top-toolbar` }>\n      <Level style={ { flex: 1 } }>\n        <LevelItem>\n          <Toolbar>\n            <FilterToolbar onFilterChange={ onFilterChange } searchValue={ filterValue } isClearable={ true }\n              placeholder={ `Filter by ${titleSingular}` }/>\n            { toolbarButtons() }\n          </Toolbar>\n        </LevelItem>\n\n        <LevelItem>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <AsyncPagination\n                  apiRequest={ fetchData }\n                  isDisabled={ isLoading }\n                  meta={ pagination }\n                  isCompact\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n        </LevelItem>\n      </Level>\n    </Toolbar>);\n  };\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ `${titlePlural} table` }\n            onCollapse={ onCollapseInternal }\n            rows={ rows }\n            cells={ columns }\n            onSelect={ isSelectable && selectRow }\n            actionResolver={ actionResolver }\n            className=\"table-fix\"\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 &&\n            <BottomPaginationContainer>\n              <AsyncPagination\n                dropDirection=\"up\"\n                meta={ pagination }\n                apiRequest={ fetchData }\n              />\n            </BottomPaginationContainer>\n          }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func,\n  renderEmptyState: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  toolbarButtons: () => null,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null\n};\n"],"sourceRoot":""}