{"version":3,"sources":["webpack:///./src/helpers/group/group-helper.js","webpack:///./src/helpers/workflow/workflow-helper.js","webpack:///./src/redux/actions/workflow-actions.js","webpack:///./src/smart-components/workflow/add-stages/summary-content.js","webpack:///./src/smart-components/workflow/add-stages/stage-information.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/smart-components/workflow/add-stages/set-stages.js","webpack:///./src/smart-components/workflow/add-stages/add-stages-wizard.js","webpack:///./src/smart-components/workflow/add-stages/workflow-sequence.js","webpack:///./src/smart-components/workflow/edit-workflow-info-modal.js","webpack:///./src/smart-components/workflow/edit-workflow-stages-modal.js","webpack:///./src/smart-components/workflow/remove-workflow-modal.js","webpack:///./src/smart-components/workflow/expandable-content.js","webpack:///./src/smart-components/workflow/workflow-table-helpers.js","webpack:///./src/smart-components/workflow/workflows.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js"],"names":["api","getRbacGroupApi","getRbacGroups","a","listGroups","fetchGroupNames","groupRefs","Promise","all","map","id","getGroup","group","name","status","workflowApi","getWorkflowApi","templateApi","getTemplateApi","fetchWorkflows","filter","pagination","defaultSettings","paginationQuery","limit","offset","filterQuery","getAxiosInstance","get","APPROVAL_API_BASE","fetchWorkflowWithGroupNames","showWorkflow","wfData","group_refs","wfWithGroups","group_names","fetchWorkflow","removeWorkflow","workflowId","destroyWorkflow","removeWorkflows","selectedWorkflows","type","ActionTypes","payload","WorkflowHelper","apiProps","addWorkflow","workflowData","workflow","listTemplates","then","data","Error","addWorkflowToTemplate","meta","notifications","fulfilled","variant","title","description","rejected","updateWorkflow","workflows","SummaryContent","formData","wfGroups","Stack","gutter","StackItem","Title","size","TextContent","Text","className","component","TextVariants","h5","Grid","GridItem","span","p","undefined","stage","idx","key","value","label","propTypes","PropTypes","object","validateName","fetchWorkflowByName","find","wf","WorkflowInfoForm","initialValue","handleChange","isValid","setIsValid","useState","error","setError","setResult","result","handleNameChange","validateCallback","length","asyncDebounce","console","log","Form","FormGroup","isRequired","fieldId","helperTextInvalid","TextInput","aria-describedby","onChange","_","event","currentTarget","TextArea","string","func","bool","shape","fetchRbacGroups","FETCH_RBAC_GROUPS","GroupHelper","uuid","SetStages","isExpanded","setExpanded","stageValues","setStageValues","stageIndex","setStageIndex","inputValue","setInputValue","isFetching","setIsFetching","defaultOptions","useSelector","groupReducer","groups","dispatch","useDispatch","useEffect","onToggle","removeStage","i","parseInt","target","values","j","loadGroupOptions","filterValue","RBAC_API_BASE","createStageInput","cacheOptions","isClearable","aria-label","e","inpuValue","isexpanded","loadOptions","onInputChange","replace","style","display","Button","isInline","onClick","_stage","borderTop","AddWorkflow","push","history","addNotification","postMethod","rbacGroups","setValues","steps","enableNext","options","nextButtonText","Wizard","isOpen","onClose","dismissable","onSave","defaultProps","initialValues","match","arrayOf","oneOfType","number","withRouter","connect","state","bindActionCreators","WorkflowSequence","sequence","handleSequenceChange","EditWorkflowInfoModal","params","editType","setFormData","setInitialValue","onCancel","Modal","width","ActionGroup","Split","SplitItem","workflowReducer","isRecordLoading","EditWorkflowStagesModal","stageOptions","isDisabled","item","RemoveWorkflowModal","goBack","ids","fetchData","setSelectedWorkflows","isSmall","actions","Bullseye","h1","defaultMessage","count","array","ExpandableContent","groupNames","setGroupNames","isLoaded","setIsLoaded","fetching","setFetching","expandedWorkflows","ref","fetchGroupName","includes","small","join","Skeleton","SkeletonSize","sm","createRows","reduce","acc","selected","cells","parent","columns","cellFormatters","expandable","debouncedFilter","filteringCallback","initialState","isFiltering","workflowsListState","action","Workflows","useReducer","stateDispatch","useHistory","scrollToTop","handleFilterChange","handlePagination","_apiProps","anyWorkflowsSelected","tabItems","eventKey","isSelectable","routes","exact","path","render","props","actionResolver","rowIndex","_event","_rowId","color","titlePlural","titleSingular","setCheckedItems","checkedWorkflows","toolbarButtons","ToolbarGroup","ToolbarItem","to","pathname","onFilterChange","isLoading","onCollapse","setRows","setOpen","expandWorkflow","rows","renderEmptyState","Icon","SearchIcon","PrimaryAction","asyncFunction","debounceTime","onlyResolvesLast","awesomeDebouncePromise","ApprovalBreadcrumbs","breadcrumbs","Breadcrumb","Object","BreadcrumbItem","isActive","TopToolbar","children","paddingBottom","Level","node","TopToolbarTitle","LevelItem","AppTabs","location","activeTab","activeKey","onSelect","tabIndex","TableEmptyState","renderDescription","centered","icon","any","FilterToolbarItem","searchValue","placeholder","height","AsyncPagination","apiRequest","isCompact","Pagination","perPage","itemCount","onPerPageSelect","page","getCurrentPage","onSetPage","debounce","getNewPage","request","debouncePromise","direction","BottomPaginationContainer","TableToolbarView","row","setSelected","newData","checkedItems","page-type","Toolbar","flex","renderToolbar","Table","_index","_isOpen","index","dropDirection","requests"],"mappings":"8TAGMA,EAAMC,cAEL,SAAeC,IAAtB,+B,oCAAO,sBAAAC,EAAA,sEACQH,EAAII,aADZ,oF,sBAIA,SAAeC,EAAtB,kC,oCAAO,WAA+BC,GAA/B,SAAAH,EAAA,0DACDG,EADC,yCAEIC,QAAQC,IAAIF,EAAUG,IAAV,+BAAc,WAAMC,GAAN,eAAAP,EAAA,+EAETH,EAAIW,SAASD,GAFJ,cAEvBE,EAFuB,yBAGtBA,EAAMC,MAHgB,mCAKR,MAAjB,KAAMC,OALmB,6DASpBJ,GAToB,yDAAd,yDAFhB,4C,sBAkBA,I,ykBCtBP,IAAMK,EAAcC,cACdC,EAAcC,cAEb,SAASC,IAA0D,IAA3CC,EAA2C,uDAAlC,GAAIC,EAA8B,uDAAjBC,IACjDC,EAAkB,UAAH,OAAaF,EAAWG,MAAxB,mBAAwCH,EAAWI,QAClEC,EAAc,6BAAH,OAAgCN,GACjD,OAAOO,cAAmBC,IAAnB,UACFC,IADE,uBAC8BH,GAD9B,OAC4CH,IAI9C,SAAeO,EAAtB,kC,oCAAO,WAA2CpB,GAA3C,iBAAAP,EAAA,sEACgBY,EAAYgB,aAAarB,GADzC,cACCsB,EADD,gBAEuB3B,EAAgB2B,EAAOC,YAF9C,cAEEC,EAFF,8BAGOF,EAHP,CAGeG,YAAaD,KAH5B,4C,sBAMA,SAAeE,EAAtB,kC,oCAAO,WAA6B1B,GAA7B,SAAAP,EAAA,sEACQY,EAAYgB,aAAarB,GADjC,oF,sBAwBA,SAAe2B,EAAtB,kC,oCAAO,WAA8BC,GAA9B,SAAAnC,EAAA,sEACQY,EAAYwB,gBAAgBD,GADpC,oF,sBAIA,SAAeE,EAAtB,kC,oCAAO,WAA+BC,GAA/B,SAAAtC,EAAA,+EACEI,QAAQC,IAAIiC,EAAkBhC,IAAlB,+BAAsB,WAAM6B,GAAN,SAAAnC,EAAA,sEAA0BY,EAAYwB,gBAAgBD,GAAtD,mFAAtB,yDADd,4C,sBC/CA,IAAMnB,EAAiB,SAACC,EAAQC,GAAT,MAAyB,CACrDqB,KAAMC,IACNC,QAASC,EAA8BzB,EAAQC,KAGpCe,EAAgB,SAAAU,GAAQ,MAAK,CACxCJ,KAAMC,IACNC,QAASC,EAA6BC,KAG3BhB,EAA8B,SAAAgB,GAAQ,MAAK,CACtDJ,KAAMC,IACNC,QAASC,EAA2CC,KAGzCC,EAAc,SAACC,GAAD,MAAmB,CAC5CN,KAAMC,IACNC,SDc2BK,ECdSD,EDe7B/B,EAAYiC,gBAAgBC,MAAK,YAAc,IAAXC,EAAW,EAAXA,KAEzC,IAAKA,EAAK,GACR,MAAM,IAAIC,MAAM,sBAGlB,OAAOD,EAAK,GAAG1C,MAEdyC,MAAK,SAAAzC,GAAE,OAAIK,EAAYuC,sBAAsB5C,EAAIuC,EAAU,QCtB9DM,KAAM,CACJC,cAAe,CACbC,UAAW,CACTC,QAAS,UACTC,MAAO,kCACPC,YAAa,gDAEfC,SAAU,CACRH,QAAS,SACTC,MAAO,iCACPC,YAAa,sDDGb,IAAqBX,GCGhBa,EAAiB,SAACd,GAAD,MAAmB,CAC/CN,KAAMC,IACNC,SDT6BQ,ECSUJ,EDRhCjC,EAAY+C,eAAeV,EAAK1C,GAAI0C,ICS3CG,KAAM,CACJC,cAAe,CACbC,UAAW,CACTC,QAAS,UACTC,MAAO,oCACPC,YAAa,kDAEfC,SAAU,CACRH,QAAS,SACTC,MAAO,mCACPC,YAAa,wDDpBd,IAAwBR,GC0BlBf,EAAiB,SAACY,GAAD,MAAe,CAC3CP,KAAMC,IACNC,QAASC,EAA8BI,GACvCM,KAAM,CACJC,cAAe,CACbC,UAAW,CACTC,QAAS,UACTC,MAAO,oCACPC,YAAa,sDAMRpB,GAAkB,SAACuB,GAAD,MAAgB,CAC7CrB,KAAMC,IACNC,QAASC,EAA+BkB,GACxCR,KAAM,CACJC,cAAe,CACbC,UAAW,CACTC,QAAS,UACTC,MAAO,sCACPC,YAAa,kE,iGCjEfI,GAAiB,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAAe,EACCA,GAAsB,CAAEpD,KAAM,GAAI+C,YAAa,GAAIM,SAAU,IAA7FrD,EAD+B,EAC/BA,KAAM+C,EADyB,EACzBA,YAAaM,EADY,EACZA,SAC3B,OACE,kBAAC,WAAD,KACE,kBAACC,GAAA,MAAD,CAAOC,OAAO,MACZ,kBAACC,GAAA,UAAD,KACE,kBAACC,GAAA,MAAD,CAAOC,KAAK,MAAZ,aAEF,kBAACF,GAAA,UAAD,KACE,kBAACF,GAAA,MAAD,CAAOC,OAAO,MACZ,kBAACC,GAAA,UAAD,KACE,kBAACG,GAAA,YAAD,KACE,kBAACC,GAAA,KAAD,CAAMC,UAAU,4BAA4BC,UAAYC,gBAAaC,IAArE,4FAIJ,kBAACR,GAAA,UAAD,KACE,kBAACS,GAAA,KAAD,CAAMV,OAAO,MACX,kBAACW,GAAA,SAAD,CAAUC,KAAO,GACf,kBAACP,GAAA,KAAD,CAAMC,UAAU,4BAA4BC,UAAYC,gBAAaC,IAArE,SAEF,kBAACE,GAAA,SAAD,CAAUC,KAAO,IACf,kBAACP,GAAA,KAAD,CAAMC,UAAU,4BAA4BC,UAAYC,gBAAaK,GAAMpE,KAG/E,kBAACiE,GAAA,KAAD,CAAMV,OAAO,MACX,kBAACW,GAAA,SAAD,CAAUC,KAAO,GACf,kBAACP,GAAA,KAAD,CAAMC,UAAU,4BAA4BC,UAAYC,gBAAaC,IAArE,gBAEF,kBAACE,GAAA,SAAD,CAAUC,KAAO,IACf,kBAACP,GAAA,KAAD,CAAMC,UAAU,4BAA4BC,UAAYC,gBAAaK,GAAMrB,UAG/DsB,IAAbhB,GAA2BA,EAASzD,KAAI,SAAC0E,EAAOC,GACjD,OAAQ,kBAAC,WAAD,CAAUC,IAAG,gBAAYD,IACjC,kBAACN,GAAA,KAAD,CAAMV,OAAO,MACX,kBAACW,GAAA,SAAD,CAAUC,KAAO,GACf,kBAACP,GAAA,KAAD,CAAMY,IAAMF,EAAMG,MAAQZ,UAAU,4BAA4BC,UAAYC,gBAAaC,IAAzF,gBACaO,EAAM,KAGrB,kBAACL,GAAA,SAAD,CAAUC,KAAO,IACf,kBAACP,GAAA,KAAD,CAAMY,IAAMF,EAAMI,MAAQb,UAAU,4BAA4BC,UAAYC,gBAAaK,GAAzF,UACOf,EAASkB,GAAKG,oBAczCvB,GAAewB,UAAY,CACzBvB,SAAUwB,IAAUC,QAGP1B,U,gDC5DT2B,GAAe,SAAC9E,GAAD,OHYd,SAA6BA,GAClC,OAAOM,EAAeN,GGbO+E,CAAoB/E,GAClDsC,MAAK,YACJ,OADkB,EAAXC,KACKyC,MAAK,SAAAC,GAAE,OAAIjF,IAASiF,EAAGjF,QAC/B,mCACAqE,MAKAa,GAAmB,SAAC,GAAqF,IAAnF9B,EAAmF,EAAnFA,SAAU+B,EAAyE,EAAzEA,aAAcC,EAA2D,EAA3DA,aAAcC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,WAAoC,IAAxBxC,aAAwB,WAAhBuB,EAAgB,EACrGrE,EAAsBoD,EAAtBpD,KAAM+C,EAAgBK,EAAhBL,YAD+F,EAEjFwC,wBAASlB,GAFwE,WAErGmB,EAFqG,KAE9FC,EAF8F,KAIvGC,EAAY,SAACC,GACjBF,EAASE,GACTL,GAAYK,IAGRC,EAAmB,SAAC5F,GAXD,IAACuC,EAAMsD,GAYzB7F,GAAQA,EAAK8F,OAAS,GACzBL,EAAS,0CACTH,GAAW,IAEHH,GAAgBA,EAAanF,OAASA,GAI9CyF,OAASpB,GACTiB,GAAW,KArBW/C,EAiBHvC,EAjBS6F,EAiBHH,EAjBwBK,aAAcjB,GAAavC,GAAMD,MAAK,SAACqD,GAAD,OAAYE,EAAiBF,QAuBtHK,QAAQC,IAAI,+BAAgCjG,EAAMqF,EAASG,GAC3DJ,EAAa,CAAEpF,UAGjB,OACE,kBAAC,WAAD,KACE,kBAACsD,GAAA,MAAD,CAAOC,OAAO,MACZ,kBAACC,GAAA,UAAD,KACE,kBAACC,GAAA,MAAD,CAAOC,KAAK,MAAZ,IAAoBZ,GAAS,yBAA7B,MAEF,kBAACU,GAAA,UAAD,KACE,kBAAC0C,GAAA,KAAD,KACE,kBAACC,GAAA,UAAD,CACEzB,MAAM,wBACN0B,YAAU,EACVC,QAAQ,gBACRhB,aAA4BhB,IAAlBjB,EAASpD,MAAsBoD,EAASpD,KAAK8F,OAAS,GAAKT,EACrEiB,kBAAoBd,GAAS,yCAE7B,kBAACe,GAAA,UAAD,CACEH,YAAU,EACVvE,KAAK,OACLhC,GAAG,gBACHG,KAAK,gBACLwG,mBAAiB,gBACjB/B,MAAQzE,EACRqF,QAAUA,EACVoB,SAAW,SAACC,EAAGC,GAAYlB,OAASpB,GAAYuB,EAAiBe,EAAMC,cAAcnC,WAGzF,kBAAC0B,GAAA,UAAD,CAAWzB,MAAM,cAAc2B,QAAQ,wBACrC,kBAACQ,GAAA,SAAD,CACEhF,KAAK,OACLhC,GAAG,uBACHG,KAAK,uBACLyE,MAAQ1B,EACR0D,SAAW,SAACC,EAAGC,GAAJ,OAAcvB,EAAa,CAAErC,YAAa4D,EAAMC,cAAcnC,iBAUzFS,GAAiBP,UAAY,CAC3B3E,KAAM4E,IAAUkC,OAChB/D,YAAa6B,IAAUkC,OACvBhE,MAAO8B,IAAUkC,OACjB1D,SAAUwB,IAAUC,OACpBO,aAAcR,IAAUmC,KAAKX,WAC7Bf,QAAST,IAAUoC,KACnB1B,WAAYV,IAAUmC,KAAKX,WAC3BjB,aAAcP,IAAUqC,MAAM,CAC5BjH,KAAM4E,IAAUkC,UAGL5B,U,kFCnGFgC,GAAkB,iBAAO,CACpCrF,KAAMsF,IACNpF,QAASqF,IAA4B9E,MAAK,gBAAGC,EAAH,EAAGA,KAAH,YACrCA,EAAK3C,KAAI,kBAAqB,CAAE6E,MAAvB,EAAG4C,KAAiC3C,MAApC,EAAS1E,eCYnBsH,GAAY,SAAC,GAAsC,IAApClE,EAAoC,EAApCA,SAAUgC,EAA0B,EAA1BA,aAActC,EAAY,EAAZA,MAAY,EACnByC,oBAAS,GADU,WAC/CgC,EAD+C,KACnCC,EADmC,OAEfjC,mBAAS,IAFM,WAE/CkC,EAF+C,KAElCC,EAFkC,OAGjBnC,mBAAS,GAHQ,WAG/CoC,EAH+C,KAGnCC,EAHmC,OAIjBrC,mBAAS,IAJQ,WAI/CsC,EAJ+C,KAInCC,EAJmC,OAKjBvC,mBAAS,IALQ,WAK/CwC,EAL+C,KAKnCC,EALmC,KAOjDC,EAAiBC,uBAAY,qBAAGC,aAAgBC,QAAwB,MAOxEC,EAAWC,wBACjBC,qBAAU,WACRP,GAAc,GACdK,EACEnB,MAAmB5E,MAAK,kBAAM0F,GAAc,QAC7C,IAEHO,qBAAU,WACRb,EAAetE,EAASC,SAAWD,EAASC,SAAW,IACvDuE,EAAcxE,EAASC,SAAWD,EAASC,SAASyC,OAAS,KAC5D,CAAE1C,EAASC,WAEd,IAAMmF,EAAW,SAACjB,GAChBC,EAAYD,IAeRkB,EAAc,SAAClE,GACnB,IAAMmE,EAAIC,SAASpE,EAAIqE,OAAO/I,IACxBgJ,EAAS,KAAKpB,EAAYlH,QAAO,SAACmG,EAAGoC,GAAJ,OAAUJ,IAAMI,MACvDpB,EAAemB,GACfjB,EAAcD,EAAa,GAC3BvC,EAAa,CAAE/B,SAAUwF,KAGrBE,EAAmB,SAAClB,GAAD,ON/BOmB,EM+B2BnB,EN9B3D/G,cAAmBC,IAAnB,UAA0BkI,IAA1B,mBAAkDD,EAAYlD,OAAS,EAArB,gBACrCkD,GACT,KACH1G,MAAK,qBAAGC,KAAgB3C,KAAI,gBAAGyH,EAAH,EAAGA,KAAH,MAAqB,CAAE3C,MAAvB,EAAS1E,KAA2ByE,MAAO4C,SAJzC,IAAC2B,GMiC1BE,EAAmB,SAAC3E,GAAD,OACvB,kBAACf,GAAA,UAAD,CAAWgB,IAAG,gBAAYD,EAAM,IAC9B,kBAAC4B,GAAA,UAAD,CACEzB,MAAK,gBAAYH,EAAM,GACvB8B,QAAO,UAAM9B,EAAM,EAAZ,iBAEP,kBAACN,GAAA,KAAD,CAAMV,OAAO,MACX,kBAACW,GAAA,SAAD,CAAUC,KAAO,GACf,kBAAC,KAAD,CACEgF,cAAY,EACZC,aAAW,EACX1E,MAAK,UAAMH,EAAM,EAAZ,UACL8E,aAAA,UAAgB9E,EAAM,EAAtB,UACAiE,SAAWA,EACXhE,IAAG,gBAAYD,EAAM,GACrBkC,SAAW,SAAC6C,GAAD,OArCA7E,EAqCqB6E,GApCpCT,EAASpB,GAoC8BlD,GAnC7BE,EAChBiD,EAAemB,QACfzD,EAAa,CAAE/B,SAAUwF,IAJL,IAACpE,EACfoE,GAqCIpE,MAAQgD,EAAYlD,GACpBgF,UAAY1B,EACZ2B,WAAajC,EACbkC,YAAc1D,aAAcgD,GAC5Bd,eAAiBA,EACjByB,cAAgB,SAACJ,GAAD,OA/DpB7E,EA+DyC6E,EA/DxBK,QAAQ,MAAO,SACtC7B,EAAcrD,GAFM,IACdA,MAkEA,kBAACP,GAAA,SAAD,CAAUC,KAAO,EAAIyF,MAAQ,CAAEC,QAAS,SACpCtF,EAAM,GAAK,kBAACuF,EAAA,OAAD,CAAQjH,QAAQ,OAAOkH,UAAQ,EAACvF,IAAMD,EAAM1E,GAAK0E,EAAMyF,QAAUvB,GAC5E,kBAAC,KAAD,MADW,IACI,eAQ3B,OACE,kBAAC,WAAD,KACE,kBAACnF,GAAA,MAAD,CAAOC,OAAO,MACZ,kBAACC,GAAA,UAAD,KACE,kBAACC,GAAA,MAAD,CAAOC,KAAK,MAAOZ,GAAS,eAE9B,kBAACU,GAAA,UAAD,KACIuE,GAAc,kBAAC,KAAD,OACbA,GACH,kBAACzE,GAAA,MAAD,CAAOC,OAAO,MACVkE,EAAY7H,KAAI,SAACqK,EAAQ1F,GAAT,OAAiB2E,EAAiB3E,MACpD,kBAACf,GAAA,UAAD,CAAWoG,MAAQ,CAAEM,UAAW,KAC9B,kBAACJ,EAAA,OAAD,CAAQjK,GAAG,qBAAqBgD,QAAQ,OAAOkH,UAAQ,EAACC,QA7DnD,WACftC,EAAe,GAAD,YAAMD,GAAN,MAAmBpD,KACjCuD,EAAcD,EAAa,KA4Df,kBAAC,KAAD,MADF,kBACwBF,EAAY3B,OAAS,EAAI,UAAY,IAD7D,iBAWdwB,GAAU3C,UAAY,CACpB3E,KAAM4E,IAAUkC,OAChB/D,YAAa6B,IAAUkC,OACvBhE,MAAO8B,IAAUkC,OACjB1D,SAAUwB,IAAUC,OACpBO,aAAcR,IAAUmC,MAGXO,U,+NC3Hf,IAAM6C,GAAc,SAAC,GAMf,IALOC,EAKP,EALJC,QAAWD,KACXlI,EAII,EAJJA,YACAoI,EAGI,EAHJA,gBACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WACI,EAC4BjF,mBAAS,IADrC,WACInC,EADJ,KACcqH,EADd,OAE4BlF,wBAA2BlB,IAAlBjB,EAASpD,MAAsBoD,EAASpD,KAAK8F,OAAS,GAF3F,WAEIT,EAFJ,KAEaC,EAFb,KAIEF,EAAe,SAAA7C,GACnBkI,E,mWAAU,IAAKrH,EAAN,GAAoBb,KAGzBmI,EAAQ,CACZ,CAAE1K,KAAM,sBACN2K,WAAYtF,GAAWjC,EAASpD,MAAQoD,EAASpD,KAAK8F,OAAS,EAC/DhC,UAAW,kBAAC,GAAD,CAAkBV,SAAWA,EACtCgC,aAAeA,EACfC,QAAUA,EAAUC,WAAaA,KACrC,CAAEtF,KAAM,aAAc8D,UAAW,kBAAC,GAAD,CAAWV,SAAWA,EACrDgC,aAAeA,EAAewF,QAAUJ,KAC1C,CAAExK,KAAM,SAAU8D,UAAW,kBAAC,GAAD,CAAgBV,SAAWA,EACtDwH,QAAUJ,IAAiBK,eAAgB,YAmB/C,OACE,kBAACC,GAAA,OAAD,CACEhI,MAAQ,0BACRiI,QAAM,EACNC,QAda,WACfV,EAAgB,CACdzH,QAAS,UACTC,MAAO,4BACPmI,aAAa,EACblI,YAAa,yDAEfqH,EAAK,eAQHc,OArBW,WAAM,IACXlL,EAAgCoD,EAAhCpD,KAAM+C,EAA0BK,EAA1BL,YAAaM,EAAaD,EAAbC,SACrBlB,EAAe,CAAEnC,OAAM+C,cAAa3B,WAAYiC,EAAWA,EAASzD,KAAI,SAAAG,GAAK,OAAIA,EAAM0E,SAAS,IACtG,OAAOvC,EAAYC,GAAcG,MAAK,kBAAMiI,OAAcjI,MAAK,kBAAO8H,EAAK,kBAmBzEM,MAAQA,KAKdP,GAAYgB,aAAe,CACzBX,WAAY,GACZY,cAAe,IAGjBjB,GAAYxF,UAAY,CACtB0F,QAASzF,IAAUqC,MAAM,CACvBmD,KAAMxF,IAAUmC,KAAKX,aACpBA,WACHlE,YAAa0C,IAAUmC,KAAKX,WAC5BiF,MAAOzG,IAAUC,OACjByF,gBAAiB1F,IAAUmC,KAAKX,WAChCnF,4BAA6B2D,IAAUmC,KAAKX,WAC5CmE,WAAY3F,IAAUmC,KAAKX,WAC3BoE,WAAY5F,IAAU0G,QAAQ1G,IAAUqC,MAAM,CAC5CxC,MAAOG,IAAU2G,UAAU,CAAE3G,IAAU4G,OAAQ5G,IAAUkC,SAAUV,WACnE1B,MAAOE,IAAUkC,OAAOV,cACtBA,YAGN,IAYeqF,eAAWC,mBAZF,SAACC,GACvB,MAAO,CACLnB,WAAYmB,EAAMxD,aAAaC,WAIR,SAACC,GAAD,OAAcuD,aAAmB,CAC1DtB,mCACApI,cACAjB,+BACCoH,KAEuBqD,CAA6CvB,K,wCCtFjE0B,GAAmB,SAAC,GAAuE,IAArEzI,EAAqE,EAArEA,SAAUgC,EAA2D,EAA3DA,aAAcC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,WAAoC,IAAxBxC,aAAwB,WAAhBuB,EAAgB,EACvFyH,EAAa1I,EAAb0I,SAOR,OACE,kBAAC,WAAD,KACE,kBAACxI,GAAA,MAAD,CAAOC,OAAO,MACZ,kBAACC,GAAA,UAAD,KACE,kBAACC,GAAA,MAAD,CAAOC,KAAK,MAAZ,IAAoBZ,GAAS,yBAA7B,MAEF,kBAACU,GAAA,UAAD,KACE,kBAAC0C,GAAA,KAAD,KACE,kBAACC,GAAA,UAAD,CACEzB,MAAM,iBACN0B,YAAU,EACVC,QAAQ,oBACRhB,QAAUA,EACViB,kBAAoB,2BAEpB,kBAACC,GAAA,UAAD,CACEH,YAAU,EACVvE,KAAK,SACLhC,GAAG,oBACHwF,QAAUA,EACVrF,KAAK,oBACLwG,mBAAiB,gBACjB/B,MAAQqH,EACRrF,SAAW,SAACC,EAAGC,GAAJ,OA5BI,SAACmF,GAC5BxG,EAAWwG,GAAY,GACvB1G,EAAa,CAAE0G,aA0BsBC,CAAqBpF,EAAMC,cAAcnC,gBAUlFoH,GAAiBlH,UAAY,CAC3BmH,SAAUlH,IAAUkC,OACpBhE,MAAO8B,IAAUkC,OACjB1D,SAAUwB,IAAUC,OACpBO,aAAcR,IAAUmC,KAAKX,WAC7Bd,WAAYV,IAAUmC,KAAKX,WAC3Bf,QAAST,IAAUoC,MAGN6E,U,4kBChDf,IAAMG,GAAwB,SAAC,GAUzB,IATO5B,EASP,EATJC,QAAWD,KACQvK,EAQf,EARJwL,MAASY,OAAUpM,GACnByK,EAOI,EAPJA,gBACA/I,EAMI,EANJA,cACA0B,EAKI,EALJA,eACAsH,EAII,EAJJA,WACAnI,EAGI,EAHJA,SACA2F,EAEI,EAFJA,WACAmE,EACI,EADJA,SACI,EAC8B3G,mBAAS,IADvC,WACInC,EADJ,KACc+I,EADd,OAEsC5G,mBAAS,IAF/C,WAEIJ,EAFJ,KAEkBiH,EAFlB,OAG4B7G,oBAAS,GAHrC,WAGIF,EAHJ,KAGaC,EAHb,KAKEF,EAAe,SAAA7C,GAAI,OAAI4J,EAAY,MAAK/I,EAAN,GAAmBb,KAE3DgG,qBAAU,WACRhH,EAAc1B,GAAIyC,MAAK,SAACC,GAAW4J,EAAY,MAAK/I,EAAN,GAAmBb,EAAKkC,QAAU2H,EAAgB,MAAK7J,EAAKkC,aACzG,IAEH,IAQM4H,EAAW,WAAM,MAEJ,aAAbH,EAA0B,CAAEpJ,MAAO,mCACjCC,YAAa,+DACb,CAAED,MAAO,sCACPC,YAAa,kEACrBuH,EAAgB,CACdzH,QAAS,UACTC,MARmB,EACbA,MAQNmI,aAAa,EACblI,YAVmB,EACNA,cAWfqH,EAAK,eAGP,OACE,kBAACkC,GAAA,MAAD,CACExJ,MAAqB,aAAboJ,EAA0B,gBAAkB,mBACpDK,MAAQ,MACRxB,QAAM,EACNC,QAAUqB,GACV,kBAAC/I,GAAA,MAAD,CAAOC,OAAO,MACZ,kBAACC,GAAA,UAAD,KACE,kBAAC2C,GAAA,UAAD,CAAWE,QAAQ,iCACf0B,GAAc,kBAAC,KAAD,OACbA,IAA4B,SAAbmE,EAChB,kBAAC,GAAD,CAAkB9I,SAAWA,EAAW+B,aAAeA,EACrDC,aAAeA,EACfC,QAAUA,EACVC,WAAaA,EACbxC,MAAK,+CAA2CV,EAASpC,QAC3D,kBAAC,GAAD,CAAsBoD,SAAWA,EAC/B+B,aAAeA,EACfC,aAAeA,EACfC,QAAUA,EACVC,WAAaA,EACbxC,MAAK,oDAAgDV,EAASpC,WAItE,kBAACwD,GAAA,UAAD,KACE,kBAACgJ,GAAA,YAAD,KACE,kBAACC,GAAA,MAAD,CAAOlJ,OAAO,MACZ,kBAACmJ,GAAA,UAAD,KACE,kBAAC5C,EAAA,OAAD,CACET,aAAa,OACbxJ,GAAG,0BACHgD,QAAQ,UACRhB,KAAK,SACLmI,QAzDD,WACb,GAAK3E,EAAL,CADmB,IAGXrF,EAAgCoD,EAAhCpD,KAAM+C,EAA0BK,EAA1BL,YAAa+I,EAAa1I,EAAb0I,SAE3B7I,EADqB,CAAEpD,KAAIG,OAAM+C,cAAa+I,aACjBxJ,MAAK,kBAAMiI,OAAcjI,MAAK,kBAAM8H,EAAK,oBA+C1D,SAOF,kBAACsC,GAAA,UAAD,KACE,kBAAC5C,EAAA,OAAD,CACEjK,GAAG,4BACHwJ,aAAW,SACXxG,QAAQ,YACRhB,KAAK,SACLmI,QAAUqC,GALZ,iBAehBL,GAAsBb,aAAe,CACnCpD,YAAY,EACZmE,SAAU,QAGZF,GAAsBrH,UAAY,CAChC0F,QAASzF,IAAUqC,MAAM,CACvBmD,KAAMxF,IAAUmC,KAAKX,aACpBA,WACHiF,MAAOzG,IAAUC,OACjByF,gBAAiB1F,IAAUmC,KAAKX,WAChC7E,cAAeqD,IAAUmC,KAAKX,WAC9BmE,WAAY3F,IAAUmC,KAAKX,WAC3BnD,eAAgB2B,IAAUmC,KAAKX,WAC/BhE,SAAUwC,IAAUC,OACpBhF,GAAI+E,IAAUkC,OACdoF,SAAUtH,IAAUkC,OACpBiB,WAAYnD,IAAUoC,MAGxB,IAYeyE,eAAWC,mBALF,SAAC,GAAD,QAAGiB,gBAAH,MAAwD,CAC9EvK,SADsB,EAAsBA,SAE5C2F,WAFsB,EAAgC6E,oBAP7B,SAACvE,GAAD,OAAcuD,aAAmB,CAC1DtB,mCACApI,cACAe,iBACA1B,iBACC8G,KAOuBqD,CAA6CM,K,qkBChIvE,IAAMa,GAA0B,SAAC,GAQ3B,IAPOzC,EAOP,EAPJC,QAAWD,KACQvK,EAMf,EANJwL,MAASY,OAAUpM,GACnByK,EAKI,EALJA,gBACArJ,EAII,EAJJA,4BACAgC,EAGI,EAHJA,eACAsH,EAEI,EAFJA,WACAxC,EACI,EADJA,WACI,EAC4BxC,mBAAS,IADrC,WACInC,EADJ,KACcqH,EADd,KAeJlC,qBAAU,WACRtH,EAA4BpB,GAAIyC,MAAK,SAACqD,GAAD,OAAY8E,GAT5BtJ,EASoDwE,EAAOlB,MAR1EqI,EAAe3L,EAAOC,WAAWxB,KAAI,SAACG,EAAOwE,GACjD,MAAO,CAAEG,MAAQvD,EAAOG,YAAYiD,GAAOpD,EAAOG,YAAYiD,GAAOxE,EAAQ0E,MAAO1E,MAEzE,MAAKoB,EAAR,CAAgBkC,SAAUyJ,MAJhB,IAAC3L,EACf2L,OASL,IAEH,IAMMT,EAAW,WACf/B,EAAgB,CACdzH,QAAS,UACTC,MAAO,iCACPmI,aAAa,EACblI,YAAa,8DAEfqH,EAAK,eAGP,OACE,kBAACkC,GAAA,MAAD,CACExJ,MAAK,iCACLyJ,MAAQ,MACRxB,QAAM,EACNC,QAAUqB,GACV,kBAAC/I,GAAA,MAAD,CAAOC,OAAO,MACZ,kBAACC,GAAA,UAAD,KACE,kBAAC2C,GAAA,UAAD,CAAWE,QAAQ,6BACf0B,GAAc,kBAAC,KAAD,OACbA,GACD,kBAACvE,GAAA,UAAD,CAAWK,UAAU,gBACnB,kBAAC,GAAD,CAAWA,UAAU,eAAeT,SAAWA,EAC7CgC,aA7CK,SAAA7C,GACnBkI,EAAU,MAAKrH,EAAN,GAAmBb,KA6CdO,MAAK,wBAAoBM,EAASpD,KAA7B,kBAIf,kBAACwD,GAAA,UAAD,KACE,kBAACgJ,GAAA,YAAD,KACE,kBAACC,GAAA,MAAD,CAAOlJ,OAAO,MACZ,kBAACmJ,GAAA,UAAD,KACE,kBAAC5C,EAAA,OAAD,CAAQT,aAAa,OACnBxG,QAAQ,UACRhB,KAAK,SACLkL,WAAahF,EACbiC,QA1CD,WAAM,IAEb7H,EAAe,CAAEf,WADFgC,EAAbC,SACoCzD,KAAI,SAAAG,GAAK,OAAIA,EAAM0E,UAC/DxB,EAAe,IAAEpD,MAAOsC,IAAgBG,MAAK,kBAAMiI,OAAcjI,MAAK,kBAAI8H,EAAK,mBAmCnE,SAMF,kBAACsC,GAAA,UAAD,KACE,kBAAC5C,EAAA,OAAD,CAAST,aAAW,SAClBxG,QAAQ,YACRhB,KAAK,SACLmI,QAAUqC,GAHZ,iBAahBQ,GAAwB1B,aAAe,CACrCX,WAAY,GACZzC,YAAY,GAGd8E,GAAwBlI,UAAY,CAClC0F,QAASzF,IAAUqC,MAAM,CACvBmD,KAAMxF,IAAUmC,KAAKX,aAEvBlE,YAAa0C,IAAUmC,KAAKX,WAC5BiF,MAAOzG,IAAUC,OACjByF,gBAAiB1F,IAAUmC,KAAKX,WAChCnF,4BAA6B2D,IAAUmC,KAAKX,WAC5Cc,gBAAiBtC,IAAUmC,KAAKX,WAChCmE,WAAY3F,IAAUmC,KAAKX,WAC3BnD,eAAgB2B,IAAUmC,KAAKX,WAC/BvG,GAAI+E,IAAUkC,OACdoF,SAAUtH,IAAUkC,OACpB0D,WAAY5F,IAAU0G,QAAQ1G,IAAUqC,MAAM,CAC5CxC,MAAOG,IAAU2G,UAAU,CAAE3G,IAAU4G,OAAQ5G,IAAUkC,SAAUV,WACnE1B,MAAOE,IAAUkC,OAAOV,cACtBA,WACJ2B,WAAYnD,IAAUoC,KACtBgG,KAAMpI,IAAUqC,MAAM,CACpBpH,GAAI+E,IAAUkC,OACd9G,KAAM4E,IAAUkC,UAIpB,IAYe2E,eAAWC,mBAJF,SAAC,GAAD,MAA8C,CACpE3D,WADsB,EAAG4E,gBAAmBC,oBARnB,SAACvE,GAAD,OAAcuD,aAAmB,CAC1DtB,mCACApI,cACAe,iBACAhC,8BACAiG,oBACCmB,KAMuBqD,CAA6CmB,K,oBClIjEI,GAAsB,SAAC,GAQvB,QAPJ5C,QAAW6C,EAOP,EAPOA,OAAQ9C,EAOf,EAPeA,KACI3I,EAMnB,EANJ4J,MAASY,OAAUpM,GACnBsN,EAKI,EALJA,IACA3L,EAII,EAJJA,eACAG,EAGI,EAHJA,gBACAyL,EAEI,EAFJA,UACAC,EACI,EADJA,qBAEA,KAAK5L,GAAgB0L,GAAsB,IAAfA,EAAIrH,QAC9B,OAAO,KAGT,IAIMuG,EAAW,kBAAMa,KAEvB,OACE,kBAACZ,GAAA,MAAD,CACEvB,QAAM,EACNuC,SAAO,EACPf,MAAQ,MACRzJ,MAAQ,GACRkI,QAAUqB,EACVkB,QAAU,CACR,kBAACzD,EAAA,OAAD,CAAQjK,GAAG,yBAAyB2E,IAAI,SAAS3B,QAAQ,YAAYhB,KAAK,SAASmI,QAAUqC,GAA7F,UAGA,kBAACvC,EAAA,OAAD,CAAQjK,GAAG,yBAAyB2E,IAAI,SAAS3B,QAAQ,UAAUhB,KAAK,SAASmI,QAjBtE,WAAQ,OAASvI,EAAaD,EAAeC,GAAcE,EAAgBwL,IAC3F7K,KAAK+K,EAAqB,KAAK/K,KAAK8K,KAAa9K,KAAK8H,EAAK,iBAgBtD,aAKF,kBAACoD,GAAA,SAAD,KACE,kBAAC7J,GAAA,YAAD,KACE,kBAACC,GAAA,KAAD,CAAME,UAAYC,gBAAa0J,IAC7B,kBAAC,KAAD,CACE5N,GAAG,wBACH6N,eAAc,0IAId7E,OAAS,CACP8E,WAAsBtJ,IAAf5C,EAA2B,EAAI0L,EAAIrH,eAU1DmH,GAAoBtI,UAAY,CAC9B0F,QAASzF,IAAUqC,MAAM,CACvBiG,OAAQtI,IAAUmC,KAAKX,WACvBgE,KAAMxF,IAAUmC,KAAKX,aACpBA,WACHiF,MAAOzG,IAAUC,OACjBlD,gBAAiBiD,IAAUmC,KAAKX,WAChC5E,eAAgBoD,IAAUmC,KAAKX,WAC/BgH,UAAWxI,IAAUmC,KAAKX,WAC1BiH,qBAAsBzI,IAAUmC,KAAKX,WACrC3E,WAAYmD,IAAUkC,OACtBqG,IAAKvI,IAAUgJ,OAGjB,IAKenC,eAAWC,kBAAQ,MALP,SAACrD,GAAD,OAAcuD,aAAmB,CAC1DpK,iBACAG,oBACC0G,KAEuBqD,CAAkCuB,K,WC5EtDY,GAAoB,SAAC,GAAmC,IAAjC9K,EAAiC,EAAjCA,YAAatD,EAAoB,EAApBA,UAAWI,EAAS,EAATA,GAAS,EACtB0F,mBAAS,IADa,WACpDuI,EADoD,KACxCC,EADwC,OAE1BxI,qBAF0B,WAEpDyI,EAFoD,KAE1CC,EAF0C,OAG1B1I,qBAH0B,WAGpD2I,EAHoD,KAG1CC,EAH0C,KAKtDC,EAAoBlG,uBAAY,qBAAGyE,gBAAmByB,qBAEtD5O,EAAkB,kBAAME,QAAQC,IAAIF,EAAUG,KAAI,SAACyO,GAAD,OZa5B,SAACxO,GAAD,OAC5BiB,cAAmBC,IAAnB,UAA0BkI,IAA1B,mBAAkDpJ,EAAlD,MACCyC,MAAK,SAACC,GAAD,OAAUA,EAAKvC,QADrB,OACiC,SAACwF,GAChC,GAAqB,MAAjBA,EAAMvF,OACR,MAAMuF,EAEN,OAAO3F,KYnBsDyO,CAAeD,QAShF,OAPA9F,qBAAU,WACHyF,IAAYI,EAAkBG,SAAS1O,IAAQqO,IAClDC,GAAY,GACZ3O,IAA2B8C,MAAK,SAACC,GAAWwL,EAAcxL,GAAO0L,GAAY,MAA7E,OAA6F,kBAAMA,GAAY,SAEhH,CAAEG,IAGH,kBAAC,WAAD,KACE,kBAACzK,GAAA,YAAD,KACE,kBAACC,GAAA,KAAD,CAAMC,UAAU,4BAA4BC,UAAYC,gBAAayK,OAArE,eACA,kBAAC5K,GAAA,KAAD,CAAMC,UAAU,4BAA4BC,UAAYC,gBAAaC,IAAOjB,IAE9E,kBAACY,GAAA,YAAD,KACE,kBAAC,WAAD,KACE,kBAACC,GAAA,KAAD,CAAMC,UAAU,4BAA4BC,UAAYC,gBAAayK,OAArE,UACER,EACA,kBAACpK,GAAA,KAAD,CAAMC,UAAU,4BACdC,UAAYC,gBAAaC,IACvB8J,EAAWW,KAAK,MAEpB,6BACE,kBAACC,GAAA,SAAD,CAAUhL,KAAOiL,gBAAaC,UAQ5Cf,GAAkBlJ,UAAY,CAC5B5B,YAAa6B,IAAUkC,OACvBrH,UAAWmF,IAAUgJ,MAAMxH,WAC3BvG,GAAI+E,IAAUkC,OAAOV,YAGRyH,UChDFgB,GAAa,SAACtM,GAAD,OACxBA,EAAKuM,QAAO,SAACC,EAAD,EAOPvK,GAPO,IAER3E,EAFQ,EAERA,GACAG,EAHQ,EAGRA,KACA+C,EAJQ,EAIRA,YACA+I,EALQ,EAKRA,SACA1K,EANQ,EAMRA,WANQ,qBAQP2N,GARO,CAQF,CACNlP,KACAkL,QAAQ,EACRiE,UAAU,EACVC,MAAO,CAAEjP,EAAM+C,EAAa+I,IAC3B,CACDoD,OAAc,EAAN1K,EACRyK,MAAO,CAAC,CAAEnM,MAAO,kBAAC,GAAD,CACfC,YAAcA,EACdtD,UAAY2B,EACZvB,GAAKA,WAGP,K,snBCLN,IAAMsP,GAAU,CAAC,CACfrM,MAAO,OACPsM,eAAgB,CAAEC,MAEpB,cACA,YAGMC,GAAkBvJ,cACtB,SAACxF,EAAQ8H,EAAUkH,GAA8C,IAA3B7M,EAA2B,uDAApBjC,IAC3C8O,GAAkB,GAClBlH,EAAS/H,EAAeC,EAAQmC,IAAOJ,MAAK,kBAC1CiN,GAAkB,QAGtB,KAEIC,GAAe,CACnBxG,YAAa,GACb+B,QAAQ,EACRhD,YAAY,EACZ0H,aAAa,GAGTC,GAAqB,SAAC/D,EAAOgE,GACjC,OAAQA,EAAO9N,MACb,IAAK,cACH,aAAY8J,EAAZ,CAAmB5D,WAAY4H,EAAO5N,UACxC,IAAK,iBACH,aAAY4J,EAAZ,CAAmB3C,YAAa2G,EAAO5N,UACzC,IAAK,mBACH,aAAY4J,EAAZ,CAAmB8D,YAAaE,EAAO5N,UACzC,QACE,OAAO4J,IAIPiE,GAAY,WAAM,MAC8BrK,mBAAS,IADvC,WACd3D,EADc,KACKyL,EADL,OAE6CwC,qBACjEH,GACAF,IAJoB,kBAEbxG,EAFa,EAEbA,YAAajB,EAFA,EAEAA,WAAY0H,EAFZ,EAEYA,YAAeK,EAF3B,OAMC5H,uBACrB,qBAAGyE,gBAAmBzJ,aADhBX,EANc,EAMdA,KAAMG,EANQ,EAMRA,KAIR2F,EAAWC,wBACX+B,EAAU0F,cAEhBxH,qBAAU,WACRF,EACE/H,EAAe0I,EAAavI,MAC5B6B,MAAK,kBAAMwN,EAAc,CAAEjO,KAAM,cAAeE,SAAS,OAC3DiO,iBACC,IAEH,IAAMC,EAAqB,SAACxL,GAC1BqL,EAAc,CAAEjO,KAAM,iBAAkBE,QAAS0C,IACjD6K,GACE7K,EACA4D,GACA,SAACoH,GAAD,OACEK,EAAc,CAAEjO,KAAM,mBAAoBE,QAAS0N,MAJxC,MAMR/M,EANQ,CAOX9B,OAAQ,MAQRsP,EAAmB,SAACC,EAAW3P,GACnCsP,EAAc,CAAEjO,KAAM,cAAeE,SAAS,IAC9CsG,EAAS/H,EAAe0I,EAAaxI,IACpC8B,MAAK,kBAAMwN,EAAc,CAAEjO,KAAM,cAAeE,SAAS,OAD1D,OAEO,kBAAM+N,EAAc,CAAEjO,KAAM,cAAeE,SAAS,QAqDvDqO,EAAuBxO,EAAkBkE,OAAS,EAgCxD,OACE,kBAAC,WAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAiBhD,MAAM,aACvB,kBAAC,KAAD,CAASuN,SAhGE,CAAC,CAAEC,SAAU,EAAGxN,MAAO,gBAAiB9C,KAAM,aAC7D,CAAEsQ,SAAU,EAAGxN,MAAO,qBAAsB9C,KAAM,kBAiGhD,kBAAC,KAAD,CACEuC,KAAOA,EACPgO,cAAe,EACf1B,WAAaA,GACbM,QAAUA,GACV/B,UAAY8C,EACZM,OA9FS,kBAAM,kBAAC,WAAD,KACnB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,0BAA0BC,OAAS,SAAAC,GAAK,OAAI,kBAAC,GAAD,OAAkBA,EAAlB,CAC5DrG,WAAa2F,QACf,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,2BAA2BC,OAAS,SAAAC,GAAK,OAAI,kBAAC,GAAD,KAAkB1E,SAAS,QAAY0E,EAAvC,CAC7DrG,WAAa2F,QACf,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,6BAA6BC,OAAS,SAAAC,GAAK,OAAI,kBAAC,GAAD,KAAoB1E,SAAS,UAAc0E,EAA3C,CAC/DrG,WAAa2F,QACf,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,+BAA+BC,OAAS,SAAAC,GAAK,OAAI,kBAAC,GAAD,KAAkB1E,SAAS,YAAgB0E,EAA3C,CACjErG,WAAa2F,QACf,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,wBAChBC,OAAS,SAAAC,GAAK,OAAI,kBAAC,GAAD,OAAqBA,EAArB,CAChBxD,UAAY8C,EACZ7C,qBAAuBA,QAC3B,kBAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,oBAChBC,OAAS,SAAAC,GAAK,OAAI,kBAAC,GAAD,OAAqBA,EAArB,CAChBzD,IAAMvL,EACNwL,UAAY8C,EACZ7C,qBAAuBA,UA8EvBwD,eA3EiB,SAAC1O,EAAD,YAAiB2O,SAA0B,GAAM,EACtE,KACE,CACA,CACEhO,MAAO,YACPkH,QAAS,SAAC+G,EAAQC,EAAQ5O,GAAjB,OACPiI,EAAQD,KAAR,+BAAqChI,EAASvC,OAGlD,CACEiD,MAAO,cACPkH,QAAS,SAAC+G,EAAQC,EAAQ5O,GAAjB,OACPiI,EAAQD,KAAR,iCAAuChI,EAASvC,OAEpD,CACEiD,MAAO,gBACPkH,QAAS,SAAC+G,EAAQC,EAAQ5O,GAAjB,OACPiI,EAAQD,KAAR,mCAAyChI,EAASvC,OAEtD,CACEiD,MAAO,SACP8G,MAAO,CAAEqH,MAAO,uCAChBjH,QAAS,SAAC+G,EAAQC,EAAQ5O,GAAjB,OACPiI,EAAQD,KAAR,4BAAkChI,EAASvC,SAqD7CqR,YAAY,qBACZC,cAAc,mBACd3Q,WAAakC,EACb0O,gBApDkB,SAACC,GAAD,OACtBhE,EAAqBgE,EAAiBzR,KAAI,SAAAqF,GAAE,OAAIA,EAAGpF,QAoD/CyR,eAhDiB,kBAAM,kBAACC,EAAA,aAAD,CAAc1N,UAAS,0BAClD,kBAAC2N,EAAA,YAAD,KACE,kBAAC,OAAD,CAAM3R,GAAG,oBAAoB4R,GAAG,2BAC9B,kBAAC3H,EAAA,OAAD,CACEjH,QAAQ,UACRwG,aAAW,2BAFb,6BAQJ,kBAACmI,EAAA,YAAD,KACE,kBAAC,OAAD,CAAM3R,GAAG,4BAA4BgE,UAAYuM,EAAuB,GAAK,gBAAkBqB,GAAK,CAAEC,SAAU,sBAC9G,kBAAC5H,EAAA,OAAD,CACEjH,QAAQ,OACRkK,YAAcqD,EACdxG,MAAQ,CAAEqH,MAAOb,EAAuB,sCAAwC,yCAChF/G,aAAW,2BAJb,cAoCAL,YAAcA,EACd2I,eAAiB1B,EACjB2B,UAAY7J,GAAc0H,EAC1BoC,WA3Ba,SAAChS,EAAIiS,EAASC,GAC/B1J,EZhG0B,SAACxI,GAAD,MAAS,CACrCgC,KAAMC,IACNC,QAASlC,GY8FEmS,CAAenS,IACxBiS,GAAQ,SAACG,GAAD,OAAUF,EAAQE,EAAMpS,OA0B5BqS,iBAAmB,kBACjB,kBAAC,KAAD,CACEpP,MAAwB,KAAhBkG,EAAqB,wBAA0B,mBACvDmJ,KAAOC,IACPC,cAAgB,iBACE,KAAhBrJ,EACE,kBAACc,EAAA,OAAD,CAAQE,QAAU,kBAAMiG,EAAmB,KAAMpN,QAAQ,QAAzD,qBAGE,MAENE,YACkB,KAAhBiG,EACI,yBACA,wGASlB4G,GAAUjL,UAAY,CACpB0F,QAASzF,IAAUqC,MAAM,CACvBmD,KAAMxF,IAAUmC,KAAKX,aACpBA,WACHlD,UAAW0B,IAAUgJ,MACrBgE,UAAWhN,IAAUoC,KACrBpF,kBAAmBgD,IAAUgJ,OAG/BgC,GAAUzE,aAAe,CACvBjI,UAAW,GACXsH,WAAY,GACZoH,WAAW,GAGEhC,c,iCCrPf,aAEe,aACb0C,GADa,IAEbC,EAFa,uDAEE,IACf3H,EAHa,uDAGH,CAAE4H,kBAAkB,GAHjB,OAIVC,YAAuBH,EAAeC,EAAc3H,K,iKCDnD8H,EAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OAAqBA,EAE7C,kBAACC,EAAA,WAAD,KACIC,OAAOhK,OAAO8J,GAAa/S,KAAI,SAAAoN,GAAI,OACnC,kBAAC8F,EAAA,eAAD,CAAgBtO,IAAMwI,EAAKlK,MAAQiQ,SAAW/F,EAAK+F,UAC9C/F,EAAKyE,IAAM,kBAAC,UAAD,CAAShB,OAAK,EAACgB,GAAKzE,EAAKyE,IAAOzE,EAAKlK,QAAsBkK,EAAKlK,WAIlF,MAEN4P,EAAoB/N,UAAY,CAC9BgO,YAAa/N,IAAU0G,QAAQ1G,IAAUqC,MAAM,CAC7CnE,MAAO8B,IAAUkC,OAAOV,WACxB2M,SAAUnO,IAAUoC,KACpByK,GAAI7M,IAAUkC,WAIH4L,Q,OCxBf,oEAQO,IAAMM,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAWN,EAAd,EAAcA,YAAaO,EAA3B,EAA2BA,cAA3B,OACxB,yBAAKrP,UAAS,2CAAuCqP,EAAgB,aAAe,GAAtE,iBACVP,GAAgB,kBAACQ,EAAA,MAAD,CAAOtP,UAAU,cACjC,kBAAC,EAAD,CAAqB8O,YAAcA,KAGnCM,IAIND,EAAWrO,UAAY,CACrBsO,SAAUrO,IAAU2G,UAAU,CAC5B3G,IAAU0G,QAAQ1G,IAAUwO,MAC5BxO,IAAUwO,OACThN,WACHuM,YAAa/N,IAAUgJ,MACvBsF,cAAetO,IAAUoC,MAG3BgM,EAAW7H,aAAe,CACxB+H,eAAe,GAGV,IAAMG,EAAkB,SAAC,GAAD,IAAGvQ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAakQ,EAAvB,EAAuBA,SAAvB,OAC7B,kBAAC,WAAD,KACE,kBAACE,EAAA,MAAD,KACE,kBAACG,EAAA,UAAD,KACE,kBAAC3P,EAAA,YAAD,CAAaE,UAAU,cACnB,kBAACD,EAAA,KAAD,CAAME,UAAYC,eAAa0J,IAAO3K,GAAS,kBAAC,IAAD,QAEjDC,GACI,kBAACY,EAAA,YAAD,CAAaE,UAAU,yBACrB,kBAACD,EAAA,KAAD,CAAME,UAAYC,eAAaK,GAAMrB,KAG7CkQ,KAKRI,EAAgB1O,UAAY,CAC1B7B,MAAO8B,IAAUkC,OACjB/D,YAAa6B,IAAUkC,OACvBmM,SAAUrO,IAAU2G,UAAU,CAC5B3G,IAAUwO,KACVxO,IAAU0G,QAAQ1G,IAAUwO,U,uDCrDhC,8DAKMG,EAAU,SAAC,GAA4D,IAA/CnJ,EAA+C,EAA1DC,QAAWD,KAAoBsH,EAA2B,EAAvC8B,SAAY9B,SAAYrB,EAAe,EAAfA,SACtDoD,EAAYpD,EAASrL,MAAK,gBAAGhF,EAAH,EAAGA,KAAH,OAAc0R,EAASnD,SAASvO,MAGhE,OACE,kBAAC,OAAD,CAAM6D,UAAU,aAAa6P,UAAYD,EAAYA,EAAUnD,SAAW,EAAIqD,SAHzD,SAAC5C,EAAQ6C,GAAT,OAAsBxJ,EAAKiG,EAASuD,GAAU5T,QAI/DqQ,EAASzQ,KAAI,SAACoN,GAAD,OAAU,kBAAC,MAAD,CAAKlK,MAAQkK,EAAKlK,MAAQ0B,IAAMwI,EAAKsD,SAAWA,SAAWtD,EAAKsD,SAAWtQ,KAAOgN,EAAKhN,YAKtHuT,EAAQ5O,UAAY,CAClB6O,SAAU5O,IAAUqC,MAAM,CACxByK,SAAU9M,IAAUkC,OAAOV,aAE7BiE,QAASzF,IAAUqC,MAAM,CACvBmD,KAAMxF,IAAUmC,KAAKX,aAEvBiK,SAAUzL,IAAUgJ,MAAMxH,YAGbqF,gBAAW8H,I,iCC1B1B,2GAeMM,GAfN,MAewB,SAAC,GAAD,IACtB/Q,EADsB,EACtBA,MACAqP,EAFsB,EAEtBA,KACApP,EAHsB,EAGtBA,YACAsP,EAJsB,EAItBA,cACAyB,EALsB,EAKtBA,kBALsB,OAOtB,kBAAC,aAAD,CAAYC,UAAQ,EAClB1K,aAAW,cAEX,kBAAC,aAAD,CAAYxF,UAAU,6BACpB,kBAAC,iBAAD,CAAgBmQ,KAAO7B,IACvB,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMrO,UAAYC,eAAa0J,IAAO3K,IAExC,kBAAC,iBAAD,KACIC,EACA+Q,KAEJ,kBAAC,6BAAD,KACIzB,GAAiB,kBAACA,EAAD,WAM3BwB,EAAgB1I,aAAe,CAC7B2I,kBAAmB,kBAAM,OAG3BD,EAAgBlP,UAAY,CAC1B7B,MAAO8B,IAAUkC,OAAOV,WACxB+L,KAAMvN,IAAUqP,IAAI7N,WACpBrD,YAAa6B,IAAUkC,OAAOV,WAC9BiM,cAAezN,IAAUqP,IACzBH,kBAAmBlP,IAAUmC,MAGhB8M,MASRjP,IAAUkC,OAAOV,WACfxB,IAAUkC,OAAOV,Y,mOC1DpB8N,EAAoB,SAAC,GAAD,IACxBC,EADwB,EACxBA,YACAxC,EAFwB,EAExBA,eACAyC,EAHwB,EAGxBA,YACAhL,EAJwB,EAIxBA,YAJwB,OAMxB,kBAACoI,EAAA,YAAD,KACE,yBAAK3N,UAAU,8BACb,kBAAC0C,EAAA,UAAD,CACE6N,YAAcA,EACd3P,MAAQ0P,EACRtS,KAAK,OACL4E,SAAWkL,EACXtI,aAAa+K,IAEf,0BAAMvQ,UAAU,0BACXuF,GAAe+K,GAChB,kBAAC,IAAD,CACEtQ,UAAU,eACV0I,MAAM,KACN8H,OAAO,KACPrK,QAAU,kBAAM2H,EAAe,QAE7B,kBAAC,IAAD,UAMduC,EAAkBvP,UAAY,CAC5BgN,eAAgB/M,IAAUmC,KAAKX,WAC/BgO,YAAaxP,IAAUkC,OACvBqN,YAAavP,IAAUkC,OACvBsC,YAAaxE,IAAUoC,MAGzBkN,EAAkB/I,aAAe,CAC/BgJ,YAAa,GACb/K,aAAa,GAGA8K,Q,qECtCTI,EAAkB,SAAC,GAOnB,QANJ5R,KAAQ/B,EAMJ,EANIA,MAAOgN,EAMX,EANWA,MAAO/M,EAMlB,EANkBA,OACtBqB,EAKI,EALJA,SACAsS,EAII,EAJJA,WACA1Q,EAGI,EAHJA,UACA2Q,EAEI,EAFJA,UACG5D,EACC,gEAqBJ,OACE,yBAAK/M,UAAYA,GACf,kBAAC4Q,EAAA,WAAD,KACEC,QAAU/T,GAAS,GACnBgU,UAAYhH,GAAS,EACrBiH,gBAzBwB,SAAC7D,EAAQpQ,GAAT,OAC5B4T,EAAWtS,EAAU,CACnBrB,SACAD,WAuBEkU,KAAOC,YAAenU,EAAOC,GAC7BmU,UArBgB,SAAChE,EAAQvF,EAAQwJ,GACrC,IAAMpK,EAAU,CACdhK,OAAQqU,YAAWzJ,EAAQ7K,GAC3BA,SAGIuU,EAAU,kBAAMX,EAAWtS,EAAU2I,IAC3C,OAAIoK,EACKG,YAAgBD,EAAS,IAAzBC,GAGFD,KAWHE,UAAU,OACVZ,UAAYA,GACP5D,MAMb0D,EAAgB3P,UAAY,CAC1BjC,KAAMkC,IAAUqC,MAAM,CACpB0G,MAAO/I,IAAU4G,OACjB7K,MAAOiE,IAAU4G,OAAOpF,WACxBxF,OAAQgE,IAAU4G,OAAOpF,aAE3BmO,WAAY3P,IAAUmC,KAAKX,WAC3BnE,SAAU2C,IAAUqP,IACpBpQ,UAAWe,IAAUkC,OACrB0N,UAAW5P,IAAUoC,MAGvBsN,EAAgBnJ,aAAe,CAC7BzI,KAAM,CACJiL,MAAO,EACPhN,MAAO,GACPC,OAAQ,GAEViD,UAAW,GACX2Q,WAAW,GAGEF,QCvETe,EAA4B,SAAC,GAAD,IAAGpC,EAAH,EAAGA,SAAH,OAChC,yBAAKpP,UAAU,0EACXoP,IAINoC,EAA0B1Q,UAAY,CACpCsO,SAAUrO,IAAU2G,UAAU,CAC5B3G,IAAUwO,KACVxO,IAAU0G,QAAQ1G,IAAUwO,SAIjBiC,Q,mmBCER,IAAMC,EAAmB,SAAC,GAkB3B,IAjBJ/E,EAiBI,EAjBJA,aACA1B,EAgBI,EAhBJA,WACAM,EAeI,EAfJA,QACA/B,EAcI,EAdJA,UACAkE,EAaI,EAbJA,eACA/O,EAYI,EAZJA,KACAsO,EAWI,EAXJA,eACAL,EAUI,EAVJA,OACAU,EASI,EATJA,YACAC,EAQI,EARJA,cACA3Q,EAOI,EAPJA,WACA4Q,EAMI,EANJA,gBACApI,EAKI,EALJA,YACA2I,EAII,EAJJA,eACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,WACAK,EACI,EADJA,iBACI,EACsB3M,mBAAS,IAD/B,WACI0M,EADJ,KACUH,EADV,KAGJvJ,qBAAU,WACRuJ,EAAQjD,EAAWtM,MAClB,CAAEA,IAEL,IAAMwP,EAAU,SAACxP,EAAM1C,GAAP,OAAc0C,EAAK3C,KAAI,SAAA2V,GAAG,OAAIA,EAAI1V,KAAOA,EAAX,KAEvC0V,EAFuC,CAG1CxK,QAASwK,EAAIxK,SAH6B,KAKvCwK,OAGDC,EAAc,SAACjT,EAAM1C,GACzB,IAAM4V,EAAUlT,EAAK3C,KAAI,SAAA2V,GAAG,OAAIA,EAAI1V,KAAOA,EAAX,KAEzB0V,EAFyB,CAG5BvG,UAAWuG,EAAIvG,WAHa,KAKzBuG,MAGDG,EAAeD,EAAQlV,QAAO,SAAAyM,GAAI,OAAKA,EAAKnN,IAAMmN,EAAKgC,YAE7D,OADAoC,EAAgBsE,GACTD,GAwCT,OACE,kBAAC,UAAD,CAAS5T,KAAK,UAAU8T,YAAA,cAAmBzE,GAAgBrR,GAAE,cAAUqR,IACnEV,IA/BgB,SAACoB,GACrB,OAAQ,kBAACgE,EAAA,QAAD,CAAS/R,UAAS,2DACxB,kBAACsP,EAAA,MAAD,CAAOvJ,MAAQ,CAAEiM,KAAM,IACrB,kBAACvC,EAAA,UAAD,KACE,kBAACsC,EAAA,QAAD,KACE,kBAAC,EAAD,CAAejE,eAAiBA,EAAiBwC,YAAcnL,EAAcI,aAAc,EACzFgL,YAAW,oBAAgBjD,KAC3BG,MAIN,kBAACgC,EAAA,UAAD,KACE,kBAACsC,EAAA,QAAD,KACE,kBAACrE,EAAA,aAAD,KACE,kBAACC,EAAA,YAAD,KACE,kBAAC,EAAD,CACE+C,WAAanH,EACbL,WAAa6E,EACblP,KAAOlC,EACPgU,WAAS,UAanBsB,CAAclE,GACdA,GAAa,kBAAC,IAAD,MACZA,GAA6B,IAAhBK,EAAKnM,OAGnB,kBAAC,WAAD,MACK8L,GACH,kBAACmE,EAAA,EAAD,CACE1M,aAAA,UAAgB6H,EAAhB,UACAW,WAjDiB,SAACd,EAAQiF,EAAQC,EAAjB,OAA4BpW,EAA5B,EAA4BA,GAA5B,OAAqCgS,EAC9DA,EAAWhS,EAAIiS,EAASC,GACxBD,GAAQ,SAACG,GAAD,OAAUF,EAAQE,EAAMpS,OAgDxBoS,KAAOA,EACPhD,MAAQE,EACRwE,SAAWpD,GAhDH,SAACQ,EAAQ/B,EAAUkH,GAAnB,6DAAmC,GAAPrW,EAA5B,EAA4BA,GAA5B,OACdiS,GADmE,IAAXoE,EAChDjE,EAAKrS,KAAI,SAAA2V,GAAG,YAAUA,EAAV,CAAevG,gBAC3B,SAACiD,GAAD,OAAUuD,EAAYvD,EAAMpS,MA+C9BgR,eAAiBA,EACjBhN,UAAU,aAEV,kBAAC,IAAD,MACA,kBAAC,IAAD,OAEArD,EAAWmN,MAAQ,GACnB,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEwI,cAAc,KACdzT,KAAOlC,EACP+T,WAAanH,MArBrB8E,MA8BRoD,EAAiB3Q,UAAY,CAC3B4L,aAAc5L,IAAUqC,KACxB6H,WAAYlK,IAAUoC,KAAKX,WAC3B+I,QAASxK,IAAUiJ,MAAMxH,WACzBkL,eAAgB3M,IAAUoC,KAC1BqG,UAAWzI,IAAUoC,KAAKX,WAC1B7D,KAAMoC,IAAUiJ,MAChBpN,WAAYmE,IAAUsC,MAAM,CAC1BtG,MAAOgE,IAAU6G,OACjB5K,OAAQ+D,IAAU6G,OAClBmC,MAAOhJ,IAAU6G,SAEnB0F,YAAavM,IAAUmC,OACvBqK,cAAexM,IAAUmC,OACzB0J,OAAQ7L,IAAUoC,KAClB8J,eAAgBlM,IAAUoC,KAC1BqK,gBAAiBzM,IAAUoC,KAC3BiC,YAAarE,IAAUmC,OACvB6K,eAAgBhN,IAAUoC,KAC1B6K,UAAWjN,IAAUqC,KACrB6K,WAAYlN,IAAUoC,KACtBmL,iBAAkBvN,IAAUoC,MAG9BuO,EAAiBnK,aAAe,CAC9BiL,SAAU,GACVxE,WAAW,EACXpR,WAAYC,IACZ6Q,eAAgB,kBAAM,MACtBf,aAAc,KACdC,OAAQ,kBAAM,MACd0B,iBAAkB,kBAAM","file":"js/workflows.js","sourcesContent":["import { getRbacGroupApi, getAxiosInstance } from '../shared/user-login';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst api = getRbacGroupApi();\n\nexport async function getRbacGroups() {\n  return await api.listGroups();\n}\n\nexport async function fetchGroupNames(groupRefs) {\n  if (groupRefs) {\n    return Promise.all(groupRefs.map(async id => {\n      try {\n        const group = await api.getGroup(id);\n        return group.name;\n      } catch (error) {\n        if (error.status !== 404) {\n          throw error;\n        }\n        else {\n          return id;\n        }\n      }\n    }));\n  }\n}\n\nexport const fetchGroupName = (id) =>\n  getAxiosInstance().get(`${RBAC_API_BASE}/groups/${id}/`)\n  .then((data) => data.name).catch((error) => {\n    if (error.status !== 404) {\n      throw error;\n    } else {\n      return id;\n    }\n  });\n\nexport const fetchFilterGroups = (filterValue) =>\n  getAxiosInstance().get(`${RBAC_API_BASE}/groups/${filterValue.length > 0\n    ? `?name=${filterValue}`\n    : ''}`)\n  .then(({ data }) => data.map(({ uuid, name }) => ({ label: name, value: uuid })));\n\n","import { getWorkflowApi, getTemplateApi, getAxiosInstance } from '../shared/user-login';\nimport { fetchGroupNames } from '../group/group-helper';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\n\nconst workflowApi = getWorkflowApi();\nconst templateApi = getTemplateApi();\n\nexport function fetchWorkflows(filter = '', pagination = defaultSettings) {\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains_i]=${filter}`;\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows/?${filterQuery}${paginationQuery}`\n  );\n}\n\nexport async function fetchWorkflowWithGroupNames(id) {\n  const wfData = await workflowApi.showWorkflow(id);\n  const  wfWithGroups = await fetchGroupNames(wfData.group_refs);\n  return { ...wfData, group_names: wfWithGroups };\n}\n\nexport async function fetchWorkflow(id) {\n  return await workflowApi.showWorkflow(id);\n}\n\nexport function fetchWorkflowByName(name) {\n  return fetchWorkflows(name);\n}\n\nexport function updateWorkflow(data) {\n  return workflowApi.updateWorkflow(data.id, data);\n}\n\nexport  function addWorkflow(workflow) {\n  return templateApi.listTemplates().then(({ data }) => {\n    // workaround for v1. Need to pass template ID with the workflow. Assigning to first template\n    if (!data[0]) {\n      throw new Error('No template exists');\n    }\n\n    return data[0].id;\n\n  }).then(id => workflowApi.addWorkflowToTemplate(id, workflow, {}));\n}\n\nexport async function removeWorkflow(workflowId) {\n  return await workflowApi.destroyWorkflow(workflowId);\n}\n\nexport async function removeWorkflows(selectedWorkflows) {\n  return Promise.all(selectedWorkflows.map(async workflowId => await workflowApi.destroyWorkflow(workflowId)));\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as WorkflowHelper from '../../helpers/workflow/workflow-helper';\n\nexport const fetchWorkflows = (filter, pagination) => ({\n  type: ActionTypes.FETCH_WORKFLOWS,\n  payload: WorkflowHelper.fetchWorkflows(filter, pagination)\n});\n\nexport const fetchWorkflow = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW,\n  payload: WorkflowHelper.fetchWorkflow(apiProps)\n});\n\nexport const fetchWorkflowWithGroupNames = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW_WITH_GROUP_NAMES,\n  payload: WorkflowHelper.fetchWorkflowWithGroupNames(apiProps)\n});\n\nexport const addWorkflow = (workflowData) => ({\n  type: ActionTypes.ADD_WORKFLOW,\n  payload: WorkflowHelper.addWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding approval process',\n        description: 'The approval process was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding approval process',\n        description: 'The approval process was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateWorkflow = (workflowData) => ({\n  type: ActionTypes.UPDATE_WORKFLOW,\n  payload: WorkflowHelper.updateWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating approval process',\n        description: 'The approval process was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating approval process',\n        description: 'The approval process was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflow = (workflow) => ({\n  type: ActionTypes.REMOVE_WORKFLOW,\n  payload: WorkflowHelper.removeWorkflow(workflow),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval process',\n        description: 'The approval process was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflows = (workflows) => ({\n  type: ActionTypes.REMOVE_WORKFLOWS,\n  payload: WorkflowHelper.removeWorkflows(workflows),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval processes',\n        description: 'The selected approval processes were removed successfully.'\n      }\n    }\n  }\n});\n\nexport const expandWorkflow = (id) => ({\n  type: ActionTypes.EXPAND_WORKFLOW,\n  payload: id\n});\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst SummaryContent = ({ formData }) => {\n  const { name, description, wfGroups } = formData ? formData : { name: '', description: '', wfGroups: []};\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                    Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              { (wfGroups !== undefined) && wfGroups.map((stage, idx)  =>\n              { return (<Fragment key={ `Group-${idx}` }>\n                <Grid gutter=\"md\">\n                  <GridItem span={ 2 }>\n                    <Text key={ stage.value } className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                      { `Group ${idx + 1}` }\n                    </Text>\n                  </GridItem>\n                  <GridItem span={ 10 }>\n                    <Text key={ stage.label } className=\"data-table-detail content\" component={ TextVariants.p }>\n                      { `${wfGroups[idx].label}` }\n                    </Text>\n                  </GridItem>\n                </Grid>\n              </Fragment>); })\n              }\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  formData: PropTypes.object\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchWorkflowByName } from '../../../helpers/workflow/workflow-helper';\n\nconst validateName = (name) => fetchWorkflowByName(name)\n.then(({ data }) => {\n  return data.find(wf => name === wf.name)\n    ? 'Name has already been taken'\n    : undefined;\n});\n\nconst debouncedValidator = (data, validateCallback) => asyncDebounce(validateName(data).then((result) => validateCallback(result)));\n\nconst WorkflowInfoForm = ({ formData, initialValue, handleChange, isValid, setIsValid, title = undefined }) => {\n  const { name, description } = formData;\n  const [ error, setError ] = useState(undefined);\n\n  const setResult = (result) => {\n    setError(result);\n    setIsValid(!result);\n  };\n\n  const handleNameChange = (name) => {\n    if (!name || name.length < 1) {\n      setError('Enter a name for the approval process ');\n      setIsValid(false);\n    }\n    else if (!initialValue || initialValue.name !== name) {\n      debouncedValidator(name, setResult);\n    }\n    else {\n      setError(undefined);\n      setIsValid(true);\n    }\n    console.log('DEBUG - name, isValid, error', name, isValid, error);\n    handleChange({ name });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Approval process name\"\n              isRequired\n              fieldId=\"workflow-name\"\n              isValid={ formData.name !== undefined && formData.name.length > 0 && isValid }\n              helperTextInvalid={ error || 'Enter a name for the approval process' }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"workflow-name\"\n                name=\"workflow-name\"\n                aria-describedby=\"workflow-name\"\n                value={ name }\n                isValid={ isValid }\n                onChange={ (_, event) => { setError(undefined); handleNameChange(event.currentTarget.value); } }\n              />\n            </FormGroup>\n            <FormGroup label=\"Description\" fieldId=\"workflow-description\">\n              <TextArea\n                type=\"text\"\n                id=\"workflow-description\"\n                name=\"workflow-description\"\n                value={ description }\n                onChange={ (_, event) => handleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowInfoForm.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  isValid: PropTypes.bool,\n  setIsValid: PropTypes.func.isRequired,\n  initialValue: PropTypes.shape({\n    name: PropTypes.string })\n};\n\nexport default WorkflowInfoForm;\n","import { FETCH_RBAC_GROUPS } from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchRbacGroups = () => ({\n  type: FETCH_RBAC_GROUPS,\n  payload: GroupHelper.getRbacGroups().then(({ data }) => [\n    ...data.map(({ uuid, name }) => ({ value: uuid, label: name }))\n  ])\n});\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { PlusIcon, TrashIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport AsyncSelect from 'react-select/async';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchFilterGroups } from '../../../helpers/group/group-helper';\nimport { WorkflowInfoFormLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button,\n  FormGroup,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Title\n} from '@patternfly/react-core';\nimport { fetchRbacGroups } from '../../../redux/actions/group-actions';\n\nconst SetStages = ({ formData, handleChange, title }) => {\n  const [ isExpanded, setExpanded ] = useState(false);\n  const [ stageValues, setStageValues ] = useState([]);\n  const [ stageIndex, setStageIndex ] = useState(1);\n  const [ inputValue, setInputValue ] = useState([]);\n  const [ isFetching, setIsFetching ] = useState([]);\n\n  const defaultOptions = useSelector(({ groupReducer: { groups }}) => groups || []);\n\n  const onInputChange = (newValue) => {\n    const value = newValue.replace(/\\W/g, '');\n    setInputValue(value);\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      fetchRbacGroups()).then(() => setIsFetching(false));\n  }, []);\n\n  useEffect(() => {\n    setStageValues(formData.wfGroups ? formData.wfGroups : []);\n    setStageIndex(formData.wfGroups ? formData.wfGroups.length : 1);\n  }, [ formData.wfGroups ]);\n\n  const onToggle = (isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  const onStageChange = (value, index) => {\n    const values = stageValues;\n    values[index] = value;\n    setStageValues(values);\n    handleChange({ wfGroups: values });\n  };\n\n  const addStage = () => {\n    setStageValues([ ...stageValues, undefined ]);\n    setStageIndex(stageIndex + 1);\n  };\n\n  const removeStage = (idx) => {\n    const i = parseInt(idx.target.id);\n    const values = [ ...stageValues.filter((_, j) => i !== j) ];\n    setStageValues(values);\n    setStageIndex(stageIndex - 1);\n    handleChange({ wfGroups: values });\n  };\n\n  const loadGroupOptions = (inputValue) => fetchFilterGroups(inputValue);\n\n  const createStageInput = (idx) => (\n    <StackItem key={ `Stack_${idx + 1}` }>\n      <FormGroup\n        label={ `Group ${idx + 1}` }\n        fieldId={ `${idx + 1}_stage_label` }\n      >\n        <Grid gutter=\"md\">\n          <GridItem span={ 8 }>\n            <AsyncSelect\n              cacheOptions\n              isClearable\n              label={ `${idx + 1} Group` }\n              aria-label={ `${idx + 1} Group` }\n              onToggle={ onToggle }\n              key={ `stage-${idx + 1}` }\n              onChange={ (e) => onStageChange(e, idx) }\n              value={ stageValues[idx] }\n              inpuValue={ inputValue }\n              isexpanded={ isExpanded }\n              loadOptions={ asyncDebounce(loadGroupOptions) }\n              defaultOptions={ defaultOptions }\n              onInputChange={ (e) => onInputChange(e, idx) }\n            />\n          </GridItem>\n          <GridItem span={ 1 } style={ { display: 'flex' } }>\n            { idx > 0 && <Button variant=\"link\" isInline key={ idx } id={ idx } onClick={ removeStage }>\n              <TrashIcon/> { 'Remove' }\n            </Button> }\n          </GridItem>\n        </Grid>\n      </FormGroup>\n    </StackItem>\n  );\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\">{ title || 'Set groups' }</Title>\n        </StackItem>\n        <StackItem>\n          { isFetching && <WorkflowInfoFormLoader/> }\n          { !isFetching &&\n          <Stack gutter=\"sm\">\n            { stageValues.map((_stage, idx) => createStageInput(idx)) }\n            <StackItem style={ { borderTop: 10 } }>\n              <Button id=\"add-workflow-stage\" variant=\"link\" isInline onClick={ addStage }>\n                <PlusIcon/> { `Add ${ stageValues.length > 0 ? 'another' : 'a'} group` }\n              </Button>\n            </StackItem>\n          </Stack> }\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetStages.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func\n};\n\nexport default SetStages;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, fetchWorkflowWithGroupNames } from '../../../redux/actions/workflow-actions';\nimport SummaryContent from './summary-content';\nimport WorkflowInfoForm from './stage-information';\nimport SetStages from './set-stages';\n\nconst AddWorkflow = ({\n  history: { push },\n  addWorkflow,\n  addNotification,\n  postMethod,\n  rbacGroups\n}) => {\n  const [ formData, setValues ] = useState({});\n  const [ isValid, setIsValid ] = useState(formData.name !== undefined && formData.name.length > 0);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const steps = [\n    { name: 'General information',\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      component: <WorkflowInfoForm formData={ formData }\n        handleChange={ handleChange }\n        isValid={ isValid } setIsValid={ setIsValid }/> },\n    { name: 'Set groups', component: <SetStages formData={ formData }\n      handleChange={ handleChange } options={ rbacGroups } /> },\n    { name: 'Review', component: <SummaryContent formData={ formData }\n      options={ rbacGroups } />, nextButtonText: 'Confirm' }\n  ];\n\n  const onSave = () => {\n    const { name, description, wfGroups } = formData;\n    const workflowData = { name, description, group_refs: wfGroups ? wfGroups.map(group => group.value) : []};\n    return addWorkflow(workflowData).then(() => postMethod()).then(() => (push('/workflows')));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Creating approval process',\n      dismissable: true,\n      description: 'Creating approval process was cancelled by the user.'\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Wizard\n      title={ 'Create approval process' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSave  }\n      steps={ steps }\n    />\n  );\n};\n\nAddWorkflow.defaultProps = {\n  rbacGroups: [],\n  initialValues: {}\n};\n\nAddWorkflow.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addWorkflow: PropTypes.func.isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflowWithGroupNames: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    rbacGroups: state.groupReducer.groups\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  fetchWorkflowWithGroupNames\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddWorkflow));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  Title\n} from '@patternfly/react-core';\n\nconst WorkflowSequence = ({ formData, handleChange, isValid, setIsValid, title = undefined }) => {\n  const { sequence } = formData;\n\n  const handleSequenceChange = (sequence) => {\n    setIsValid(sequence >= 0);\n    handleChange({ sequence });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Enter sequence\"\n              isRequired\n              fieldId=\"workflow-sequence\"\n              isValid={ isValid }\n              helperTextInvalid={ 'Enter a positive number' }\n            >\n              <TextInput\n                isRequired\n                type=\"number\"\n                id=\"workflow-sequence\"\n                isValid={ isValid }\n                name=\"workflow-sequence\"\n                aria-describedby=\"workflow-name\"\n                value={ sequence }\n                onChange={ (_, event) => handleSequenceChange(event.currentTarget.value) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowSequence.propTypes = {\n  sequence: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  setIsValid: PropTypes.func.isRequired,\n  isValid: PropTypes.bool\n};\n\nexport default WorkflowSequence;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport WorkflowInfoForm from './add-stages/stage-information';\nimport WorkflowSequenceForm from './add-stages/workflow-sequence';\nimport '../../App.scss';\n\nconst EditWorkflowInfoModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  workflow,\n  isFetching,\n  editType\n}) => {\n  const [ formData, setFormData ] = useState({});\n  const [ initialValue, setInitialValue ] = useState({});\n  const [ isValid, setIsValid ] = useState(true);\n\n  const handleChange = data => setFormData({ ...formData, ...data });\n\n  useEffect(() => {\n    fetchWorkflow(id).then((data) => { setFormData({ ...formData, ...data.value }); setInitialValue({ ...data.value });});\n  }, []);\n\n  const onSave = () => {\n    if (!isValid) {return;}\n\n    const { name, description, sequence } = formData;\n    const workflowData = { id, name, description, sequence };\n    updateWorkflow(workflowData).then(() => postMethod()).then(() => push('/workflows'));\n  };\n\n  const onCancel = () => {\n    const { title, description } =\n        editType === 'sequence' ? { title: `Edit approval process's sequence`,\n          description: `Edit approval process's sequence was cancelled by the user.` } :\n          { title: `Edit approval process's information`,\n            description: `Edit approval process's information was cancelled by the user.` };\n    addNotification({\n      variant: 'warning',\n      title,\n      dismissable: true,\n      description\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ editType === 'sequence' ? 'Edit sequence' : 'Edit information' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"edit-workflow-info-modal-info\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (editType === 'info' ?\n              <WorkflowInfoForm formData={ formData } initialValue={ initialValue }\n                handleChange={ handleChange }\n                isValid={ isValid }\n                setIsValid={ setIsValid }\n                title={ `Make any changes to approval process ${workflow.name}` }/> :\n              <WorkflowSequenceForm formData={ formData }\n                initialValue={ initialValue }\n                handleChange={ handleChange }\n                isValid={ isValid }\n                setIsValid={ setIsValid }\n                title={ `Set the sequence for the approval process ${workflow.name}` }/>\n            ) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label={ 'Save' }\n                  id=\"save-edit-workflow-info\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  id=\"cancel-edit-workflow-info\"\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowInfoModal.defaultProps = {\n  isFetching: false,\n  editType: 'info'\n};\n\nEditWorkflowInfoModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  workflow: PropTypes.object,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { workflow, isRecordLoading }}) => ({\n  workflow,\n  isFetching: isRecordLoading\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditWorkflowInfoModal));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflowWithGroupNames } from '../../redux/actions/workflow-actions';\nimport { fetchRbacGroups } from '../../redux/actions/group-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport SetStages from './add-stages/set-stages';\nimport '../../App.scss';\n\nconst EditWorkflowStagesModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  fetchWorkflowWithGroupNames,\n  updateWorkflow,\n  postMethod,\n  isFetching\n}) => {\n  const [ formData, setValues ] = useState({});\n\n  const handleChange = data => {\n    setValues({ ...formData, ...data });\n  };\n\n  const initialValues = (wfData) => {\n    const stageOptions = wfData.group_refs.map((group, idx) => {\n      return { label: (wfData.group_names[idx] ? wfData.group_names[idx] : group), value: group };\n    });\n    const data = { ...wfData, wfGroups: stageOptions };\n    return data;\n  };\n\n  useEffect(() => {\n    fetchWorkflowWithGroupNames(id).then((result) => setValues(initialValues(result.value)));\n  }, []);\n\n  const onSave = () => {\n    const { wfGroups } = formData;\n    const workflowData = { group_refs: wfGroups.map(group => group.value)  };\n    updateWorkflow({ id, ...workflowData }).then(() => postMethod()).then(()=>push('/workflows'));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Edit approval process's groups`,\n      dismissable: true,\n      description: `Edit approval process's groups was cancelled by the user.`\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ `Edit approval process's groups` }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"workflow-stages-formgroup\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (\n              <StackItem className=\"stages-modal\">\n                <SetStages className=\"stages-modal\" formData={ formData }\n                  handleChange={ handleChange }\n                  title={ `Add or remove ${formData.name}'s groups` }/>\n              </StackItem>) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button aria-label={ 'Save' }\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isDisabled={ isFetching }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowStagesModal.defaultProps = {\n  rbacGroups: [],\n  isFetching: false\n};\n\nEditWorkflowStagesModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  addWorkflow: PropTypes.func.isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflowWithGroupNames: PropTypes.func.isRequired,\n  fetchRbacGroups: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isFetching: PropTypes.bool,\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string\n  })\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflowWithGroupNames,\n  fetchRbacGroups\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { isRecordLoading }}) => ({\n  isFetching: isRecordLoading\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditWorkflowStagesModal));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal, Button, Bullseye, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { removeWorkflow, removeWorkflows } from '../../redux/actions/workflow-actions';\n\nconst RemoveWorkflowModal = ({\n  history: { goBack, push },\n  match: { params: { id: workflowId  }},\n  ids,\n  removeWorkflow,\n  removeWorkflows,\n  fetchData,\n  setSelectedWorkflows\n}) => {\n  if (!workflowId && (!ids || ids.length === 0)) {\n    return null;\n  }\n\n  const onSubmit = () => { return ((workflowId ? removeWorkflow(workflowId) : removeWorkflows(ids))\n  .then(setSelectedWorkflows([])).then(fetchData()).then(push('/workflows')));\n  };\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      width={ '40%' }\n      title={ '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button id=\"cancel-remove-workflow\" key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button id=\"submit-remove-workflow\" key=\"submit\" variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Bullseye>\n        <TextContent>\n          <Text component={ TextVariants.h1 }>\n            <FormattedMessage\n              id=\"remove-workflow-modal\"\n              defaultMessage={ `Removing {count, number} {count, plural,\n              one {approval process}\n              other {approval processes}\n            }` }\n              values={ {\n                count: workflowId !== undefined ? 1 : ids.length\n              } }\n            />\n          </Text>\n        </TextContent>\n      </Bullseye>\n    </Modal>\n  );\n};\n\nRemoveWorkflowModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.object,\n  removeWorkflows: PropTypes.func.isRequired,\n  removeWorkflow: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  setSelectedWorkflows: PropTypes.func.isRequired,\n  workflowId: PropTypes.string,\n  ids: PropTypes.array\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  removeWorkflow,\n  removeWorkflows\n}, dispatch);\n\nexport default withRouter(connect(null, mapDispatchToProps)(RemoveWorkflowModal));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport { fetchGroupName } from '../../helpers/group/group-helper';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/Skeleton';\n\nconst ExpandableContent = ({ description, groupRefs, id }) => {\n  const [ groupNames, setGroupNames ] = useState([]);\n  const [ isLoaded, setIsLoaded ] = useState();\n  const [ fetching, setFetching ] = useState();\n\n  const expandedWorkflows = useSelector(({ workflowReducer: { expandedWorkflows }}) => expandedWorkflows);\n\n  const fetchGroupNames = () => Promise.all(groupRefs.map((ref) => fetchGroupName(ref)));\n\n  useEffect(() => {\n    if (!isLoaded && expandedWorkflows.includes(id) && !fetching) {\n      setFetching(true);\n      fetchGroupNames(groupRefs).then((data) => { setGroupNames(data); setIsLoaded(true); }).catch(() => setIsLoaded(true));\n    }\n  }, [ expandedWorkflows ]);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Description</Text>\n        <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ description }</Text>\n      </TextContent>\n      <TextContent>\n        <Fragment>\n          <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Groups</Text>\n          { isLoaded ?\n            <Text className=\"data-table-detail content\"\n              component={ TextVariants.h5 }>\n              { groupNames.join(',') }\n            </Text> :\n            <div>\n              <Skeleton size={ SkeletonSize.sm } />\n            </div> }\n        </Fragment>\n      </TextContent>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  description: PropTypes.string,\n  groupRefs: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default ExpandableContent;\n","import React from 'react';\n\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data) =>\n  data.reduce((acc,\n    {\n      id,\n      name,\n      description,\n      sequence,\n      group_refs\n    }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      selected: false,\n      cells: [ name, description, sequence ]\n    }, {\n      parent: key * 2,\n      cells: [{ title: <ExpandableContent\n        description={ description }\n        groupRefs={ group_refs }\n        id={ id }\n      /> }]\n    }\n  ]), []);\n\n","import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Link, useHistory } from 'react-router-dom';\nimport { ToolbarGroup, ToolbarItem, Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { expandable } from '@patternfly/react-table';\nimport { fetchWorkflows, expandWorkflow } from '../../redux/actions/workflow-actions';\nimport AddWorkflow from './add-stages/add-stages-wizard';\nimport EditWorkflowInfo from './edit-workflow-info-modal';\nimport EditWorkflowStages from './edit-workflow-stages-modal';\nimport RemoveWorkflow from './remove-workflow-modal';\nimport { createRows } from './workflow-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../../smart-components/app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\n\nconst columns = [{\n  title: 'Name',\n  cellFormatters: [ expandable ]\n},\n'Description',\n'Sequence'\n];\n\nconst debouncedFilter = asyncDebounce(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchWorkflows(filter, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst workflowsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Workflows = () => {\n  const [ selectedWorkflows, setSelectedWorkflows ] = useState([]);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch ] = useReducer(\n    workflowsListState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ workflowReducer: { workflows }}) => workflows\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchWorkflows(filterValue, defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const tabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n    { eventKey: 1, title: 'Approval processes', name: '/workflows' }];\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(fetchWorkflows(filterValue, pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/workflows/add-workflow\" render={ props => <AddWorkflow { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-info/:id\" render={ props => <EditWorkflowInfo editType='info' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-stages/:id\" render={ props => <EditWorkflowStages editType='stages' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-sequence/:id\" render={ props => <EditWorkflowInfo editType='sequence' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/remove/:id\"\n      render={ props => <RemoveWorkflow { ...props }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows } /> }/>\n    <Route exact path=\"/workflows/remove\"\n      render={ props => <RemoveWorkflow { ...props }\n        ids={ selectedWorkflows }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows } /> }/>\n  </Fragment>;\n\n  const actionResolver = (workflowData, { rowIndex }) => rowIndex % 2 === 1 ?\n    null\n    : [\n      {\n        title: 'Edit info',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-info/${workflow.id}`)\n      },\n\n      {\n        title: 'Edit groups',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-stages/${workflow.id}`)\n      },\n      {\n        title: 'Edit sequence',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-sequence/${workflow.id}`)\n      },\n      {\n        title: 'Delete',\n        style: { color: 'var(--pf-global--danger-color--100)'\t},\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/remove/${workflow.id}`)\n      }\n    ];\n\n  const setCheckedItems = (checkedWorkflows) =>\n    setSelectedWorkflows(checkedWorkflows.map(wf => wf.id));\n\n  const anyWorkflowsSelected = selectedWorkflows.length > 0;\n\n  const toolbarButtons = () => <ToolbarGroup className={ `pf-u-pl-lg top-toolbar` }>\n    <ToolbarItem>\n      <Link id=\"add-workflow-link\" to=\"/workflows/add-workflow\">\n        <Button\n          variant=\"primary\"\n          aria-label=\"Create approval process\"\n        >\n          Create approval process\n        </Button>\n      </Link>\n    </ToolbarItem>\n    <ToolbarItem>\n      <Link id=\"remove-multiple-workflows\" className={ anyWorkflowsSelected ? '' : 'disabled-link' } to={ { pathname: '/workflows/remove' } }>\n        <Button\n          variant=\"link\"\n          isDisabled={ !anyWorkflowsSelected }\n          style={ { color: anyWorkflowsSelected ? 'var(--pf-global--danger-color--100)' : 'var(--pf-global--disabled-color--100)'\t} }\n          aria-label=\"Delete approval process\"\n        >\n          Delete\n        </Button>\n      </Link>\n    </ToolbarItem>\n  </ToolbarGroup>;\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandWorkflow(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        <AppTabs tabItems={ tabItems }/>\n      </TopToolbar>\n      <TableToolbarView\n        data={ data }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ handlePagination }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"approval processes\"\n        titleSingular=\"approval process\"\n        pagination={ meta }\n        setCheckedItems={ setCheckedItems }\n        toolbarButtons={ toolbarButtons }\n        filterValue={ filterValue }\n        onFilterChange={ handleFilterChange }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n        renderEmptyState={ () => (\n          <TableEmptyState\n            title={ filterValue === '' ? 'No approval processes' : 'No results found' }\n            Icon={ SearchIcon }\n            PrimaryAction={ () =>\n              filterValue !== '' ? (\n                <Button onClick={ () => handleFilterChange('') } variant=\"link\">\n                  Clear all filters\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? 'No approval processes.'\n                : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n            }\n          />\n        ) }\n      />\n    </Fragment>\n  );\n};\n\nWorkflows.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  workflows: PropTypes.array,\n  isLoading: PropTypes.bool,\n  selectedWorkflows: PropTypes.array\n};\n\nWorkflows.defaultProps = {\n  workflows: [],\n  rbacGroups: {},\n  isLoading: false\n};\n\nexport default Workflows;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nconst ApprovalBreadcrumbs = ({ breadcrumbs }) => breadcrumbs\n  ? (\n    <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        <BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n          { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n        </BreadcrumbItem>\n      )) }\n    </Breadcrumb>\n  ) : null;\n\nApprovalBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    isActive: PropTypes.bool,\n    to: PropTypes.string\n  }))\n};\n\nexport default ApprovalBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport ApprovalBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <ApprovalBreadcrumbs breadcrumbs={ breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n              <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n                <Text component={ TextVariants.p }>{ description }</Text>\n              </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\nimport { Link }  from 'react-router-dom';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered\n    aria-label=\"No records\"\n  >\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={ Icon } />\n      <TextContent>\n        <Text component={ TextVariants.h1 }>{ title }</Text>\n      </TextContent>\n      <EmptyStateBody>\n        { description }\n        { renderDescription() }\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        { PrimaryAction && <PrimaryAction /> }\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n\nexport const EmptyStatePrimaryAction = ({ url, label }) => (\n  <Link to={ url }>\n    <Button variant=\"secondary\">{ label }</Button>\n  </Link>\n);\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <div className=\"toolbar-filter-input-group\">\n      <TextInput\n        placeholder={ placeholder }\n        value={ searchValue }\n        type=\"text\"\n        onChange={ onFilterChange }\n        aria-label={ placeholder }\n      />\n      <span className=\"filter-icons-container\">\n        { (isClearable && searchValue && (\n          <CloseIcon\n            className=\"clear-filter\"\n            width=\"16\"\n            height=\"16\"\n            onClick={ () => onFilterChange('') }\n          />\n        )) || <SearchIcon /> }\n      </span>\n    </div>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={ className }>\n      <Pagination\n        perPage={ limit || 50 }\n        itemCount={ count || 0 }\n        onPerPageSelect={ handleOnPerPageSelect }\n        page={ getCurrentPage(limit, offset) }\n        onSetPage={ handleSetPage }\n        direction=\"down\"\n        isCompact={ isCompact }\n        { ...props }\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    { children }\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","\nimport React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Level, LevelItem } from '@patternfly/react-core';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings  } from '../../helpers/shared/pagination';\nimport FilterToolbar from '../../presentational-components/shared/filter-toolbar-item';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport { DataListLoader } from './loader-placeholders';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse,\n  renderEmptyState\n}) => {\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (data, id) => {\n    const newData = data.map(row => row.id === id ?\n      {\n        ...row,\n        selected: !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return newData;\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse ?\n    onCollapse(id, setRows, setOpen) :\n    setRows((rows) => setOpen(rows, id));\n\n  const selectRow = (_event, selected, index, { id } = {}) => index === -1\n    ? setRows(rows.map(row => ({ ...row, selected })))\n    : setRows((rows) => setSelected(rows, id));\n\n  const renderToolbar = (isLoading) => {\n    return (<Toolbar className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg pf-u-pb-lg top-toolbar` }>\n      <Level style={ { flex: 1 } }>\n        <LevelItem>\n          <Toolbar>\n            <FilterToolbar onFilterChange={ onFilterChange } searchValue={ filterValue } isClearable={ true }\n              placeholder={ `Filter by ${titleSingular}` }/>\n            { toolbarButtons() }\n          </Toolbar>\n        </LevelItem>\n\n        <LevelItem>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <AsyncPagination\n                  apiRequest={ fetchData }\n                  isDisabled={ isLoading }\n                  meta={ pagination }\n                  isCompact\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n        </LevelItem>\n      </Level>\n    </Toolbar>);\n  };\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ `${titlePlural} table` }\n            onCollapse={ onCollapseInternal }\n            rows={ rows }\n            cells={ columns }\n            onSelect={ isSelectable && selectRow }\n            actionResolver={ actionResolver }\n            className=\"table-fix\"\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 &&\n            <BottomPaginationContainer>\n              <AsyncPagination\n                dropDirection=\"up\"\n                meta={ pagination }\n                apiRequest={ fetchData }\n              />\n            </BottomPaginationContainer>\n          }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func,\n  renderEmptyState: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  toolbarButtons: () => null,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null\n};\n"],"sourceRoot":""}