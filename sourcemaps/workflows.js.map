{"version":3,"sources":["webpack:///./src/helpers/workflow/workflow-helper.js","webpack:///./src/redux/actions/workflow-actions.js","webpack:///./src/smart-components/workflow/add-groups/summary-content.js","webpack:///./src/smart-components/workflow/add-groups/workflow-information.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/smart-components/workflow/add-groups/set-groups.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/smart-components/workflow/add-groups/add-workflow-wizard.js","webpack:///./src/smart-components/workflow/add-groups/workflow-sequence.js","webpack:///./src/utilities/use-workflows.js","webpack:///./src/smart-components/workflow/edit-workflow-info-modal.js","webpack:///./src/smart-components/workflow/edit-workflow-groups-modal.js","webpack:///./src/smart-components/workflow/remove-workflow-modal.js","webpack:///./src/smart-components/workflow/expandable-content.js","webpack:///./src/smart-components/workflow/workflow-table-helpers.js","webpack:///./src/smart-components/workflow/workflows.js","webpack:///./src/constants/routes.js","webpack:///./src/utilities/use-query.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js"],"names":["workflowApi","getWorkflowApi","templateApi","getTemplateApi","fetchWorkflows","filter","pagination","defaultSettings","paginationQuery","limit","offset","filterQuery","getAxiosInstance","get","APPROVAL_API_BASE","fetchWorkflow","id","a","showWorkflow","removeWorkflow","workflowId","destroyWorkflow","removeWorkflows","selectedWorkflows","Promise","all","map","type","ActionTypes","payload","WorkflowHelper","apiProps","addWorkflow","workflowData","workflow","listTemplates","then","data","Error","addWorkflowToTemplate","meta","notifications","fulfilled","variant","title","description","updateWorkflow","workflows","SummaryContent","formData","name","wfGroups","Stack","gutter","StackItem","Title","size","TextContent","Text","className","component","TextVariants","h5","Grid","GridItem","span","p","length","group","idx","key","value","label","propTypes","PropTypes","object","validateName","fetchWorkflowByName","find","wf","undefined","WorkflowInfoForm","initialValue","handleChange","setIsValid","useState","error","setError","setResult","result","handleNameChange","validateCallback","asyncDebounce","Form","FormGroup","isRequired","fieldId","isValid","helperTextInvalid","TextInput","aria-describedby","onBlur","onChange","_","event","onHandleChange","currentTarget","TextArea","string","func","bool","shape","getRbacGroupApi","fetchFilterApprovalGroups","filterValue","RBAC_API_BASE","uuid","SetGroups","isExpanded","setExpanded","groupValues","setGroupValues","inputValue","setInputValue","isFetching","setIsFetching","defaultOptions","useSelector","groupReducer","groups","dispatch","useDispatch","useEffect","FETCH_RBAC_GROUPS","GroupHelper","cacheOptions","isClearable","isMulti","styles","menuPortal","base","zIndex","menuPortalTarget","document","body","menuPosition","menuPlacement","aria-label","onToggle","e","values","inpuValue","isexpanded","loadOptions","onInputChange","replace","AddWorkflow","setValues","push","useHistory","rbacGroups","stepIdReached","setStepIdReached","steps","enableNext","canJumpTo","options","nextButtonText","Wizard","isOpen","onClose","addNotification","dismissable","routes","index","onSave","group_refs","getState","workflowReducer","onNext","prevStepIdReached","defaultProps","initialValues","match","arrayOf","oneOfType","number","WorkflowSequence","sequence","handleSequenceChange","useWorkflow","shallowEqual","EditWorkflowInfoModal","postMethod","editType","setFormData","setInitialValue","useQuery","loadedWorkflow","onCancel","Modal","width","ActionGroup","Split","SplitItem","Button","onClick","connect","isRecordLoading","bindActionCreators","EditWorkflowGroupsModal","wfData","groupOptions","isDisabled","RemoveWorkflowModal","ids","fetchData","setSelectedWorkflows","submitting","setSubmitting","isSmall","actions","Fragment","Spinner","fill","defaultMessage","count","array","ExpandableContent","groupRefs","small","ref","listGroupNames","join","createRows","reduce","acc","selected","cells","parent","columns","cellFormatters","expandable","debouncedFilter","filteringCallback","initialState","isFiltering","workflowsListState","state","action","Workflows","useReducer","stateDispatch","history","scrollToTop","handleFilterChange","handlePagination","_apiProps","anyWorkflowsSelected","tabItems","eventKey","isSelectable","exact","path","routesLinks","add","render","props","editInfo","editGroups","editSequence","remove","actionResolver","_workflowData","rowIndex","_event","_rowId","pathname","search","style","color","titlePlural","titleSingular","setCheckedItems","checkedWorkflows","toolbarButtons","ToolbarGroup","ToolbarItem","to","onFilterChange","isLoading","onCollapse","setRows","setOpen","expandWorkflow","rows","renderEmptyState","Icon","SearchIcon","PrimaryAction","requests","addComment","approve","deny","request","requiredParams","useLocation","query","URLSearchParams","curr","asyncFunction","debounceTime","onlyResolvesLast","awesomeDebouncePromise","AppTabs","location","activeTab","includes","activeKey","onSelect","tabIndex","item","withRouter","TableEmptyState","renderDescription","centered","icon","h1","any","FilterToolbarItem","searchValue","placeholder","height","AsyncPagination","apiRequest","isCompact","Pagination","perPage","itemCount","onPerPageSelect","page","getCurrentPage","onSetPage","debounce","getNewPage","debouncePromise","direction","BottomPaginationContainer","children","node","TableToolbarView","sortBy","onSort","row","setSelected","newData","checkedItems","page-type","Toolbar","Level","flex","LevelItem","renderToolbar","Table","_index","_isOpen","dropDirection"],"mappings":"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","file":"js/workflows.js","sourcesContent":["import { getWorkflowApi, getTemplateApi, getAxiosInstance } from '../shared/user-login';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\n\nconst workflowApi = getWorkflowApi();\nconst templateApi = getTemplateApi();\n\nexport function fetchWorkflows(filter = '', pagination = defaultSettings) {\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains_i]=${filter}`;\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows/?${filterQuery}${paginationQuery}`\n  );\n}\n\nexport async function fetchWorkflow(id) {\n  return await workflowApi.showWorkflow(id);\n}\n\nexport function fetchWorkflowByName(name) {\n  return fetchWorkflows(name);\n}\n\nexport function updateWorkflow(data) {\n  return workflowApi.updateWorkflow(data.id, data);\n}\n\nexport  function addWorkflow(workflow) {\n  return templateApi.listTemplates().then(({ data }) => {\n    // workaround for v1. Need to pass template ID with the workflow. Assigning to first template\n    if (!data[0]) {\n      throw new Error('No template exists');\n    }\n\n    return data[0].id;\n\n  }).then(id => workflowApi.addWorkflowToTemplate(id, workflow, {}));\n}\n\nexport async function removeWorkflow(workflowId) {\n  return await workflowApi.destroyWorkflow(workflowId);\n}\n\nexport async function removeWorkflows(selectedWorkflows) {\n  return Promise.all(selectedWorkflows.map(async workflowId => await workflowApi.destroyWorkflow(workflowId)));\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as WorkflowHelper from '../../helpers/workflow/workflow-helper';\n\nexport const fetchWorkflows = (filter, pagination) => ({\n  type: ActionTypes.FETCH_WORKFLOWS,\n  payload: WorkflowHelper.fetchWorkflows(filter, pagination)\n});\n\nexport const fetchWorkflow = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW,\n  payload: WorkflowHelper.fetchWorkflow(apiProps)\n});\n\nexport const addWorkflow = (workflowData) => ({\n  type: ActionTypes.ADD_WORKFLOW,\n  payload: WorkflowHelper.addWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding approval process',\n        description: 'The approval process was added successfully.'\n      }\n    }\n  }\n});\n\nexport const updateWorkflow = (workflowData) => ({\n  type: ActionTypes.UPDATE_WORKFLOW,\n  payload: WorkflowHelper.updateWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating approval process',\n        description: 'The approval process was updated successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflow = (workflow) => ({\n  type: ActionTypes.REMOVE_WORKFLOW,\n  payload: WorkflowHelper.removeWorkflow(workflow),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval process',\n        description: 'The approval process was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflows = (workflows) => ({\n  type: ActionTypes.REMOVE_WORKFLOWS,\n  payload: WorkflowHelper.removeWorkflows(workflows),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval processes',\n        description: 'The selected approval processes were removed successfully.'\n      }\n    }\n  }\n});\n\nexport const expandWorkflow = (id) => ({\n  type: ActionTypes.EXPAND_WORKFLOW,\n  payload: id\n});\n\nexport const refreshWorkflows = () => (dispatch, getState) => {\n  const { workflowReducer: { filterValue, workflows: { meta: { limit, offset }}}} = getState();\n\n  dispatch(fetchWorkflows(filterValue, { limit, offset }));\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst SummaryContent = ({ formData }) => {\n  const { name, description, wfGroups } = formData ? formData : { name: '', description: '', wfGroups: []};\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                    Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              { wfGroups && wfGroups.length > 0 && wfGroups.map((group, idx)  =>\n              { return (<Fragment key={ `Groups` }>\n                <Grid gutter=\"md\">\n                  <GridItem span={ 2 }>\n                    <Text key={ group.value } className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                      { idx === 0 ? 'Groups' : '' }\n                    </Text>\n                  </GridItem>\n                  <GridItem span={ 10 }>\n                    <Text key={ group.label } className=\"data-table-detail content\" component={ TextVariants.p }>\n                      { `${wfGroups[idx].label}` }\n                    </Text>\n                  </GridItem>\n                </Grid>\n              </Fragment>); })\n              }\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  formData: PropTypes.object\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchWorkflowByName } from '../../../helpers/workflow/workflow-helper';\n\nconst validateName = (name) => fetchWorkflowByName(name)\n.then(({ data }) => {\n  return data.find(wf => name === wf.name)\n    ? 'Name has already been taken'\n    : undefined;\n});\n\nconst debouncedValidator = (data, validateCallback) => asyncDebounce(validateName(data).then((result) => validateCallback(result)));\n\nconst WorkflowInfoForm = ({ formData, initialValue, handleChange, setIsValid, title = undefined }) => {\n  const name = formData.name || '';\n  const description = formData.description || '';\n  const [ error, setError ] = useState(undefined);\n\n  const setResult = (result) => {\n    setError(result);\n    setIsValid(!result);\n  };\n\n  const onHandleChange = (name) => {\n    setError(!name || name.length < 1 ? 'Enter a name for the approval process' : undefined);\n    handleChange({ name });\n  };\n\n  const handleNameChange = (name) => {\n    if (!name || name.length < 1) {\n      setError('Enter a name for the approval process');\n    }\n    else if (!initialValue || initialValue.name !== name) {\n      debouncedValidator(name, setResult);\n    }\n    else {\n      setError(undefined);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Approval process name\"\n              isRequired\n              fieldId=\"workflow-name\"\n              isValid={ !error }\n              helperTextInvalid={ error }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"workflow-name\"\n                name=\"workflow-name\"\n                aria-describedby=\"workflow-name\"\n                value={ name }\n                isValid={ !error }\n                onBlur={ () => handleNameChange(name) }\n                onChange={ (_, event) => onHandleChange(event.currentTarget.value) }\n              />\n            </FormGroup>\n            <FormGroup label=\"Description\" fieldId=\"workflow-description\">\n              <TextArea\n                type=\"text\"\n                id=\"workflow-description\"\n                name=\"workflow-description\"\n                value={ description }\n                onChange={ (_, event) => handleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowInfoForm.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  isValid: PropTypes.bool,\n  setIsValid: PropTypes.func.isRequired,\n  initialValue: PropTypes.shape({\n    name: PropTypes.string })\n};\n\nexport default WorkflowInfoForm;\n","import { getRbacGroupApi, getAxiosInstance } from '../shared/user-login';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst api = getRbacGroupApi();\n\nexport async function fetchGroupNames(groupRefs) {\n  if (groupRefs) {\n    return Promise.all(groupRefs.map(async id => {\n      try {\n        const group = await api.getGroup(id);\n        return group.name;\n      } catch (error) {\n        if (error.status !== 404) {\n          throw error;\n        }\n        else {\n          return id;\n        }\n      }\n    }));\n  }\n}\n\nexport const fetchGroupName = (id) =>\n  getAxiosInstance().get(`${RBAC_API_BASE}/groups/${id}/`)\n  .then((data) => data.name).catch((error) => {\n    if (error.status !== 404) {\n      throw error;\n    } else {\n      return id;\n    }\n  });\n\nexport const fetchFilterApprovalGroups = (filterValue) => {\n  const filterQuery = `&name=${filterValue}`;\n  return getAxiosInstance().get(`${RBAC_API_BASE}/groups/?role_names=\",Approval Administrator,Approval Approver,\"\n  ${filterValue && filterValue.length > 0\n    ? filterQuery : ''}`)\n  .then(({ data }) => (data && data.length > 0 ? data.map(({ uuid, name }) => ({ label: name, value: uuid })) : undefined));\n};\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AsyncSelect from 'react-select/async';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchFilterApprovalGroups } from '../../../helpers/group/group-helper';\nimport { WorkflowInfoFormLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Stack,\n  StackItem,\n  Title\n} from '@patternfly/react-core';\nimport { fetchRbacApprovalGroups } from '../../../redux/actions/group-actions';\n\nconst SetGroups = ({ formData, handleChange, title }) => {\n  const [ isExpanded, setExpanded ] = useState(false);\n  const [ groupValues, setGroupValues ] = useState([]);\n  const [ inputValue, setInputValue ] = useState([]);\n  const [ isFetching, setIsFetching ] = useState([]);\n\n  const defaultOptions = useSelector(({ groupReducer: { groups }}) => groups || []);\n\n  const onInputChange = (newValue) => {\n    const value = newValue.replace(/\\W/g, '');\n    setInputValue(value);\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      fetchRbacApprovalGroups()).then(() => setIsFetching(false));\n  }, []);\n\n  useEffect(() => {\n    setGroupValues(formData.wfGroups ? formData.wfGroups : []);\n  }, [ formData.wfGroups ]);\n\n  const onToggle = (isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  const onGroupChange = (values) => {\n    setGroupValues(values);\n    handleChange({ wfGroups: values });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem key={ 'title' }>\n          <Title size=\"md\">{ title || 'Set groups' }</Title>\n        </StackItem>\n        <StackItem key={ 'group' }>\n          { isFetching && <WorkflowInfoFormLoader/> }\n          { !isFetching &&\n              <AsyncSelect\n                cacheOptions\n                isClearable\n                isMulti\n                styles={ { menuPortal: base => ({ ...base, zIndex: 9999 }) } }\n                menuPortalTarget={ document.body }\n                menuPosition={ 'fixed' }\n                menuPlacement={ 'bottom' }\n                label={ 'Group' }\n                aria-label={ 'Group' }\n                onToggle={ onToggle }\n                key={ `groups` }\n                onChange={ (e) => onGroupChange(e) }\n                value={ groupValues }\n                inpuValue={ inputValue }\n                isexpanded={ isExpanded }\n                loadOptions={ asyncDebounce(fetchFilterApprovalGroups) }\n                defaultOptions={ defaultOptions }\n                onInputChange={ (e) => onInputChange(e) }\n              /> }\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetGroups.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func\n};\n\nexport default SetGroups;\n","import { FETCH_RBAC_GROUPS } from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchRbacApprovalGroups = () => ({\n  type: FETCH_RBAC_GROUPS,\n  payload: GroupHelper.fetchFilterApprovalGroups()\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, refreshWorkflows } from '../../../redux/actions/workflow-actions';\nimport SummaryContent from './summary-content';\nimport WorkflowInfoForm from './workflow-information';\nimport SetGroups from './set-groups';\nimport routes from '../../../constants/routes';\n\nconst AddWorkflow = () => {\n  const [ formData, setValues ] = useState({ wfGroups: []});\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  const rbacGroups = useSelector(({ groupReducer: { groups }}) => groups);\n  const [ isValid, setIsValid ] = useState(formData.name !== undefined && formData.name.length > 0);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const onNext = ({ id }) => {\n    setStepIdReached(prevStepIdReached =>  prevStepIdReached < id ? id : prevStepIdReached);\n  };\n\n  const steps = [\n    { id: 1,\n      name: 'General information',\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      component: <WorkflowInfoForm formData={ formData }\n        handleChange={ handleChange }\n        setIsValid={ setIsValid }/> },\n    { id: 2,\n      name: 'Set groups',\n      canJumpTo: stepIdReached >= 2,\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      component: <SetGroups formData={ formData }\n        handleChange={ handleChange } options={ rbacGroups } /> },\n    { id: 3,\n      canJumpTo: stepIdReached >= 3,\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      name: 'Review', component: <SummaryContent formData={ formData }\n        options={ rbacGroups } />, nextButtonText: 'Confirm' }\n  ];\n\n  const onSave = () => {\n    const { name, description, wfGroups } = formData;\n    const workflowData = { name, description,\n      group_refs: wfGroups && wfGroups.length > 0 ? wfGroups.map(group => ({ name: group.label, uuid: group.value })) : []};\n    push(routes.workflows.index);\n    dispatch(addWorkflow(workflowData)).then(() => dispatch(refreshWorkflows()));\n  };\n\n  const onCancel = () => {\n    dispatch(addNotification({\n      variant: 'warning',\n      title: 'Creating approval process',\n      dismissable: true,\n      description: 'Creating approval process was cancelled by the user.'\n    }));\n    push(routes.workflows.index);\n  };\n\n  return (\n    <Wizard\n      title={ 'Create approval process' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSave  }\n      onNext={  onNext }\n      steps={ steps }\n    />\n  );\n};\n\nAddWorkflow.defaultProps = {\n  rbacGroups: [],\n  initialValues: {}\n};\n\nAddWorkflow.propTypes = {\n  match: PropTypes.object,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n};\n\nexport default AddWorkflow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  Title\n} from '@patternfly/react-core';\n\nconst WorkflowSequence = ({ formData, handleChange, isValid, setIsValid, title = undefined }) => {\n  const { sequence } = formData;\n\n  const handleSequenceChange = (sequence) => {\n    setIsValid(sequence >= 0);\n    handleChange({ sequence });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Enter sequence\"\n              isRequired\n              fieldId=\"workflow-sequence\"\n              isValid={ isValid }\n              helperTextInvalid={ 'Enter a positive number' }\n            >\n              <TextInput\n                isRequired\n                type=\"number\"\n                id=\"workflow-sequence\"\n                isValid={ isValid }\n                name=\"workflow-sequence\"\n                aria-describedby=\"workflow-name\"\n                value={ sequence }\n                onChange={ (_, event) => handleSequenceChange(event.currentTarget.value) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowSequence.propTypes = {\n  sequence: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  setIsValid: PropTypes.func.isRequired,\n  isValid: PropTypes.bool\n};\n\nexport default WorkflowSequence;\n","import { shallowEqual, useSelector } from 'react-redux';\n\nconst useWorkflow = (id) => {\n  const { workflows } = useSelector(({ workflowReducer: { workflows }}) => ({ workflows }), shallowEqual);\n\n  return workflows && workflows.data && workflows.data.find((wf) => wf.id === id);\n};\n\nexport default useWorkflow;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { useHistory } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport WorkflowInfoForm from './add-groups/workflow-information';\nimport WorkflowSequenceForm from './add-groups/workflow-sequence';\nimport useQuery from '../../utilities/use-query';\nimport useWorkflow from '../../utilities/use-workflows';\n\nimport '../../App.scss';\n\nconst EditWorkflowInfoModal = ({\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  workflow,\n  isFetching,\n  editType\n}) => {\n  const [ formData, setFormData ] = useState({});\n  const [ initialValue, setInitialValue ] = useState({});\n  const [ isValid, setIsValid ] = useState(true);\n\n  const { push } = useHistory();\n  const [{ workflow: id }] = useQuery([ 'workflow' ]);\n  const loadedWorkflow = useWorkflow(id);\n\n  const handleChange = data => setFormData({ ...formData, ...data });\n\n  useEffect(() => {\n    if (!loadedWorkflow) {\n      fetchWorkflow(id).then((data) => { setFormData({ ...formData, ...data.value }); setInitialValue({ ...data.value });});\n    } else {\n      setFormData({ ...formData, ...loadedWorkflow });\n    }\n  }, []);\n\n  const onSave = () => {\n    if (!isValid) {return;}\n\n    const { name, description, sequence } = formData;\n    const workflowData = { id, name, description, sequence };\n    updateWorkflow(workflowData).then(() => postMethod()).then(() => push('/workflows'));\n  };\n\n  const onCancel = () => {\n    const { title, description } =\n        editType === 'sequence' ? { title: `Edit approval process's sequence`,\n          description: `Edit approval process's sequence was cancelled by the user.` } :\n          { title: `Edit approval process's information`,\n            description: `Edit approval process's information was cancelled by the user.` };\n    addNotification({\n      variant: 'warning',\n      title,\n      dismissable: true,\n      description\n    });\n    push('/workflows');\n  };\n\n  const name = loadedWorkflow ? loadedWorkflow.name : workflow && workflow.name;\n\n  return (\n    <Modal\n      title={ editType === 'sequence' ? 'Edit sequence' : 'Edit information' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"edit-workflow-info-modal-info\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (editType === 'info' ?\n              <WorkflowInfoForm formData={ formData } initialValue={ initialValue }\n                handleChange={ handleChange }\n                setIsValid={ setIsValid }\n                title={ `Make any changes to approval process ${name}` }/> :\n              <WorkflowSequenceForm formData={ formData }\n                initialValue={ initialValue }\n                handleChange={ handleChange }\n                isValid={ isValid }\n                setIsValid={ setIsValid }\n                title={ `Set the sequence for the approval process ${name}` }/>\n            ) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label={ 'Save' }\n                  id=\"save-edit-workflow-info\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  id=\"cancel-edit-workflow-info\"\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowInfoModal.defaultProps = {\n  isFetching: false,\n  editType: 'info'\n};\n\nEditWorkflowInfoModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  workflow: PropTypes.object,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { workflow, isRecordLoading }}) => ({\n  workflow,\n  isFetching: isRecordLoading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWorkflowInfoModal);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { useHistory } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport SetGroups from './add-groups/set-groups';\nimport useQuery from '../../utilities/use-query';\nimport useWorkflow from '../../utilities/use-workflows';\n\nimport '../../App.scss';\n\nconst EditWorkflowGroupsModal = ({\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  isFetching\n}) => {\n  const [ formData, setValues ] = useState({});\n\n  const { push } = useHistory();\n  const [{ workflow: id }] = useQuery([ 'workflow' ]);\n  const loadedWorkflow = useWorkflow(id);\n\n  const handleChange = data => {\n    setValues({ ...formData, ...data });\n  };\n\n  const initialValues = (wfData) => {\n    const groupOptions = wfData.group_refs.map((group) => {\n      return { label: group.name, value: group.uuid };\n    });\n    const data = { ...wfData, wfGroups: groupOptions };\n    return data;\n  };\n\n  useEffect(() => {\n    if (!loadedWorkflow) {\n      fetchWorkflow(id).then((result) => setValues(initialValues(result.value)));\n    } else {\n      setValues(initialValues(loadedWorkflow));\n    }\n  }, []);\n\n  const onSave = () => {\n    const { wfGroups } = formData;\n    const workflowData = { group_refs: wfGroups ? wfGroups.map(group => ({ name: group.label, uuid: group.value })) : []};\n    updateWorkflow({ id, ...workflowData }).then(() => postMethod()).then(()=>push('/workflows'));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Edit approval process's groups`,\n      dismissable: true,\n      description: `Edit approval process's groups was cancelled by the user.`\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ `Edit approval process's groups` }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"workflow-groups-formgroup\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (\n              <StackItem className=\"groups-modal\">\n                <SetGroups className=\"groups-modal\" formData={ formData }\n                  handleChange={ handleChange }\n                  title={ `Add or remove ${formData.name}'s groups` }/>\n              </StackItem>) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button aria-label={ 'Save' }\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isDisabled={ isFetching }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowGroupsModal.defaultProps = {\n  isFetching: false\n};\n\nEditWorkflowGroupsModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { isRecordLoading }}) => ({\n  isFetching: isRecordLoading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWorkflowGroupsModal);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal, Button, Split, SplitItem, Text, TextContent, TextVariants, Spinner } from '@patternfly/react-core';\nimport { WarningTriangleIcon } from '@patternfly/react-icons';\nimport { removeWorkflow, removeWorkflows } from '../../redux/actions/workflow-actions';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\n\nconst RemoveWorkflowModal = ({\n  ids,\n  removeWorkflow,\n  removeWorkflows,\n  fetchData,\n  setSelectedWorkflows\n}) => {\n  const [ submitting, setSubmitting ] = useState(false);\n  const { push } = useHistory();\n  const [{ workflow: workflowId }] = useQuery([ 'workflow' ]);\n\n  if (!workflowId && (!ids || ids.length === 0)) {\n    return null;\n  }\n\n  const removeWf = () =>(workflowId ? removeWorkflow(workflowId) : removeWorkflows(ids))\n  .catch(() => setSubmitting(false))\n  .then(() => push(routes.workflows.index))\n  .then(() => setSelectedWorkflows([]))\n  .then(() => fetchData());\n\n  const onCancel = () => push(routes.workflows.index);\n\n  const onSubmit = () => {\n    setSubmitting(true);\n    return removeWf();\n  };\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      width={ '40%' }\n      title={ '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button id=\"cancel-remove-workflow\" key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button id=\"submit-remove-workflow\" key=\"submit\" variant=\"primary\" type=\"button\" isDisabled={ submitting } onClick={ onSubmit }>\n          { submitting ? <React.Fragment><Spinner size=\"sm\" /> Removing </React.Fragment> : 'Remove' }\n        </Button>\n      ] }\n    >\n      <Split gutter=\"md\">\n        <SplitItem>\n          <WarningTriangleIcon size=\"xl\" fill=\"#f0ab00\" />\n        </SplitItem>\n        <SplitItem>\n          <TextContent>\n            <Text component={ TextVariants.p }>\n              <FormattedMessage\n                id=\"remove-workflow-modal\"\n                defaultMessage={ `Removing {count, number} {count, plural,\n              one {approval process}\n              other {approval processes}\n            }` }\n                values={ {\n                  count: workflowId ? 1 : ids.length\n                } }\n              />\n            </Text>\n          </TextContent>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemoveWorkflowModal.propTypes = {\n  removeWorkflows: PropTypes.func.isRequired,\n  removeWorkflow: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  setSelectedWorkflows: PropTypes.func.isRequired,\n  ids: PropTypes.array\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  removeWorkflow,\n  removeWorkflows\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(RemoveWorkflowModal);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ description, groupRefs }) => {\n  const listGroupNames = (groupRefs) => groupRefs.map((ref) => ref.name);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Description</Text>\n        <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ description }</Text>\n      </TextContent>\n      <TextContent>\n        <Fragment>\n          <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Groups</Text>\n          <Text className=\"data-table-detail content\"\n            component={ TextVariants.h5 }>\n            { listGroupNames(groupRefs).join(',') }\n          </Text>\n        </Fragment>\n      </TextContent>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  description: PropTypes.string,\n  groupRefs: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default ExpandableContent;\n","import React from 'react';\n\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data) =>\n  data.reduce((acc,\n    {\n      id,\n      name,\n      description,\n      sequence,\n      group_refs\n    }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      selected: false,\n      cells: [ name, description, sequence ]\n    }, {\n      parent: key * 2,\n      cells: [{ title: <ExpandableContent\n        description={ description }\n        groupRefs={ group_refs }\n        id={ id }\n      /> }]\n    }\n  ]), []);\n\n","import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Route, Link, useHistory } from 'react-router-dom';\nimport { ToolbarGroup, ToolbarItem, Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { expandable } from '@patternfly/react-table';\nimport { fetchWorkflows, expandWorkflow } from '../../redux/actions/workflow-actions';\nimport AddWorkflow from './add-groups/add-workflow-wizard';\nimport EditWorkflowInfo from './edit-workflow-info-modal';\nimport EditWorkflowGroups from './edit-workflow-groups-modal';\nimport RemoveWorkflow from './remove-workflow-modal';\nimport { createRows } from './workflow-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../../smart-components/app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\nimport routesLinks from '../../constants/routes';\n\nconst columns = [{\n  title: 'Name',\n  cellFormatters: [ expandable ]\n},\n'Description',\n'Sequence'\n];\n\nconst debouncedFilter = asyncDebounce(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchWorkflows(filter, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst workflowsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Workflows = () => {\n  const [ selectedWorkflows, setSelectedWorkflows ] = useState([]);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch ] = useReducer(\n    workflowsListState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ workflowReducer: { workflows }}) => workflows\n    , shallowEqual);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchWorkflows(filterValue, defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const tabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n    { eventKey: 1, title: 'Approval processes', name: '/workflows' }];\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(fetchWorkflows(filterValue, pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path={ routesLinks.workflows.add } render={ props => <AddWorkflow { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.editInfo } render={ props => <EditWorkflowInfo editType='info' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.editGroups } render={ props => <EditWorkflowGroups editType='groups' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.editSequence } render={ props => <EditWorkflowInfo editType='sequence' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.remove }\n      render={ props => <RemoveWorkflow\n        { ...props }\n        ids={ selectedWorkflows }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows }\n      /> }\n    />\n  </Fragment>;\n\n  const actionResolver = (_workflowData, { rowIndex }) => rowIndex % 2 === 1 ?\n    null\n    : [\n      {\n        title: 'Edit info',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editInfo, search: `?workflow=${workflow.id}` })\n      },\n      {\n        title: 'Edit groups',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editGroups, search: `?workflow=${workflow.id}` })\n      },\n      {\n        title: 'Edit sequence',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editSequence, search: `?workflow=${workflow.id}` })\n      },\n      {\n        title: 'Delete',\n        style: { color: 'var(--pf-global--danger-color--100)'\t},\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.remove, search: `?workflow=${workflow.id}` })\n      }\n    ];\n\n  const setCheckedItems = (checkedWorkflows) =>\n    setSelectedWorkflows(checkedWorkflows.map(wf => wf.id));\n\n  const anyWorkflowsSelected = selectedWorkflows.length > 0;\n\n  const toolbarButtons = () => <ToolbarGroup className={ `pf-u-pl-lg top-toolbar` }>\n    <ToolbarItem>\n      <Link id=\"add-workflow-link\" to={ { pathname: routesLinks.workflows.add } }>\n        <Button\n          variant=\"primary\"\n          aria-label=\"Create approval process\"\n        >\n          Create approval process\n        </Button>\n      </Link>\n    </ToolbarItem>\n    <ToolbarItem>\n      <Link\n        id=\"remove-multiple-workflows\"\n        className={ anyWorkflowsSelected ? '' : 'disabled-link' }\n        to={ { pathname: routesLinks.workflows.remove } }\n      >\n        <Button\n          variant=\"link\"\n          isDisabled={ !anyWorkflowsSelected }\n          style={ { color: anyWorkflowsSelected ? 'var(--pf-global--danger-color--100)' : 'var(--pf-global--disabled-color--100)'\t} }\n          aria-label=\"Delete approval process\"\n        >\n          Delete\n        </Button>\n      </Link>\n    </ToolbarItem>\n  </ToolbarGroup>;\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandWorkflow(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        <AppTabs tabItems={ tabItems }/>\n      </TopToolbar>\n      <TableToolbarView\n        data={ data }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ handlePagination }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"approval processes\"\n        titleSingular=\"approval process\"\n        pagination={ meta }\n        setCheckedItems={ setCheckedItems }\n        toolbarButtons={ toolbarButtons }\n        filterValue={ filterValue }\n        onFilterChange={ handleFilterChange }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n        renderEmptyState={ () => (\n          <TableEmptyState\n            title={ filterValue === '' ? 'No approval processes' : 'No results found' }\n            Icon={ SearchIcon }\n            PrimaryAction={ () =>\n              filterValue !== '' ? (\n                <Button onClick={ () => handleFilterChange('') } variant=\"link\">\n                  Clear all filters\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? 'No approval processes.'\n                : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n            }\n          />\n        ) }\n      />\n    </Fragment>\n  );\n};\n\nexport default Workflows;\n","const routes = {\n  requests: {\n    index: '/requests',\n    addComment: '/requests/add-comment',\n    approve: '/requests/approve',\n    deny: '/requests/deny'\n  },\n  request: {\n    index: '/request',\n    addComment: '/request/add-comment',\n    approve: '/request/approve',\n    deny: '/request/deny'\n  },\n  workflows: {\n    index: '/workflows',\n    add: '/workflows/add-workflow',\n    remove: '/workflows/remove',\n    editInfo: '/workflows/edit-info',\n    editGroups: '/workflows/edit-groups',\n    editSequence: '/workflows/edit-sequence'\n  }\n};\n\nexport default routes;\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\nimport { Link }  from 'react-router-dom';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered\n    aria-label=\"No records\"\n  >\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={ Icon } />\n      <TextContent>\n        <Text component={ TextVariants.h1 }>{ title }</Text>\n      </TextContent>\n      <EmptyStateBody>\n        { description }\n        { renderDescription() }\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        { PrimaryAction && <PrimaryAction /> }\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n\nexport const EmptyStatePrimaryAction = ({ url, label }) => (\n  <Link to={ url }>\n    <Button variant=\"secondary\">{ label }</Button>\n  </Link>\n);\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <div className=\"toolbar-filter-input-group\">\n      <TextInput\n        placeholder={ placeholder }\n        value={ searchValue }\n        type=\"text\"\n        onChange={ onFilterChange }\n        aria-label={ placeholder }\n      />\n      <span className=\"filter-icons-container\">\n        { (isClearable && searchValue && (\n          <CloseIcon\n            className=\"clear-filter\"\n            width=\"16\"\n            height=\"16\"\n            onClick={ () => onFilterChange('') }\n          />\n        )) || <SearchIcon /> }\n      </span>\n    </div>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={ className }>\n      <Pagination\n        perPage={ limit || 50 }\n        itemCount={ count || 0 }\n        onPerPageSelect={ handleOnPerPageSelect }\n        page={ getCurrentPage(limit, offset) }\n        onSetPage={ handleSetPage }\n        direction=\"down\"\n        isCompact={ isCompact }\n        { ...props }\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    { children }\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","\nimport React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Level, LevelItem } from '@patternfly/react-core';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings  } from '../../helpers/shared/pagination';\nimport FilterToolbar from '../../presentational-components/shared/filter-toolbar-item';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport { DataListLoader } from './loader-placeholders';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse,\n  renderEmptyState,\n  sortBy,\n  onSort\n}) => {\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (data, id) => {\n    const newData = data.map(row => row.id === id ?\n      {\n        ...row,\n        selected: !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return newData;\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse ?\n    onCollapse(id, setRows, setOpen) :\n    setRows((rows) => setOpen(rows, id));\n\n  const selectRow = (_event, selected, index, { id } = {}) => index === -1\n    ? setRows(rows.map(row => ({ ...row, selected })))\n    : setRows((rows) => setSelected(rows, id));\n\n  const renderToolbar = (isLoading) => {\n    return (<Toolbar className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg pf-u-pb-lg top-toolbar` }>\n      <Level style={ { flex: 1 } }>\n        <LevelItem>\n          <Toolbar>\n            <FilterToolbar onFilterChange={ onFilterChange } searchValue={ filterValue } isClearable={ true }\n              placeholder={ `Filter by ${titleSingular}` }/>\n            { toolbarButtons() }\n          </Toolbar>\n        </LevelItem>\n\n        <LevelItem>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <AsyncPagination\n                  apiRequest={ fetchData }\n                  isDisabled={ isLoading }\n                  meta={ pagination }\n                  isCompact\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n        </LevelItem>\n      </Level>\n    </Toolbar>);\n  };\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ `${titlePlural} table` }\n            onCollapse={ onCollapseInternal }\n            rows={ rows }\n            cells={ columns }\n            onSelect={ isSelectable && selectRow }\n            actionResolver={ actionResolver }\n            className=\"table-fix\"\n            sortBy={ sortBy }\n            onSort={ onSort }\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 &&\n            <BottomPaginationContainer>\n              <AsyncPagination\n                dropDirection=\"up\"\n                meta={ pagination }\n                apiRequest={ fetchData }\n              />\n            </BottomPaginationContainer>\n          }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func,\n  renderEmptyState: propTypes.func,\n  sortBy: propTypes.object,\n  onSort: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  toolbarButtons: () => null,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null,\n  onSort: () => null\n};\n"],"sourceRoot":""}