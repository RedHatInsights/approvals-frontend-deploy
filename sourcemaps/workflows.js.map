{"version":3,"sources":["webpack:///./src/helpers/workflow/workflow-helper.js","webpack:///./src/redux/actions/workflow-actions.js","webpack:///./src/smart-components/workflow/add-groups/summary-content.js","webpack:///./src/smart-components/workflow/add-groups/workflow-information.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/smart-components/workflow/add-groups/set-groups.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/smart-components/workflow/add-groups/add-workflow-wizard.js","webpack:///./src/smart-components/workflow/add-groups/workflow-sequence.js","webpack:///./src/utilities/use-workflows.js","webpack:///./src/smart-components/workflow/edit-workflow-info-modal.js","webpack:///./src/smart-components/workflow/edit-workflow-groups-modal.js","webpack:///./src/smart-components/workflow/remove-workflow-modal.js","webpack:///./src/smart-components/workflow/expandable-content.js","webpack:///./src/smart-components/workflow/workflow-table-helpers.js","webpack:///./src/smart-components/workflow/workflows.js","webpack:///./src/constants/routes.js","webpack:///./src/utilities/use-query.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/table-empty-state.js"],"names":["workflowApi","getWorkflowApi","templateApi","getTemplateApi","fetchWorkflows","filter","pagination","defaultSettings","sortBy","paginationQuery","limit","offset","filterQuery","sortQuery","property","direction","getAxiosInstance","get","APPROVAL_API_BASE","fetchWorkflow","id","a","showWorkflow","removeWorkflow","workflowId","destroyWorkflow","removeWorkflows","selectedWorkflows","Promise","all","map","dispatch","getState","workflowReducer","workflows","finalPagination","meta","type","ActionTypes","payload","WorkflowHelper","apiProps","addWorkflow","workflowData","workflow","listTemplates","then","data","Error","addWorkflowToTemplate","notifications","fulfilled","variant","title","description","updateWorkflow","SummaryContent","formData","name","wfGroups","Stack","gutter","StackItem","Title","size","TextContent","Text","className","component","TextVariants","h5","Grid","GridItem","span","p","length","group","idx","key","value","label","propTypes","PropTypes","object","validateName","fetchWorkflowByName","find","wf","undefined","WorkflowInfoForm","initialValue","handleChange","setIsValid","useState","error","setError","setResult","result","handleNameChange","validateCallback","asyncDebounce","Form","FormGroup","isRequired","fieldId","isValid","helperTextInvalid","TextInput","aria-describedby","onBlur","onChange","_","event","onHandleChange","currentTarget","TextArea","string","func","bool","shape","getRbacGroupApi","fetchFilterApprovalGroups","filterValue","RBAC_API_BASE","uuid","SetGroups","isExpanded","setExpanded","groupValues","setGroupValues","inputValue","setInputValue","isFetching","setIsFetching","defaultOptions","useSelector","groupReducer","groups","useDispatch","useEffect","FETCH_RBAC_GROUPS","GroupHelper","cacheOptions","isClearable","isMulti","styles","menuPortal","base","zIndex","menuPortalTarget","document","body","menuPosition","menuPlacement","aria-label","onToggle","e","values","inpuValue","isexpanded","loadOptions","onInputChange","replace","AddWorkflow","setValues","push","useHistory","rbacGroups","stepIdReached","setStepIdReached","steps","enableNext","canJumpTo","options","nextButtonText","Wizard","isOpen","onClose","addNotification","dismissable","routes","index","onSave","group_refs","onNext","prevStepIdReached","defaultProps","initialValues","match","arrayOf","oneOfType","number","WorkflowSequence","sequence","handleSequenceChange","useWorkflow","shallowEqual","EditWorkflowInfoModal","postMethod","editType","setFormData","setInitialValue","useQuery","loadedWorkflow","onCancel","Modal","width","ActionGroup","Split","SplitItem","Button","onClick","connect","isRecordLoading","bindActionCreators","EditWorkflowGroupsModal","wfData","groupOptions","isDisabled","RemoveWorkflowModal","ids","fetchData","setSelectedWorkflows","submitting","setSubmitting","isSmall","actions","Fragment","Spinner","fill","defaultMessage","count","array","ExpandableContent","groupRefs","small","ref","listGroupNames","join","createRows","reduce","acc","selected","cells","parent","columns","cellFormatters","expandable","transforms","sortable","debouncedFilter","filteringCallback","initialState","isFiltering","workflowsListState","state","action","Workflows","useReducer","stateDispatch","history","scrollToTop","handleFilterChange","handlePagination","anyWorkflowsSelected","tabItems","eventKey","onSort","_e","sortWorkflows","isSelectable","exact","path","routesLinks","add","render","props","editInfo","editGroups","editSequence","remove","actionResolver","_workflowData","rowIndex","_event","_rowId","pathname","search","style","color","titlePlural","titleSingular","setCheckedItems","checkedWorkflows","toolbarButtons","ToolbarGroup","ToolbarItem","to","onFilterChange","isLoading","onCollapse","setRows","setOpen","expandWorkflow","rows","renderEmptyState","Icon","SearchIcon","PrimaryAction","requests","addComment","approve","deny","request","requiredParams","useLocation","query","URLSearchParams","curr","asyncFunction","debounceTime","onlyResolvesLast","awesomeDebouncePromise","AppTabs","location","activeTab","includes","activeKey","onSelect","tabIndex","item","withRouter","TableToolbarView","intl","useIntl","row","setSelected","newData","checkedItems","paginationConfig","itemCount","page","getCurrentPage","perPage","onSetPage","getNewPage","onPerPageSelect","page-type","actionsConfig","filterConfig","items","formatMessage","filterValues","placeholder","_index","_isOpen","dropDirection","isCompact","TableEmptyState","renderDescription","centered","icon","h1","any"],"mappings":"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","file":"js/workflows.js","sourcesContent":["import { getWorkflowApi, getTemplateApi, getAxiosInstance } from '../shared/user-login';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\n\nconst workflowApi = getWorkflowApi();\nconst templateApi = getTemplateApi();\n\nexport function fetchWorkflows(filter = '', pagination = defaultSettings, sortBy) {\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains_i]=${filter}`;\n  const sortQuery = sortBy ? `&sort_by=${sortBy.property}:${sortBy.direction}` : '';\n\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows/?${filterQuery}${paginationQuery}${sortQuery}`\n  );\n}\n\nexport async function fetchWorkflow(id) {\n  return await workflowApi.showWorkflow(id);\n}\n\nexport function fetchWorkflowByName(name) {\n  return fetchWorkflows(name);\n}\n\nexport function updateWorkflow(data) {\n  return workflowApi.updateWorkflow(data.id, data);\n}\n\nexport  function addWorkflow(workflow) {\n  return templateApi.listTemplates().then(({ data }) => {\n    // workaround for v1. Need to pass template ID with the workflow. Assigning to first template\n    if (!data[0]) {\n      throw new Error('No template exists');\n    }\n\n    return data[0].id;\n\n  }).then(id => workflowApi.addWorkflowToTemplate(id, workflow, {}));\n}\n\nexport async function removeWorkflow(workflowId) {\n  return await workflowApi.destroyWorkflow(workflowId);\n}\n\nexport async function removeWorkflows(selectedWorkflows) {\n  return Promise.all(selectedWorkflows.map(async workflowId => await workflowApi.destroyWorkflow(workflowId)));\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as WorkflowHelper from '../../helpers/workflow/workflow-helper';\n\nexport const fetchWorkflows = (filter, pagination) => (dispatch, getState) => {\n  const { sortBy, workflows } = getState().workflowReducer;\n\n  let finalPagination = pagination;\n\n  if (!pagination && workflows) {\n    const { limit, offset } = workflows.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch ({\n    type: ActionTypes.FETCH_WORKFLOWS,\n    payload: WorkflowHelper.fetchWorkflows(filter, finalPagination, sortBy)\n  });\n};\n\nexport const fetchWorkflow = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW,\n  payload: WorkflowHelper.fetchWorkflow(apiProps)\n});\n\nexport const addWorkflow = (workflowData) => ({\n  type: ActionTypes.ADD_WORKFLOW,\n  payload: WorkflowHelper.addWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding approval process',\n        description: 'The approval process was added successfully.'\n      }\n    }\n  }\n});\n\nexport const updateWorkflow = (workflowData) => ({\n  type: ActionTypes.UPDATE_WORKFLOW,\n  payload: WorkflowHelper.updateWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating approval process',\n        description: 'The approval process was updated successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflow = (workflow) => ({\n  type: ActionTypes.REMOVE_WORKFLOW,\n  payload: WorkflowHelper.removeWorkflow(workflow),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval process',\n        description: 'The approval process was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflows = (workflows) => ({\n  type: ActionTypes.REMOVE_WORKFLOWS,\n  payload: WorkflowHelper.removeWorkflows(workflows),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval processes',\n        description: 'The selected approval processes were removed successfully.'\n      }\n    }\n  }\n});\n\nexport const expandWorkflow = (id) => ({\n  type: ActionTypes.EXPAND_WORKFLOW,\n  payload: id\n});\n\nexport const refreshWorkflows = () => (dispatch, getState) => {\n  const { workflowReducer: { filterValue, workflows: { meta: { limit, offset }}}} = getState();\n\n  dispatch(fetchWorkflows(filterValue, { limit, offset }));\n};\n\nexport const sortWorkflows = (sortBy) => ({\n  type: ActionTypes.SORT_WORKFLOWS,\n  payload: sortBy\n});\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst SummaryContent = ({ formData }) => {\n  const { name, description, wfGroups } = formData ? formData : { name: '', description: '', wfGroups: []};\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                    Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              { wfGroups && wfGroups.length > 0 && wfGroups.map((group, idx)  =>\n              { return (<Fragment key={ `Groups` }>\n                <Grid gutter=\"md\">\n                  <GridItem span={ 2 }>\n                    <Text key={ group.value } className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                      { idx === 0 ? 'Groups' : '' }\n                    </Text>\n                  </GridItem>\n                  <GridItem span={ 10 }>\n                    <Text key={ group.label } className=\"data-table-detail content\" component={ TextVariants.p }>\n                      { `${wfGroups[idx].label}` }\n                    </Text>\n                  </GridItem>\n                </Grid>\n              </Fragment>); })\n              }\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  formData: PropTypes.object\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchWorkflowByName } from '../../../helpers/workflow/workflow-helper';\n\nconst validateName = (name) => fetchWorkflowByName(name)\n.then(({ data }) => {\n  return data.find(wf => name === wf.name)\n    ? 'Name has already been taken'\n    : undefined;\n});\n\nconst debouncedValidator = (data, validateCallback) => asyncDebounce(validateName(data).then((result) => validateCallback(result)));\n\nconst WorkflowInfoForm = ({ formData, initialValue, handleChange, setIsValid, title = undefined }) => {\n  const name = formData.name || '';\n  const description = formData.description || '';\n  const [ error, setError ] = useState(undefined);\n\n  const setResult = (result) => {\n    setError(result);\n    setIsValid(!result);\n  };\n\n  const onHandleChange = (name) => {\n    setError(!name || name.length < 1 ? 'Enter a name for the approval process' : undefined);\n    handleChange({ name });\n  };\n\n  const handleNameChange = (name) => {\n    if (!name || name.length < 1) {\n      setError('Enter a name for the approval process');\n    }\n    else if (!initialValue || initialValue.name !== name) {\n      debouncedValidator(name, setResult);\n    }\n    else {\n      setError(undefined);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Approval process name\"\n              isRequired\n              fieldId=\"workflow-name\"\n              isValid={ !error }\n              helperTextInvalid={ error }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"workflow-name\"\n                name=\"workflow-name\"\n                aria-describedby=\"workflow-name\"\n                value={ name }\n                isValid={ !error }\n                onBlur={ () => handleNameChange(name) }\n                onChange={ (_, event) => onHandleChange(event.currentTarget.value) }\n              />\n            </FormGroup>\n            <FormGroup label=\"Description\" fieldId=\"workflow-description\">\n              <TextArea\n                type=\"text\"\n                id=\"workflow-description\"\n                name=\"workflow-description\"\n                value={ description }\n                onChange={ (_, event) => handleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowInfoForm.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  isValid: PropTypes.bool,\n  setIsValid: PropTypes.func.isRequired,\n  initialValue: PropTypes.shape({\n    name: PropTypes.string })\n};\n\nexport default WorkflowInfoForm;\n","import { getRbacGroupApi, getAxiosInstance } from '../shared/user-login';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst api = getRbacGroupApi();\n\nexport async function fetchGroupNames(groupRefs) {\n  if (groupRefs) {\n    return Promise.all(groupRefs.map(async id => {\n      try {\n        const group = await api.getGroup(id);\n        return group.name;\n      } catch (error) {\n        if (error.status !== 404) {\n          throw error;\n        }\n        else {\n          return id;\n        }\n      }\n    }));\n  }\n}\n\nexport const fetchGroupName = (id) =>\n  getAxiosInstance().get(`${RBAC_API_BASE}/groups/${id}/`)\n  .then((data) => data.name).catch((error) => {\n    if (error.status !== 404) {\n      throw error;\n    } else {\n      return id;\n    }\n  });\n\nexport const fetchFilterApprovalGroups = (filterValue) => {\n  const filterQuery = `&name=${filterValue}`;\n  return getAxiosInstance().get(`${RBAC_API_BASE}/groups/?role_names=\",Approval Administrator,Approval Approver,\"\n  ${filterValue && filterValue.length > 0\n    ? filterQuery : ''}`)\n  .then(({ data }) => (data && data.length > 0 ? data.map(({ uuid, name }) => ({ label: name, value: uuid })) : undefined));\n};\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AsyncSelect from 'react-select/async';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchFilterApprovalGroups } from '../../../helpers/group/group-helper';\nimport { WorkflowInfoFormLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Stack,\n  StackItem,\n  Title\n} from '@patternfly/react-core';\nimport { fetchRbacApprovalGroups } from '../../../redux/actions/group-actions';\n\nconst SetGroups = ({ formData, handleChange, title }) => {\n  const [ isExpanded, setExpanded ] = useState(false);\n  const [ groupValues, setGroupValues ] = useState([]);\n  const [ inputValue, setInputValue ] = useState([]);\n  const [ isFetching, setIsFetching ] = useState([]);\n\n  const defaultOptions = useSelector(({ groupReducer: { groups }}) => groups || []);\n\n  const onInputChange = (newValue) => {\n    const value = newValue.replace(/\\W/g, '');\n    setInputValue(value);\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      fetchRbacApprovalGroups()).then(() => setIsFetching(false));\n  }, []);\n\n  useEffect(() => {\n    setGroupValues(formData.wfGroups ? formData.wfGroups : []);\n  }, [ formData.wfGroups ]);\n\n  const onToggle = (isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  const onGroupChange = (values) => {\n    setGroupValues(values);\n    handleChange({ wfGroups: values });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem key={ 'title' }>\n          <Title size=\"md\">{ title || 'Set groups' }</Title>\n        </StackItem>\n        <StackItem key={ 'group' }>\n          { isFetching && <WorkflowInfoFormLoader/> }\n          { !isFetching &&\n              <AsyncSelect\n                cacheOptions\n                isClearable\n                isMulti\n                styles={ { menuPortal: base => ({ ...base, zIndex: 9999 }) } }\n                menuPortalTarget={ document.body }\n                menuPosition={ 'fixed' }\n                menuPlacement={ 'bottom' }\n                label={ 'Group' }\n                aria-label={ 'Group' }\n                onToggle={ onToggle }\n                key={ `groups` }\n                onChange={ (e) => onGroupChange(e) }\n                value={ groupValues }\n                inpuValue={ inputValue }\n                isexpanded={ isExpanded }\n                loadOptions={ asyncDebounce(fetchFilterApprovalGroups) }\n                defaultOptions={ defaultOptions }\n                onInputChange={ (e) => onInputChange(e) }\n              /> }\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetGroups.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func\n};\n\nexport default SetGroups;\n","import { FETCH_RBAC_GROUPS } from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchRbacApprovalGroups = () => ({\n  type: FETCH_RBAC_GROUPS,\n  payload: GroupHelper.fetchFilterApprovalGroups()\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, refreshWorkflows } from '../../../redux/actions/workflow-actions';\nimport SummaryContent from './summary-content';\nimport WorkflowInfoForm from './workflow-information';\nimport SetGroups from './set-groups';\nimport routes from '../../../constants/routes';\n\nconst AddWorkflow = () => {\n  const [ formData, setValues ] = useState({ wfGroups: []});\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  const rbacGroups = useSelector(({ groupReducer: { groups }}) => groups);\n  const [ isValid, setIsValid ] = useState(formData.name !== undefined && formData.name.length > 0);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const onNext = ({ id }) => {\n    setStepIdReached(prevStepIdReached =>  prevStepIdReached < id ? id : prevStepIdReached);\n  };\n\n  const steps = [\n    { id: 1,\n      name: 'General information',\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      component: <WorkflowInfoForm formData={ formData }\n        handleChange={ handleChange }\n        setIsValid={ setIsValid }/> },\n    { id: 2,\n      name: 'Set groups',\n      canJumpTo: stepIdReached >= 2,\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      component: <SetGroups formData={ formData }\n        handleChange={ handleChange } options={ rbacGroups } /> },\n    { id: 3,\n      canJumpTo: stepIdReached >= 3,\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      name: 'Review', component: <SummaryContent formData={ formData }\n        options={ rbacGroups } />, nextButtonText: 'Confirm' }\n  ];\n\n  const onSave = () => {\n    const { name, description, wfGroups } = formData;\n    const workflowData = { name, description,\n      group_refs: wfGroups && wfGroups.length > 0 ? wfGroups.map(group => ({ name: group.label, uuid: group.value })) : []};\n    push(routes.workflows.index);\n    dispatch(addWorkflow(workflowData)).then(() => dispatch(refreshWorkflows()));\n  };\n\n  const onCancel = () => {\n    dispatch(addNotification({\n      variant: 'warning',\n      title: 'Creating approval process',\n      dismissable: true,\n      description: 'Creating approval process was cancelled by the user.'\n    }));\n    push(routes.workflows.index);\n  };\n\n  return (\n    <Wizard\n      title={ 'Create approval process' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSave  }\n      onNext={  onNext }\n      steps={ steps }\n    />\n  );\n};\n\nAddWorkflow.defaultProps = {\n  rbacGroups: [],\n  initialValues: {}\n};\n\nAddWorkflow.propTypes = {\n  match: PropTypes.object,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n};\n\nexport default AddWorkflow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  Title\n} from '@patternfly/react-core';\n\nconst WorkflowSequence = ({ formData, handleChange, isValid, setIsValid, title = undefined }) => {\n  const { sequence } = formData;\n\n  const handleSequenceChange = (sequence) => {\n    setIsValid(sequence >= 0);\n    handleChange({ sequence });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Enter sequence\"\n              isRequired\n              fieldId=\"workflow-sequence\"\n              isValid={ isValid }\n              helperTextInvalid={ 'Enter a positive number' }\n            >\n              <TextInput\n                isRequired\n                type=\"number\"\n                id=\"workflow-sequence\"\n                isValid={ isValid }\n                name=\"workflow-sequence\"\n                aria-describedby=\"workflow-name\"\n                value={ sequence }\n                onChange={ (_, event) => handleSequenceChange(event.currentTarget.value) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowSequence.propTypes = {\n  sequence: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  setIsValid: PropTypes.func.isRequired,\n  isValid: PropTypes.bool\n};\n\nexport default WorkflowSequence;\n","import { shallowEqual, useSelector } from 'react-redux';\n\nconst useWorkflow = (id) => {\n  const { workflows } = useSelector(({ workflowReducer: { workflows }}) => ({ workflows }), shallowEqual);\n\n  return workflows && workflows.data && workflows.data.find((wf) => wf.id === id);\n};\n\nexport default useWorkflow;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { useHistory } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport WorkflowInfoForm from './add-groups/workflow-information';\nimport WorkflowSequenceForm from './add-groups/workflow-sequence';\nimport useQuery from '../../utilities/use-query';\nimport useWorkflow from '../../utilities/use-workflows';\n\nimport '../../App.scss';\n\nconst EditWorkflowInfoModal = ({\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  workflow,\n  isFetching,\n  editType\n}) => {\n  const [ formData, setFormData ] = useState({});\n  const [ initialValue, setInitialValue ] = useState({});\n  const [ isValid, setIsValid ] = useState(true);\n\n  const { push } = useHistory();\n  const [{ workflow: id }] = useQuery([ 'workflow' ]);\n  const loadedWorkflow = useWorkflow(id);\n\n  const handleChange = data => setFormData({ ...formData, ...data });\n\n  useEffect(() => {\n    if (!loadedWorkflow) {\n      fetchWorkflow(id).then((data) => { setFormData({ ...formData, ...data.value }); setInitialValue({ ...data.value });});\n    } else {\n      setFormData({ ...formData, ...loadedWorkflow });\n    }\n  }, []);\n\n  const onSave = () => {\n    if (!isValid) {return;}\n\n    const { name, description, sequence } = formData;\n    const workflowData = { id, name, description, sequence };\n    updateWorkflow(workflowData).then(() => postMethod()).then(() => push('/workflows'));\n  };\n\n  const onCancel = () => {\n    const { title, description } =\n        editType === 'sequence' ? { title: `Edit approval process's sequence`,\n          description: `Edit approval process's sequence was cancelled by the user.` } :\n          { title: `Edit approval process's information`,\n            description: `Edit approval process's information was cancelled by the user.` };\n    addNotification({\n      variant: 'warning',\n      title,\n      dismissable: true,\n      description\n    });\n    push('/workflows');\n  };\n\n  const name = loadedWorkflow ? loadedWorkflow.name : workflow && workflow.name;\n\n  return (\n    <Modal\n      title={ editType === 'sequence' ? 'Edit sequence' : 'Edit information' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"edit-workflow-info-modal-info\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (editType === 'info' ?\n              <WorkflowInfoForm formData={ formData } initialValue={ initialValue }\n                handleChange={ handleChange }\n                setIsValid={ setIsValid }\n                title={ `Make any changes to approval process ${name}` }/> :\n              <WorkflowSequenceForm formData={ formData }\n                initialValue={ initialValue }\n                handleChange={ handleChange }\n                isValid={ isValid }\n                setIsValid={ setIsValid }\n                title={ `Set the sequence for the approval process ${name}` }/>\n            ) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label={ 'Save' }\n                  id=\"save-edit-workflow-info\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  id=\"cancel-edit-workflow-info\"\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowInfoModal.defaultProps = {\n  isFetching: false,\n  editType: 'info'\n};\n\nEditWorkflowInfoModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  workflow: PropTypes.object,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { workflow, isRecordLoading }}) => ({\n  workflow,\n  isFetching: isRecordLoading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWorkflowInfoModal);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { useHistory } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport SetGroups from './add-groups/set-groups';\nimport useQuery from '../../utilities/use-query';\nimport useWorkflow from '../../utilities/use-workflows';\n\nimport '../../App.scss';\n\nconst EditWorkflowGroupsModal = ({\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  isFetching\n}) => {\n  const [ formData, setValues ] = useState({});\n\n  const { push } = useHistory();\n  const [{ workflow: id }] = useQuery([ 'workflow' ]);\n  const loadedWorkflow = useWorkflow(id);\n\n  const handleChange = data => {\n    setValues({ ...formData, ...data });\n  };\n\n  const initialValues = (wfData) => {\n    const groupOptions = wfData.group_refs.map((group) => {\n      return { label: group.name, value: group.uuid };\n    });\n    const data = { ...wfData, wfGroups: groupOptions };\n    return data;\n  };\n\n  useEffect(() => {\n    if (!loadedWorkflow) {\n      fetchWorkflow(id).then((result) => setValues(initialValues(result.value)));\n    } else {\n      setValues(initialValues(loadedWorkflow));\n    }\n  }, []);\n\n  const onSave = () => {\n    const { wfGroups } = formData;\n    const workflowData = { group_refs: wfGroups ? wfGroups.map(group => ({ name: group.label, uuid: group.value })) : []};\n    updateWorkflow({ id, ...workflowData }).then(() => postMethod()).then(()=>push('/workflows'));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Edit approval process's groups`,\n      dismissable: true,\n      description: `Edit approval process's groups was cancelled by the user.`\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ `Edit approval process's groups` }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"workflow-groups-formgroup\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (\n              <StackItem className=\"groups-modal\">\n                <SetGroups className=\"groups-modal\" formData={ formData }\n                  handleChange={ handleChange }\n                  title={ `Add or remove ${formData.name}'s groups` }/>\n              </StackItem>) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button aria-label={ 'Save' }\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isDisabled={ isFetching }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowGroupsModal.defaultProps = {\n  isFetching: false\n};\n\nEditWorkflowGroupsModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { isRecordLoading }}) => ({\n  isFetching: isRecordLoading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWorkflowGroupsModal);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal, Button, Split, SplitItem, Text, TextContent, TextVariants, Spinner } from '@patternfly/react-core';\nimport { WarningTriangleIcon } from '@patternfly/react-icons';\nimport { removeWorkflow, removeWorkflows } from '../../redux/actions/workflow-actions';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\n\nconst RemoveWorkflowModal = ({\n  ids,\n  removeWorkflow,\n  removeWorkflows,\n  fetchData,\n  setSelectedWorkflows\n}) => {\n  const [ submitting, setSubmitting ] = useState(false);\n  const { push } = useHistory();\n  const [{ workflow: workflowId }] = useQuery([ 'workflow' ]);\n\n  if (!workflowId && (!ids || ids.length === 0)) {\n    return null;\n  }\n\n  const removeWf = () =>(workflowId ? removeWorkflow(workflowId) : removeWorkflows(ids))\n  .catch(() => setSubmitting(false))\n  .then(() => push(routes.workflows.index))\n  .then(() => setSelectedWorkflows([]))\n  .then(() => fetchData());\n\n  const onCancel = () => push(routes.workflows.index);\n\n  const onSubmit = () => {\n    setSubmitting(true);\n    return removeWf();\n  };\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      width={ '40%' }\n      title={ '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button id=\"cancel-remove-workflow\" key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button id=\"submit-remove-workflow\" key=\"submit\" variant=\"primary\" type=\"button\" isDisabled={ submitting } onClick={ onSubmit }>\n          { submitting ? <React.Fragment><Spinner size=\"sm\" /> Removing </React.Fragment> : 'Remove' }\n        </Button>\n      ] }\n    >\n      <Split gutter=\"md\">\n        <SplitItem>\n          <WarningTriangleIcon size=\"xl\" fill=\"#f0ab00\" />\n        </SplitItem>\n        <SplitItem>\n          <TextContent>\n            <Text component={ TextVariants.p }>\n              <FormattedMessage\n                id=\"remove-workflow-modal\"\n                defaultMessage={ `Removing {count, number} {count, plural,\n              one {approval process}\n              other {approval processes}\n            }` }\n                values={ {\n                  count: workflowId ? 1 : ids.length\n                } }\n              />\n            </Text>\n          </TextContent>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemoveWorkflowModal.propTypes = {\n  removeWorkflows: PropTypes.func.isRequired,\n  removeWorkflow: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  setSelectedWorkflows: PropTypes.func.isRequired,\n  ids: PropTypes.array\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  removeWorkflow,\n  removeWorkflows\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(RemoveWorkflowModal);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ description, groupRefs }) => {\n  const listGroupNames = (groupRefs) => groupRefs.map((ref) => ref.name);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Description</Text>\n        <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ description }</Text>\n      </TextContent>\n      <TextContent>\n        <Fragment>\n          <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Groups</Text>\n          <Text className=\"data-table-detail content\"\n            component={ TextVariants.h5 }>\n            { listGroupNames(groupRefs).join(',') }\n          </Text>\n        </Fragment>\n      </TextContent>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  description: PropTypes.string,\n  groupRefs: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default ExpandableContent;\n","import React from 'react';\n\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data) =>\n  data.reduce((acc,\n    {\n      id,\n      name,\n      description,\n      sequence,\n      group_refs\n    }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      selected: false,\n      cells: [ name, description, sequence ]\n    }, {\n      parent: key * 2,\n      cells: [{ title: <ExpandableContent\n        description={ description }\n        groupRefs={ group_refs }\n        id={ id }\n      /> }]\n    }\n  ]), []);\n\n","import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Route, Link, useHistory } from 'react-router-dom';\nimport { ToolbarGroup, ToolbarItem, Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { expandable, sortable } from '@patternfly/react-table';\nimport { fetchWorkflows, expandWorkflow, sortWorkflows } from '../../redux/actions/workflow-actions';\nimport AddWorkflow from './add-groups/add-workflow-wizard';\nimport EditWorkflowInfo from './edit-workflow-info-modal';\nimport EditWorkflowGroups from './edit-workflow-groups-modal';\nimport RemoveWorkflow from './remove-workflow-modal';\nimport { createRows } from './workflow-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../../smart-components/app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\nimport routesLinks from '../../constants/routes';\n\nconst columns = [{\n  title: 'Name',\n  cellFormatters: [ expandable ],\n  transforms: [ sortable ]\n},\n{ title: 'Description', transforms: [ sortable ]},\n{ title: 'Sequence', transforms: [ sortable ]}\n];\n\nconst debouncedFilter = asyncDebounce(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchWorkflows(filter, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst workflowsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Workflows = () => {\n  const [ selectedWorkflows, setSelectedWorkflows ] = useState([]);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch ] = useReducer(\n    workflowsListState,\n    initialState\n  );\n  const { workflows: { data, meta }, sortBy } = useSelector(\n    ({ workflowReducer: { workflows, sortBy }}) => ({ workflows, sortBy })\n    , shallowEqual);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchWorkflows(filterValue, defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const tabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n    { eventKey: 1, title: 'Approval processes', name: '/workflows' }];\n\n  const handlePagination = (pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(fetchWorkflows(filterValue, pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const onSort = (_e, index, direction, { property }) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(sortWorkflows({ index, direction, property }));\n    return dispatch(fetchWorkflows(filterValue))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path={ routesLinks.workflows.add } render={ props => <AddWorkflow { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.editInfo } render={ props => <EditWorkflowInfo editType='info' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.editGroups } render={ props => <EditWorkflowGroups editType='groups' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.editSequence } render={ props => <EditWorkflowInfo editType='sequence' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.remove }\n      render={ props => <RemoveWorkflow\n        { ...props }\n        ids={ selectedWorkflows }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows }\n      /> }\n    />\n  </Fragment>;\n\n  const actionResolver = (_workflowData, { rowIndex }) => rowIndex % 2 === 1 ?\n    null\n    : [\n      {\n        title: 'Edit info',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editInfo, search: `?workflow=${workflow.id}` })\n      },\n      {\n        title: 'Edit groups',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editGroups, search: `?workflow=${workflow.id}` })\n      },\n      {\n        title: 'Edit sequence',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editSequence, search: `?workflow=${workflow.id}` })\n      },\n      {\n        title: 'Delete',\n        style: { color: 'var(--pf-global--danger-color--100)'\t},\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.remove, search: `?workflow=${workflow.id}` })\n      }\n    ];\n\n  const setCheckedItems = (checkedWorkflows) =>\n    setSelectedWorkflows(checkedWorkflows.map(wf => wf.id));\n\n  const anyWorkflowsSelected = selectedWorkflows.length > 0;\n\n  const toolbarButtons = () => <ToolbarGroup className={ `pf-u-pl-lg top-toolbar` }>\n    <ToolbarItem>\n      <Link id=\"add-workflow-link\" to={ { pathname: routesLinks.workflows.add } }>\n        <Button\n          variant=\"primary\"\n          aria-label=\"Create approval process\"\n        >\n          Create approval process\n        </Button>\n      </Link>\n    </ToolbarItem>\n    <ToolbarItem>\n      <Link\n        id=\"remove-multiple-workflows\"\n        className={ anyWorkflowsSelected ? '' : 'disabled-link' }\n        to={ { pathname: routesLinks.workflows.remove } }\n      >\n        <Button\n          variant=\"link\"\n          isDisabled={ !anyWorkflowsSelected }\n          style={ { color: anyWorkflowsSelected ? 'var(--pf-global--danger-color--100)' : 'var(--pf-global--disabled-color--100)'\t} }\n          aria-label=\"Delete approval process\"\n        >\n          Delete\n        </Button>\n      </Link>\n    </ToolbarItem>\n  </ToolbarGroup>;\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandWorkflow(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        <AppTabs tabItems={ tabItems }/>\n      </TopToolbar>\n      <TableToolbarView\n        sortBy={ sortBy }\n        onSort={ onSort }\n        data={ data }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ handlePagination }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"approval processes\"\n        titleSingular=\"approval process\"\n        pagination={ meta }\n        setCheckedItems={ setCheckedItems }\n        toolbarButtons={ toolbarButtons }\n        filterValue={ filterValue }\n        onFilterChange={ handleFilterChange }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n        renderEmptyState={ () => (\n          <TableEmptyState\n            title={ filterValue === '' ? 'No approval processes' : 'No results found' }\n            Icon={ SearchIcon }\n            PrimaryAction={ () =>\n              filterValue !== '' ? (\n                <Button onClick={ () => handleFilterChange('') } variant=\"link\">\n                  Clear all filters\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? 'No approval processes.'\n                : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n            }\n          />\n        ) }\n      />\n    </Fragment>\n  );\n};\n\nexport default Workflows;\n","const routes = {\n  requests: {\n    index: '/requests',\n    addComment: '/requests/add-comment',\n    approve: '/requests/approve',\n    deny: '/requests/deny'\n  },\n  request: {\n    index: '/request',\n    addComment: '/request/add-comment',\n    approve: '/request/approve',\n    deny: '/request/deny'\n  },\n  workflows: {\n    index: '/workflows',\n    add: '/workflows/add-workflow',\n    remove: '/workflows/remove',\n    editInfo: '/workflows/edit-info',\n    editGroups: '/workflows/edit-groups',\n    editSequence: '/workflows/edit-sequence'\n  }\n};\n\nexport default routes;\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","\nimport React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings, getCurrentPage, getNewPage  } from '../../helpers/shared/pagination';\nimport { DataListLoader } from './loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse,\n  renderEmptyState,\n  sortBy,\n  onSort\n}) => {\n  const intl = useIntl();\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (data, id) => {\n    const newData = data.map(row => row.id === id ?\n      {\n        ...row,\n        selected: !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return newData;\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse ?\n    onCollapse(id, setRows, setOpen) :\n    setRows((rows) => setOpen(rows, id));\n\n  const selectRow = (_event, selected, index, { id } = {}) => index === -1\n    ? setRows(rows.map(row => ({ ...row, selected })))\n    : setRows((rows) => setSelected(rows, id));\n\n  const paginationConfig = {\n    itemCount: pagination.count,\n    page: getCurrentPage(pagination.limit, pagination.offset),\n    perPage: pagination.limit,\n    onSetPage: (_e, page) => fetchData({ ...pagination, offset: getNewPage(page, pagination.limit) }),\n    onPerPageSelect: (_e, size) => fetchData({ ...pagination, limit: size }),\n    isDisabled: isLoading\n  };\n\n  const renderToolbar = () => (\n    <PrimaryToolbar\n      className=\"pf-u-p-lg ins__approval__primary_toolbar\"\n      pagination={ paginationConfig }\n      { ...(toolbarButtons && { actionsConfig: {  actions: [ toolbarButtons() ]}}) }\n      filterConfig={ {\n        items: [{\n          label: intl.formatMessage({\n            id: 'name',\n            defaultMessage: 'Name'\n          }),\n          filterValues: {\n            placeholder: intl.formatMessage({\n              id: 'filter-by-name',\n              defaultMessage: 'Filter by {title}'\n            }, { title: titleSingular }),\n            'aria-label': intl.formatMessage({\n              id: 'filter-by-name',\n              defaultMessage: 'Filter by {title}'\n            }, { title: titleSingular }),\n            onChange: (_event, value) => onFilterChange(value),\n            value: filterValue\n          }\n        }]\n      } }\n    />\n  );\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ `${titlePlural} table` }\n            onCollapse={ onCollapseInternal }\n            rows={ rows }\n            cells={ columns }\n            onSelect={ isSelectable && selectRow }\n            actionResolver={ actionResolver }\n            className=\"table-fix\"\n            sortBy={ sortBy }\n            onSort={ onSort }\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 && (\n            <PrimaryToolbar\n              className=\"pf-u-pl-lg pf-u-pr-lg ins__approval__primary_toolbar\"\n              pagination={ {\n                ...paginationConfig,\n                dropDirection: 'up',\n                variant: 'bottom',\n                isCompact: false\n              } }\n            />\n          ) }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func,\n  renderEmptyState: propTypes.func,\n  sortBy: propTypes.object,\n  onSort: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null,\n  onSort: () => null\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\nimport { Link }  from 'react-router-dom';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered\n    aria-label=\"No records\"\n  >\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={ Icon } />\n      <TextContent>\n        <Text component={ TextVariants.h1 }>{ title }</Text>\n      </TextContent>\n      <EmptyStateBody>\n        { description }\n        { renderDescription() }\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        { PrimaryAction && <PrimaryAction /> }\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n\nexport const EmptyStatePrimaryAction = ({ url, label }) => (\n  <Link to={ url }>\n    <Button variant=\"secondary\">{ label }</Button>\n  </Link>\n);\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n"],"sourceRoot":""}