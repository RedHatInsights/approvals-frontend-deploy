{"version":3,"sources":["webpack:///./src/helpers/workflow/workflow-helper.js","webpack:///./src/redux/actions/workflow-actions.js","webpack:///./src/smart-components/workflow/add-groups/summary-content.js","webpack:///./src/smart-components/workflow/add-groups/workflow-information.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/smart-components/workflow/add-groups/set-groups.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/smart-components/workflow/add-groups/add-workflow-wizard.js","webpack:///./src/smart-components/workflow/add-groups/workflow-sequence.js","webpack:///./src/utilities/use-workflows.js","webpack:///./src/smart-components/workflow/edit-workflow-info-modal.js","webpack:///./src/smart-components/workflow/edit-workflow-groups-modal.js","webpack:///./src/smart-components/workflow/remove-workflow-modal.js","webpack:///./src/smart-components/workflow/expandable-content.js","webpack:///./src/smart-components/workflow/workflow-table-helpers.js","webpack:///./src/smart-components/workflow/workflows.js","webpack:///./src/constants/routes.js","webpack:///./src/utilities/use-query.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/table-empty-state.js"],"names":["workflowApi","getWorkflowApi","templateApi","getTemplateApi","fetchWorkflows","filter","pagination","defaultSettings","sortBy","paginationQuery","Math","max","limit","offset","filterQuery","sortQuery","property","direction","getAxiosInstance","get","APPROVAL_API_BASE","fetchWorkflow","id","a","showWorkflow","removeWorkflow","workflowId","destroyWorkflow","removeWorkflows","selectedWorkflows","Promise","all","map","dispatch","getState","workflowReducer","workflows","filterValue","finalPagination","meta","type","ActionTypes","payload","WorkflowHelper","apiProps","addWorkflow","workflowData","workflow","listTemplates","then","data","Error","addWorkflowToTemplate","notifications","fulfilled","variant","title","description","updateWorkflow","setFilterValueWorkflows","SummaryContent","formData","name","wfGroups","Stack","gutter","StackItem","Title","size","TextContent","Text","className","component","TextVariants","h5","Grid","GridItem","span","p","length","group","idx","key","value","label","propTypes","PropTypes","object","validateName","fetchWorkflowByName","find","wf","undefined","WorkflowInfoForm","initialValue","handleChange","setIsValid","useState","error","setError","setResult","result","handleNameChange","validateCallback","asyncDebounce","Form","FormGroup","isRequired","fieldId","isValid","helperTextInvalid","TextInput","aria-describedby","onBlur","onChange","_","event","onHandleChange","currentTarget","TextArea","string","func","bool","shape","getRbacGroupApi","fetchFilterApprovalGroups","RBAC_API_BASE","uuid","SetGroups","isExpanded","setExpanded","groupValues","setGroupValues","inputValue","setInputValue","isFetching","setIsFetching","defaultOptions","useSelector","groupReducer","groups","useDispatch","useEffect","FETCH_RBAC_GROUPS","GroupHelper","cacheOptions","isClearable","isMulti","styles","menuPortal","base","zIndex","menuPortalTarget","document","body","menuPosition","menuPlacement","aria-label","onToggle","e","values","inpuValue","isexpanded","loadOptions","onInputChange","replace","AddWorkflow","setValues","push","useHistory","rbacGroups","stepIdReached","setStepIdReached","steps","enableNext","canJumpTo","options","nextButtonText","Wizard","isOpen","onClose","addNotification","dismissable","routes","index","onSave","group_refs","onNext","prevStepIdReached","defaultProps","initialValues","match","arrayOf","oneOfType","number","WorkflowSequence","sequence","handleSequenceChange","useWorkflow","shallowEqual","EditWorkflowInfoModal","postMethod","editType","setFormData","setInitialValue","useQuery","loadedWorkflow","onCancel","Modal","width","ActionGroup","Split","SplitItem","Button","onClick","connect","isRecordLoading","bindActionCreators","EditWorkflowGroupsModal","wfData","groupOptions","isDisabled","RemoveWorkflowModal","ids","fetchData","setSelectedWorkflows","submitting","setSubmitting","isSmall","actions","Fragment","Spinner","fill","defaultMessage","count","array","ExpandableContent","groupRefs","small","ref","listGroupNames","join","createRows","reduce","acc","selected","cells","parent","columns","cellFormatters","expandable","transforms","sortable","debouncedFilter","filteringCallback","prepareChips","category","chips","workflowsListState","state","action","isFiltering","Workflows","filterValueRedux","useReducer","initialState","stateDispatch","history","scrollToTop","handleFilterChange","handlePagination","anyWorkflowsSelected","tabItems","eventKey","onSort","_e","sortWorkflows","isSelectable","exact","path","routesLinks","add","render","props","editInfo","editGroups","editSequence","remove","actionResolver","_workflowData","rowIndex","_event","_rowId","pathname","search","style","color","titlePlural","titleSingular","setCheckedItems","checkedWorkflows","toolbarButtons","ToolbarGroup","ToolbarItem","to","onFilterChange","isLoading","onCollapse","setRows","setOpen","expandWorkflow","rows","renderEmptyState","Icon","SearchIcon","PrimaryAction","activeFiltersConfig","filters","onDelete","requests","addComment","approve","deny","request","requiredParams","useLocation","query","URLSearchParams","curr","asyncFunction","debounceTime","onlyResolvesLast","awesomeDebouncePromise","AppTabs","location","activeTab","includes","activeKey","onSelect","tabIndex","item","withRouter","TableToolbarView","filterConfig","intl","useIntl","row","setSelected","newData","checkedItems","paginationConfig","itemCount","page","getCurrentPage","perPage","onSetPage","getNewPage","onPerPageSelect","page-type","actionsConfig","items","formatMessage","filterValues","placeholder","_index","_isOpen","dropDirection","isCompact","TableEmptyState","renderDescription","centered","icon","h1","any"],"mappings":"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","file":"js/workflows.js","sourcesContent":["import { getWorkflowApi, getTemplateApi, getAxiosInstance } from '../shared/user-login';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\n\nconst workflowApi = getWorkflowApi();\nconst templateApi = getTemplateApi();\n\nexport function fetchWorkflows(filter = '', pagination = defaultSettings, sortBy) {\n  const paginationQuery = `&limit=${Math.max(pagination.limit, 10)}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains_i]=${filter}`;\n  const sortQuery = sortBy ? `&sort_by=${sortBy.property}:${sortBy.direction}` : '';\n\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows/?${filterQuery}${paginationQuery}${sortQuery}`\n  );\n}\n\nexport async function fetchWorkflow(id) {\n  return await workflowApi.showWorkflow(id);\n}\n\nexport function fetchWorkflowByName(name) {\n  return fetchWorkflows(name);\n}\n\nexport function updateWorkflow(data) {\n  return workflowApi.updateWorkflow(data.id, data);\n}\n\nexport  function addWorkflow(workflow) {\n  return templateApi.listTemplates().then(({ data }) => {\n    // workaround for v1. Need to pass template ID with the workflow. Assigning to first template\n    if (!data[0]) {\n      throw new Error('No template exists');\n    }\n\n    return data[0].id;\n\n  }).then(id => workflowApi.addWorkflowToTemplate(id, workflow, {}));\n}\n\nexport async function removeWorkflow(workflowId) {\n  return await workflowApi.destroyWorkflow(workflowId);\n}\n\nexport async function removeWorkflows(selectedWorkflows) {\n  return Promise.all(selectedWorkflows.map(async workflowId => await workflowApi.destroyWorkflow(workflowId)));\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as WorkflowHelper from '../../helpers/workflow/workflow-helper';\n\nexport const fetchWorkflows = (pagination) => (dispatch, getState) => {\n  const { sortBy, workflows, filterValue } = getState().workflowReducer;\n\n  let finalPagination = pagination;\n\n  if (!pagination && workflows) {\n    const { limit, offset } = workflows.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch ({\n    type: ActionTypes.FETCH_WORKFLOWS,\n    payload: WorkflowHelper.fetchWorkflows(filterValue, finalPagination, sortBy)\n  });\n};\n\nexport const fetchWorkflow = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW,\n  payload: WorkflowHelper.fetchWorkflow(apiProps)\n});\n\nexport const addWorkflow = (workflowData) => ({\n  type: ActionTypes.ADD_WORKFLOW,\n  payload: WorkflowHelper.addWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding approval process',\n        description: 'The approval process was added successfully.'\n      }\n    }\n  }\n});\n\nexport const updateWorkflow = (workflowData) => ({\n  type: ActionTypes.UPDATE_WORKFLOW,\n  payload: WorkflowHelper.updateWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating approval process',\n        description: 'The approval process was updated successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflow = (workflow) => ({\n  type: ActionTypes.REMOVE_WORKFLOW,\n  payload: WorkflowHelper.removeWorkflow(workflow),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval process',\n        description: 'The approval process was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflows = (workflows) => ({\n  type: ActionTypes.REMOVE_WORKFLOWS,\n  payload: WorkflowHelper.removeWorkflows(workflows),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval processes',\n        description: 'The selected approval processes were removed successfully.'\n      }\n    }\n  }\n});\n\nexport const expandWorkflow = (id) => ({\n  type: ActionTypes.EXPAND_WORKFLOW,\n  payload: id\n});\n\nexport const sortWorkflows = (sortBy) => ({\n  type: ActionTypes.SORT_WORKFLOWS,\n  payload: sortBy\n});\n\nexport const setFilterValueWorkflows = (filterValue) => ({\n  type: ActionTypes.SET_FILTER_WORKFLOWS,\n  payload: filterValue\n});\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst SummaryContent = ({ formData }) => {\n  const { name, description, wfGroups } = formData ? formData : { name: '', description: '', wfGroups: []};\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                    Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              { wfGroups && wfGroups.length > 0 && wfGroups.map((group, idx)  =>\n              { return (<Fragment key={ `Groups` }>\n                <Grid gutter=\"md\">\n                  <GridItem span={ 2 }>\n                    <Text key={ group.value } className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                      { idx === 0 ? 'Groups' : '' }\n                    </Text>\n                  </GridItem>\n                  <GridItem span={ 10 }>\n                    <Text key={ group.label } className=\"data-table-detail content\" component={ TextVariants.p }>\n                      { `${wfGroups[idx].label}` }\n                    </Text>\n                  </GridItem>\n                </Grid>\n              </Fragment>); })\n              }\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  formData: PropTypes.object\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchWorkflowByName } from '../../../helpers/workflow/workflow-helper';\n\nconst validateName = (name) => fetchWorkflowByName(name)\n.then(({ data }) => {\n  return data.find(wf => name === wf.name)\n    ? 'Name has already been taken'\n    : undefined;\n});\n\nconst debouncedValidator = (data, validateCallback) => asyncDebounce(validateName(data).then((result) => validateCallback(result)));\n\nconst WorkflowInfoForm = ({ formData, initialValue, handleChange, setIsValid, title = undefined }) => {\n  const name = formData.name || '';\n  const description = formData.description || '';\n  const [ error, setError ] = useState(undefined);\n\n  const setResult = (result) => {\n    setError(result);\n    setIsValid(!result);\n  };\n\n  const onHandleChange = (name) => {\n    setError(!name || name.length < 1 ? 'Enter a name for the approval process' : undefined);\n    handleChange({ name });\n  };\n\n  const handleNameChange = (name) => {\n    if (!name || name.length < 1) {\n      setError('Enter a name for the approval process');\n    }\n    else if (!initialValue || initialValue.name !== name) {\n      debouncedValidator(name, setResult);\n    }\n    else {\n      setError(undefined);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Approval process name\"\n              isRequired\n              fieldId=\"workflow-name\"\n              isValid={ !error }\n              helperTextInvalid={ error }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"workflow-name\"\n                name=\"workflow-name\"\n                aria-describedby=\"workflow-name\"\n                value={ name }\n                isValid={ !error }\n                onBlur={ () => handleNameChange(name) }\n                onChange={ (_, event) => onHandleChange(event.currentTarget.value) }\n              />\n            </FormGroup>\n            <FormGroup label=\"Description\" fieldId=\"workflow-description\">\n              <TextArea\n                type=\"text\"\n                id=\"workflow-description\"\n                name=\"workflow-description\"\n                value={ description }\n                onChange={ (_, event) => handleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowInfoForm.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  isValid: PropTypes.bool,\n  setIsValid: PropTypes.func.isRequired,\n  initialValue: PropTypes.shape({\n    name: PropTypes.string })\n};\n\nexport default WorkflowInfoForm;\n","import { getRbacGroupApi, getAxiosInstance } from '../shared/user-login';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst api = getRbacGroupApi();\n\nexport async function fetchGroupNames(groupRefs) {\n  if (groupRefs) {\n    return Promise.all(groupRefs.map(async id => {\n      try {\n        const group = await api.getGroup(id);\n        return group.name;\n      } catch (error) {\n        if (error.status !== 404) {\n          throw error;\n        }\n        else {\n          return id;\n        }\n      }\n    }));\n  }\n}\n\nexport const fetchGroupName = (id) =>\n  getAxiosInstance().get(`${RBAC_API_BASE}/groups/${id}/`)\n  .then((data) => data.name).catch((error) => {\n    if (error.status !== 404) {\n      throw error;\n    } else {\n      return id;\n    }\n  });\n\nexport const fetchFilterApprovalGroups = (filterValue) => {\n  const filterQuery = `&name=${filterValue}`;\n  return getAxiosInstance().get(`${RBAC_API_BASE}/groups/?role_names=\",Approval Administrator,Approval Approver,\"\n  ${filterValue && filterValue.length > 0\n    ? filterQuery : ''}`)\n  .then(({ data }) => (data && data.length > 0 ? data.map(({ uuid, name }) => ({ label: name, value: uuid })) : undefined));\n};\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AsyncSelect from 'react-select/async';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchFilterApprovalGroups } from '../../../helpers/group/group-helper';\nimport { WorkflowInfoFormLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Stack,\n  StackItem,\n  Title\n} from '@patternfly/react-core';\nimport { fetchRbacApprovalGroups } from '../../../redux/actions/group-actions';\n\nconst SetGroups = ({ formData, handleChange, title }) => {\n  const [ isExpanded, setExpanded ] = useState(false);\n  const [ groupValues, setGroupValues ] = useState([]);\n  const [ inputValue, setInputValue ] = useState([]);\n  const [ isFetching, setIsFetching ] = useState([]);\n\n  const defaultOptions = useSelector(({ groupReducer: { groups }}) => groups || []);\n\n  const onInputChange = (newValue) => {\n    const value = newValue.replace(/\\W/g, '');\n    setInputValue(value);\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      fetchRbacApprovalGroups()).then(() => setIsFetching(false));\n  }, []);\n\n  useEffect(() => {\n    setGroupValues(formData.wfGroups ? formData.wfGroups : []);\n  }, [ formData.wfGroups ]);\n\n  const onToggle = (isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  const onGroupChange = (values) => {\n    setGroupValues(values);\n    handleChange({ wfGroups: values });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem key={ 'title' }>\n          <Title size=\"md\">{ title || 'Set groups' }</Title>\n        </StackItem>\n        <StackItem key={ 'group' }>\n          { isFetching && <WorkflowInfoFormLoader/> }\n          { !isFetching &&\n              <AsyncSelect\n                cacheOptions\n                isClearable\n                isMulti\n                styles={ { menuPortal: base => ({ ...base, zIndex: 9999 }) } }\n                menuPortalTarget={ document.body }\n                menuPosition={ 'fixed' }\n                menuPlacement={ 'bottom' }\n                label={ 'Group' }\n                aria-label={ 'Group' }\n                onToggle={ onToggle }\n                key={ `groups` }\n                onChange={ (e) => onGroupChange(e) }\n                value={ groupValues }\n                inpuValue={ inputValue }\n                isexpanded={ isExpanded }\n                loadOptions={ asyncDebounce(fetchFilterApprovalGroups) }\n                defaultOptions={ defaultOptions }\n                onInputChange={ (e) => onInputChange(e) }\n              /> }\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetGroups.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func\n};\n\nexport default SetGroups;\n","import { FETCH_RBAC_GROUPS } from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchRbacApprovalGroups = () => ({\n  type: FETCH_RBAC_GROUPS,\n  payload: GroupHelper.fetchFilterApprovalGroups()\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, fetchWorkflows } from '../../../redux/actions/workflow-actions';\nimport SummaryContent from './summary-content';\nimport WorkflowInfoForm from './workflow-information';\nimport SetGroups from './set-groups';\nimport routes from '../../../constants/routes';\n\nconst AddWorkflow = () => {\n  const [ formData, setValues ] = useState({ wfGroups: []});\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  const rbacGroups = useSelector(({ groupReducer: { groups }}) => groups);\n  const [ isValid, setIsValid ] = useState(formData.name !== undefined && formData.name.length > 0);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const onNext = ({ id }) => {\n    setStepIdReached(prevStepIdReached =>  prevStepIdReached < id ? id : prevStepIdReached);\n  };\n\n  const steps = [\n    { id: 1,\n      name: 'General information',\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      component: <WorkflowInfoForm formData={ formData }\n        handleChange={ handleChange }\n        setIsValid={ setIsValid }/> },\n    { id: 2,\n      name: 'Set groups',\n      canJumpTo: stepIdReached >= 2,\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      component: <SetGroups formData={ formData }\n        handleChange={ handleChange } options={ rbacGroups } /> },\n    { id: 3,\n      canJumpTo: stepIdReached >= 3,\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      name: 'Review', component: <SummaryContent formData={ formData }\n        options={ rbacGroups } />, nextButtonText: 'Confirm' }\n  ];\n\n  const onSave = () => {\n    const { name, description, wfGroups } = formData;\n    const workflowData = { name, description,\n      group_refs: wfGroups && wfGroups.length > 0 ? wfGroups.map(group => ({ name: group.label, uuid: group.value })) : []};\n    push(routes.workflows.index);\n    dispatch(addWorkflow(workflowData)).then(() => dispatch(fetchWorkflows()));\n  };\n\n  const onCancel = () => {\n    dispatch(addNotification({\n      variant: 'warning',\n      title: 'Creating approval process',\n      dismissable: true,\n      description: 'Creating approval process was cancelled by the user.'\n    }));\n    push(routes.workflows.index);\n  };\n\n  return (\n    <Wizard\n      title={ 'Create approval process' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSave  }\n      onNext={  onNext }\n      steps={ steps }\n    />\n  );\n};\n\nAddWorkflow.defaultProps = {\n  rbacGroups: [],\n  initialValues: {}\n};\n\nAddWorkflow.propTypes = {\n  match: PropTypes.object,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n};\n\nexport default AddWorkflow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  Title\n} from '@patternfly/react-core';\n\nconst WorkflowSequence = ({ formData, handleChange, isValid, setIsValid, title = undefined }) => {\n  const { sequence } = formData;\n\n  const handleSequenceChange = (sequence) => {\n    setIsValid(sequence >= 0);\n    handleChange({ sequence });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Enter sequence\"\n              isRequired\n              fieldId=\"workflow-sequence\"\n              isValid={ isValid }\n              helperTextInvalid={ 'Enter a positive number' }\n            >\n              <TextInput\n                isRequired\n                type=\"number\"\n                id=\"workflow-sequence\"\n                isValid={ isValid }\n                name=\"workflow-sequence\"\n                aria-describedby=\"workflow-name\"\n                value={ sequence }\n                onChange={ (_, event) => handleSequenceChange(event.currentTarget.value) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowSequence.propTypes = {\n  sequence: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  setIsValid: PropTypes.func.isRequired,\n  isValid: PropTypes.bool\n};\n\nexport default WorkflowSequence;\n","import { shallowEqual, useSelector } from 'react-redux';\n\nconst useWorkflow = (id) => {\n  const { workflows } = useSelector(({ workflowReducer: { workflows }}) => ({ workflows }), shallowEqual);\n\n  return workflows && workflows.data && workflows.data.find((wf) => wf.id === id);\n};\n\nexport default useWorkflow;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { useHistory } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport WorkflowInfoForm from './add-groups/workflow-information';\nimport WorkflowSequenceForm from './add-groups/workflow-sequence';\nimport useQuery from '../../utilities/use-query';\nimport useWorkflow from '../../utilities/use-workflows';\n\nimport '../../App.scss';\n\nconst EditWorkflowInfoModal = ({\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  workflow,\n  isFetching,\n  editType\n}) => {\n  const [ formData, setFormData ] = useState({});\n  const [ initialValue, setInitialValue ] = useState({});\n  const [ isValid, setIsValid ] = useState(true);\n\n  const { push } = useHistory();\n  const [{ workflow: id }] = useQuery([ 'workflow' ]);\n  const loadedWorkflow = useWorkflow(id);\n\n  const handleChange = data => setFormData({ ...formData, ...data });\n\n  useEffect(() => {\n    if (!loadedWorkflow) {\n      fetchWorkflow(id).then((data) => { setFormData({ ...formData, ...data.value }); setInitialValue({ ...data.value });});\n    } else {\n      setFormData({ ...formData, ...loadedWorkflow });\n    }\n  }, []);\n\n  const onSave = () => {\n    if (!isValid) {return;}\n\n    const { name, description, sequence } = formData;\n    const workflowData = { id, name, description, sequence };\n    updateWorkflow(workflowData).then(() => postMethod()).then(() => push('/workflows'));\n  };\n\n  const onCancel = () => {\n    const { title, description } =\n        editType === 'sequence' ? { title: `Edit approval process's sequence`,\n          description: `Edit approval process's sequence was cancelled by the user.` } :\n          { title: `Edit approval process's information`,\n            description: `Edit approval process's information was cancelled by the user.` };\n    addNotification({\n      variant: 'warning',\n      title,\n      dismissable: true,\n      description\n    });\n    push('/workflows');\n  };\n\n  const name = loadedWorkflow ? loadedWorkflow.name : workflow && workflow.name;\n\n  return (\n    <Modal\n      title={ editType === 'sequence' ? 'Edit sequence' : 'Edit information' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"edit-workflow-info-modal-info\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (editType === 'info' ?\n              <WorkflowInfoForm formData={ formData } initialValue={ initialValue }\n                handleChange={ handleChange }\n                setIsValid={ setIsValid }\n                title={ `Make any changes to approval process ${name}` }/> :\n              <WorkflowSequenceForm formData={ formData }\n                initialValue={ initialValue }\n                handleChange={ handleChange }\n                isValid={ isValid }\n                setIsValid={ setIsValid }\n                title={ `Set the sequence for the approval process ${name}` }/>\n            ) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label={ 'Save' }\n                  id=\"save-edit-workflow-info\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  id=\"cancel-edit-workflow-info\"\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowInfoModal.defaultProps = {\n  isFetching: false,\n  editType: 'info'\n};\n\nEditWorkflowInfoModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  workflow: PropTypes.object,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { workflow, isRecordLoading }}) => ({\n  workflow,\n  isFetching: isRecordLoading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWorkflowInfoModal);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { useHistory } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport SetGroups from './add-groups/set-groups';\nimport useQuery from '../../utilities/use-query';\nimport useWorkflow from '../../utilities/use-workflows';\n\nimport '../../App.scss';\n\nconst EditWorkflowGroupsModal = ({\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  isFetching\n}) => {\n  const [ formData, setValues ] = useState({});\n\n  const { push } = useHistory();\n  const [{ workflow: id }] = useQuery([ 'workflow' ]);\n  const loadedWorkflow = useWorkflow(id);\n\n  const handleChange = data => {\n    setValues({ ...formData, ...data });\n  };\n\n  const initialValues = (wfData) => {\n    const groupOptions = wfData.group_refs.map((group) => {\n      return { label: group.name, value: group.uuid };\n    });\n    const data = { ...wfData, wfGroups: groupOptions };\n    return data;\n  };\n\n  useEffect(() => {\n    if (!loadedWorkflow) {\n      fetchWorkflow(id).then((result) => setValues(initialValues(result.value)));\n    } else {\n      setValues(initialValues(loadedWorkflow));\n    }\n  }, []);\n\n  const onSave = () => {\n    const { wfGroups } = formData;\n    const workflowData = { group_refs: wfGroups ? wfGroups.map(group => ({ name: group.label, uuid: group.value })) : []};\n    updateWorkflow({ id, ...workflowData }).then(() => postMethod()).then(()=>push('/workflows'));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Edit approval process's groups`,\n      dismissable: true,\n      description: `Edit approval process's groups was cancelled by the user.`\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ `Edit approval process's groups` }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"workflow-groups-formgroup\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (\n              <StackItem className=\"groups-modal\">\n                <SetGroups className=\"groups-modal\" formData={ formData }\n                  handleChange={ handleChange }\n                  title={ `Add or remove ${formData.name}'s groups` }/>\n              </StackItem>) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button aria-label={ 'Save' }\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isDisabled={ isFetching }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowGroupsModal.defaultProps = {\n  isFetching: false\n};\n\nEditWorkflowGroupsModal.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { isRecordLoading }}) => ({\n  isFetching: isRecordLoading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWorkflowGroupsModal);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal, Button, Split, SplitItem, Text, TextContent, TextVariants, Spinner } from '@patternfly/react-core';\nimport { WarningTriangleIcon } from '@patternfly/react-icons';\nimport { removeWorkflow, removeWorkflows } from '../../redux/actions/workflow-actions';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\n\nconst RemoveWorkflowModal = ({\n  ids,\n  removeWorkflow,\n  removeWorkflows,\n  fetchData,\n  setSelectedWorkflows\n}) => {\n  const [ submitting, setSubmitting ] = useState(false);\n  const { push } = useHistory();\n  const [{ workflow: workflowId }] = useQuery([ 'workflow' ]);\n\n  if (!workflowId && (!ids || ids.length === 0)) {\n    return null;\n  }\n\n  const removeWf = () =>(workflowId ? removeWorkflow(workflowId) : removeWorkflows(ids))\n  .catch(() => setSubmitting(false))\n  .then(() => push(routes.workflows.index))\n  .then(() => setSelectedWorkflows([]))\n  .then(() => fetchData());\n\n  const onCancel = () => push(routes.workflows.index);\n\n  const onSubmit = () => {\n    setSubmitting(true);\n    return removeWf();\n  };\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      width={ '40%' }\n      title={ '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button id=\"cancel-remove-workflow\" key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button id=\"submit-remove-workflow\" key=\"submit\" variant=\"primary\" type=\"button\" isDisabled={ submitting } onClick={ onSubmit }>\n          { submitting ? <React.Fragment><Spinner size=\"sm\" /> Removing </React.Fragment> : 'Remove' }\n        </Button>\n      ] }\n    >\n      <Split gutter=\"md\">\n        <SplitItem>\n          <WarningTriangleIcon size=\"xl\" fill=\"#f0ab00\" />\n        </SplitItem>\n        <SplitItem>\n          <TextContent>\n            <Text component={ TextVariants.p }>\n              <FormattedMessage\n                id=\"remove-workflow-modal\"\n                defaultMessage={ `Removing {count, number} {count, plural,\n              one {approval process}\n              other {approval processes}\n            }` }\n                values={ {\n                  count: workflowId ? 1 : ids.length\n                } }\n              />\n            </Text>\n          </TextContent>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemoveWorkflowModal.propTypes = {\n  removeWorkflows: PropTypes.func.isRequired,\n  removeWorkflow: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  setSelectedWorkflows: PropTypes.func.isRequired,\n  ids: PropTypes.array\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  removeWorkflow,\n  removeWorkflows\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(RemoveWorkflowModal);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ description, groupRefs }) => {\n  const listGroupNames = (groupRefs) => groupRefs.map((ref) => ref.name);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Description</Text>\n        <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ description }</Text>\n      </TextContent>\n      <TextContent>\n        <Fragment>\n          <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Groups</Text>\n          <Text className=\"data-table-detail content\"\n            component={ TextVariants.h5 }>\n            { listGroupNames(groupRefs).join(',') }\n          </Text>\n        </Fragment>\n      </TextContent>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  description: PropTypes.string,\n  groupRefs: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default ExpandableContent;\n","import React from 'react';\n\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data) =>\n  data.reduce((acc,\n    {\n      id,\n      name,\n      description,\n      sequence,\n      group_refs\n    }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      selected: false,\n      cells: [ name, description, sequence ]\n    }, {\n      parent: key * 2,\n      cells: [{ title: <ExpandableContent\n        description={ description }\n        groupRefs={ group_refs }\n        id={ id }\n      /> }]\n    }\n  ]), []);\n\n","import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Route, Link, useHistory } from 'react-router-dom';\nimport { ToolbarGroup, ToolbarItem, Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { expandable, sortable } from '@patternfly/react-table';\nimport { fetchWorkflows, expandWorkflow, sortWorkflows, setFilterValueWorkflows } from '../../redux/actions/workflow-actions';\nimport AddWorkflow from './add-groups/add-workflow-wizard';\nimport EditWorkflowInfo from './edit-workflow-info-modal';\nimport EditWorkflowGroups from './edit-workflow-groups-modal';\nimport RemoveWorkflow from './remove-workflow-modal';\nimport { createRows } from './workflow-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../../smart-components/app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\nimport routesLinks from '../../constants/routes';\n\nconst columns = [{\n  title: 'Name',\n  cellFormatters: [ expandable ],\n  transforms: [ sortable ]\n},\n{ title: 'Description', transforms: [ sortable ]},\n{ title: 'Sequence', transforms: [ sortable ]}\n];\n\nconst debouncedFilter = asyncDebounce(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(setFilterValueWorkflows(filter, meta));\n    return dispatch(fetchWorkflows(meta))\n    .then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst prepareChips = (filterValue) => filterValue ? [{\n  category: 'Name',\n  key: 'name',\n  chips: [{ name: filterValue, value: filterValue }]\n}] : [];\n\nconst initialState = (filterValue = '') => ({\n  filterValue,\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n});\n\nconst workflowsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Workflows = () => {\n  const [ selectedWorkflows, setSelectedWorkflows ] = useState([]);\n  const { workflows: { data, meta }, sortBy, filterValueRedux } = useSelector(\n    ({ workflowReducer: { workflows, sortBy, filterValue: filterValueRedux }}) => ({ workflows, sortBy, filterValueRedux })\n    , shallowEqual\n  );\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch ] = useReducer(\n    workflowsListState,\n    initialState(filterValueRedux)\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchWorkflows(defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) => stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      { ...meta, offset: 0 }\n    );\n  };\n\n  const tabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n    { eventKey: 1, title: 'Approval processes', name: '/workflows' }];\n\n  const handlePagination = (pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(fetchWorkflows(pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const onSort = (_e, index, direction, { property }) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(sortWorkflows({ index, direction, property }));\n    return dispatch(fetchWorkflows())\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path={ routesLinks.workflows.add } render={ props => <AddWorkflow { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.editInfo } render={ props => <EditWorkflowInfo editType='info' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.editGroups } render={ props => <EditWorkflowGroups editType='groups' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.editSequence } render={ props => <EditWorkflowInfo editType='sequence' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path={ routesLinks.workflows.remove }\n      render={ props => <RemoveWorkflow\n        { ...props }\n        ids={ selectedWorkflows }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows }\n      /> }\n    />\n  </Fragment>;\n\n  const actionResolver = (_workflowData, { rowIndex }) => rowIndex % 2 === 1 ?\n    null\n    : [\n      {\n        title: 'Edit info',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editInfo, search: `?workflow=${workflow.id}` })\n      },\n      {\n        title: 'Edit groups',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editGroups, search: `?workflow=${workflow.id}` })\n      },\n      {\n        title: 'Edit sequence',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editSequence, search: `?workflow=${workflow.id}` })\n      },\n      {\n        title: 'Delete',\n        style: { color: 'var(--pf-global--danger-color--100)'\t},\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.remove, search: `?workflow=${workflow.id}` })\n      }\n    ];\n\n  const setCheckedItems = (checkedWorkflows) =>\n    setSelectedWorkflows(checkedWorkflows.map(wf => wf.id));\n\n  const anyWorkflowsSelected = selectedWorkflows.length > 0;\n\n  const toolbarButtons = () => <ToolbarGroup className={ `pf-u-pl-lg top-toolbar` }>\n    <ToolbarItem>\n      <Link id=\"add-workflow-link\" to={ { pathname: routesLinks.workflows.add } }>\n        <Button\n          variant=\"primary\"\n          aria-label=\"Create approval process\"\n        >\n          Create approval process\n        </Button>\n      </Link>\n    </ToolbarItem>\n    <ToolbarItem>\n      <Link\n        id=\"remove-multiple-workflows\"\n        className={ anyWorkflowsSelected ? '' : 'disabled-link' }\n        to={ { pathname: routesLinks.workflows.remove } }\n      >\n        <Button\n          variant=\"link\"\n          isDisabled={ !anyWorkflowsSelected }\n          style={ { color: anyWorkflowsSelected ? 'var(--pf-global--danger-color--100)' : 'var(--pf-global--disabled-color--100)'\t} }\n          aria-label=\"Delete approval process\"\n        >\n          Delete\n        </Button>\n      </Link>\n    </ToolbarItem>\n  </ToolbarGroup>;\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandWorkflow(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        <AppTabs tabItems={ tabItems }/>\n      </TopToolbar>\n      <TableToolbarView\n        sortBy={ sortBy }\n        onSort={ onSort }\n        data={ data }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ handlePagination }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"approval processes\"\n        titleSingular=\"approval process\"\n        pagination={ meta }\n        setCheckedItems={ setCheckedItems }\n        toolbarButtons={ toolbarButtons }\n        filterValue={ filterValue }\n        onFilterChange={ handleFilterChange }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n        renderEmptyState={ () => (\n          <TableEmptyState\n            title={ filterValue === '' ? 'No approval processes' : 'No results found' }\n            Icon={ SearchIcon }\n            PrimaryAction={ () =>\n              filterValue !== '' ? (\n                <Button onClick={ () => handleFilterChange('') } variant=\"link\">\n                  Clear all filters\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? 'No approval processes.'\n                : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n            }\n          />\n        ) }\n        activeFiltersConfig={ {\n          filters: prepareChips(filterValue),\n          onDelete: () => handleFilterChange('')\n        } }\n      />\n    </Fragment>\n  );\n};\n\nexport default Workflows;\n","const routes = {\n  requests: {\n    index: '/requests',\n    addComment: '/requests/add-comment',\n    approve: '/requests/approve',\n    deny: '/requests/deny'\n  },\n  request: {\n    index: '/request',\n    addComment: '/request/add-comment',\n    approve: '/request/approve',\n    deny: '/request/deny'\n  },\n  workflows: {\n    index: '/workflows',\n    add: '/workflows/add-workflow',\n    remove: '/workflows/remove',\n    editInfo: '/workflows/edit-info',\n    editGroups: '/workflows/edit-groups',\n    editSequence: '/workflows/edit-sequence'\n  }\n};\n\nexport default routes;\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","\nimport React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings, getCurrentPage, getNewPage  } from '../../helpers/shared/pagination';\nimport { DataListLoader } from './loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse,\n  renderEmptyState,\n  sortBy,\n  onSort,\n  activeFiltersConfig,\n  filterConfig\n}) => {\n  const intl = useIntl();\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (data, id) => {\n    const newData = data.map(row => row.id === id ?\n      {\n        ...row,\n        selected: !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return newData;\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse ?\n    onCollapse(id, setRows, setOpen) :\n    setRows((rows) => setOpen(rows, id));\n\n  const selectRow = (_event, selected, index, { id } = {}) => index === -1\n    ? setRows(rows.map(row => ({ ...row, selected })))\n    : setRows((rows) => setSelected(rows, id));\n\n  const paginationConfig = {\n    itemCount: pagination.count,\n    page: getCurrentPage(pagination.limit, pagination.offset),\n    perPage: pagination.limit,\n    onSetPage: (_e, page) => fetchData({ ...pagination, offset: getNewPage(page, pagination.limit) }),\n    onPerPageSelect: (_e, size) => fetchData({ ...pagination, limit: size }),\n    isDisabled: isLoading\n  };\n\n  const renderToolbar = () => (\n    <PrimaryToolbar\n      className=\"pf-u-p-lg ins__approval__primary_toolbar\"\n      pagination={ paginationConfig }\n      { ...(toolbarButtons && { actionsConfig: {  actions: [ toolbarButtons() ]}}) }\n      filterConfig={ {\n        items: [{\n          label: intl.formatMessage({\n            id: 'name',\n            defaultMessage: 'Name'\n          }),\n          filterValues: {\n            id: 'filter-by-name',\n            placeholder: intl.formatMessage({\n              id: 'filter-by-name',\n              defaultMessage: 'Filter by {title}'\n            }, { title: titleSingular }),\n            'aria-label': intl.formatMessage({\n              id: 'filter-by-name',\n              defaultMessage: 'Filter by {title}'\n            }, { title: titleSingular }),\n            onChange: (_event, value) => onFilterChange(value),\n            value: filterValue\n          }\n        },\n        ...filterConfig\n        ]\n      } }\n      activeFiltersConfig={ activeFiltersConfig }\n    />\n  );\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ `${titlePlural} table` }\n            onCollapse={ onCollapseInternal }\n            rows={ rows }\n            cells={ columns }\n            onSelect={ isSelectable && selectRow }\n            actionResolver={ actionResolver }\n            className=\"table-fix\"\n            sortBy={ sortBy }\n            onSort={ onSort }\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 && (\n            <PrimaryToolbar\n              className=\"pf-u-pl-lg pf-u-pr-lg ins__approval__primary_toolbar\"\n              pagination={ {\n                ...paginationConfig,\n                dropDirection: 'up',\n                variant: 'bottom',\n                isCompact: false\n              } }\n            />\n          ) }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func,\n  renderEmptyState: propTypes.func,\n  sortBy: propTypes.object,\n  onSort: propTypes.func,\n  activeFiltersConfig: propTypes.object,\n  filterConfig: propTypes.array\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null,\n  onSort: () => null,\n  filterConfig: []\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\nimport { Link }  from 'react-router-dom';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered\n    aria-label=\"No records\"\n  >\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={ Icon } />\n      <TextContent>\n        <Text component={ TextVariants.h1 }>{ title }</Text>\n      </TextContent>\n      <EmptyStateBody>\n        { description }\n        { renderDescription() }\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        { PrimaryAction && <PrimaryAction /> }\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n\nexport const EmptyStatePrimaryAction = ({ url, label }) => (\n  <Link to={ url }>\n    <Button variant=\"secondary\">{ label }</Button>\n  </Link>\n);\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n"],"sourceRoot":""}