{"version":3,"sources":["webpack:///./src/helpers/shared/pagination.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/utilities/constants.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/helpers/workflow/workflow-helper.js","webpack:///./src/redux/actions/workflow-actions.js","webpack:///./src/smart-components/workflow/add-stages/summary-content.js","webpack:///./src/smart-components/workflow/add-stages/stage-information.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/smart-components/workflow/add-stages/set-stages.js","webpack:///./src/smart-components/workflow/add-stages/add-stages-wizard.js","webpack:///./src/smart-components/workflow/add-stages/workflow-sequence.js","webpack:///./src/smart-components/workflow/edit-workflow-info-modal.js","webpack:///./src/smart-components/workflow/edit-workflow-stages-modal.js","webpack:///./src/smart-components/workflow/remove-workflow-modal.js","webpack:///./src/smart-components/workflow/expandable-content.js","webpack:///./src/smart-components/workflow/workflow-table-helpers.js","webpack:///./src/smart-components/workflow/workflows.js"],"names":["defaultSettings","limit","offset","itemCount","numberOfItems","getCurrentPage","Math","floor","getNewPage","page","activeStates","scrollToTop","document","getElementById","scrollTo","behavior","top","left","isRequestStateActive","state","includes","timeAgo","date","key","type","APPROVAL_API_BASE","process","RBAC_API_BASE","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","axiosInstance","axios","create","interceptors","request","use","a","config","window","insights","chrome","auth","getUser","response","data","error","workflowApi","WorkflowApi","undefined","actionApi","ActionApi","requestApi","RequestApi","templateApi","TemplateApi","rbacGroupApi","GroupApi","getRequestApi","getTemplateApi","getWorkflowApi","getActionApi","getRbacGroupApi","getAxiosInstance","grapqlInstance","getGraphqlInstance","errors","message","errorType","ApprovalBreadcrumbs","breadcrumbs","Breadcrumb","Object","values","map","item","BreadcrumbItem","title","isActive","to","exact","propTypes","PropTypes","arrayOf","shape","string","isRequired","bool","TopToolbar","children","paddingBottom","className","Level","oneOfType","node","array","defaultProps","TopToolbarTitle","description","LevelItem","TextContent","Text","component","TextVariants","h1","p","AppTabs","push","history","pathname","location","tabItems","activeTab","find","name","activeKey","eventKey","onSelect","_event","tabIndex","func","withRouter","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","ToolbarItem","TextInput","value","onChange","aria-label","width","height","onClick","AsyncPagination","meta","count","apiProps","apiRequest","isCompact","props","Pagination","perPage","onPerPageSelect","onSetPage","number","debounce","debouncePromise","direction","any","TableToolbarView","isSelectable","createRows","columns","fetchData","toolbarButtons","actionResolver","routes","titlePlural","titleSingular","pagination","setCheckedItems","filterValue","isLoading","onCollapse","useState","rows","setRows","useEffect","setOpen","id","row","isOpen","setSelected","newData","selected","checkedItems","filter","Section","page-type","Toolbar","style","flex","ToolbarGroup","isDisabled","renderToolbar","Table","_index","_isOpen","cells","index","requests","api","getRbacGroups","listGroups","fetchGroupNames","groupRefs","Promise","all","getGroup","group","status","fetchWorkflows","paginationQuery","filterQuery","get","fetchWorkflowWithGroups","showWorkflow","wfData","group_refs","wfWithGroups","group_names","removeWorkflow","workflowId","destroyWorkflow","removeWorkflows","selectedWorkflows","ActionTypes","payload","WorkflowHelper","fetchWorkflow","addWorkflow","workflowData","workflow","listTemplates","then","Error","addWorkflowToTemplate","notifications","fulfilled","variant","rejected","updateWorkflow","workflows","SummaryContent","formData","wfGroups","Stack","gutter","StackItem","Title","size","h5","Grid","GridItem","span","stage","idx","label","object","WorkflowInfoForm","handleChange","isValid","Form","FormGroup","fieldId","helperTextInvalid","aria-describedby","_","event","currentTarget","TextArea","fetchRbacGroups","FETCH_RBAC_GROUPS","GroupHelper","uuid","SetStages","isExpanded","setExpanded","stageValues","setStageValues","stageIndex","setStageIndex","inputValue","setInputValue","isFetching","setIsFetching","defaultOptions","useSelector","groupReducer","groups","dispatch","useDispatch","length","onToggle","removeStage","i","parseInt","target","j","loadGroupOptions","createStageInput","cacheOptions","e","inpuValue","isexpanded","loadOptions","asyncDebounce","onInputChange","replace","display","Button","isInline","_stage","borderTop","AddWorkflow","addNotification","postMethod","rbacGroups","setValues","steps","nextButtonText","Wizard","onClose","dismissable","onSave","initialValues","match","connect","bindActionCreators","WorkflowSequence","sequence","EditWorkflowInfoModal","params","editType","setFormData","isSequenceValid","isInfoValid","formValid","onCancel","Modal","ActionGroup","Split","SplitItem","validated","workflowReducer","isRecordLoading","EditWorkflowStagesModal","result","stageOptions","RemoveWorkflowModal","goBack","ids","setSelectedWorkflows","isSmall","actions","Bullseye","defaultMessage","ExpandableContent","groupNames","setGroupNames","isLoaded","setIsLoaded","fetching","setFetching","expandedWorkflows","ref","fetchGroupName","small","join","Skeleton","SkeletonSize","sm","reduce","acc","parent","cellFormatters","expandable","debouncedFilter","filteringCallback","initialState","isFiltering","workflowsListState","action","Workflows","useReducer","stateDispatch","useHistory","handlePagination","_apiProps","anyWorkflowsSelected","path","render","rowIndex","_rowId","color","checkedWorkflows","wf","expandWorkflow"],"mappings":"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","file":"js/workflows.js","sourcesContent":["export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  itemCount: 1,\n  numberOfItems: 50\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\n\nconst activeStates = [ 'notified' ];\n\nexport const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n\nexport const getCurrentPage = (limit = 1, offset = 0) => Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n\nexport const isRequestStateActive = (state) => activeStates.includes(state);\n\nexport const timeAgo = (date) => (\n  <span key={ date }>\n    <DateFormat date={ date } type=\"relative\" />\n  </span>\n);\n\n","export const APPROVAL_API_BASE = `${process.env.BASE_PATH}/approval/v1.0`;\nexport const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\n\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import axios from 'axios';\n\nimport { APPROVAL_API_BASE, RBAC_API_BASE } from '../../utilities/constants';\nimport { GroupApi } from '@redhat-cloud-services/rbac-client';\nimport { WorkflowApi, ActionApi, RequestApi, TemplateApi } from '@redhat-cloud-services/approval-client';\n\nconst axiosInstance = axios.create();\n\nconst resolveInterceptor = response => response.data || response;\nconst errorInterceptor = (error = {}) => {\n  throw { ...error.response };\n};\n\n// check identity before each request. If the token is expired it will log out user\naxiosInstance.interceptors.request.use(async config => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\naxiosInstance.interceptors.response.use(resolveInterceptor);\naxiosInstance.interceptors.response.use(null, errorInterceptor);\n\n// Approval Apis\n\nconst workflowApi = new WorkflowApi(undefined, APPROVAL_API_BASE, axiosInstance);\nconst actionApi = new ActionApi(undefined, APPROVAL_API_BASE, axiosInstance);\nconst requestApi = new RequestApi(undefined, APPROVAL_API_BASE, axiosInstance);\nconst templateApi = new TemplateApi(undefined, APPROVAL_API_BASE, axiosInstance);\n\nconst rbacGroupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\n\n// Approval APIs\nexport function getRequestApi() {\n  return requestApi;\n}\n\nexport function getTemplateApi() {\n  return templateApi;\n}\n\nexport function getWorkflowApi() {\n  return workflowApi;\n}\n\nexport function getActionApi() {\n  return actionApi;\n}\n\nexport function getRbacGroupApi() {\n  return rbacGroupApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n\nconst grapqlInstance = axios.create();\ngrapqlInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\n/**\n * Graphql does not return error response when the qery fails.\n * Instead it returns 200 response with error object.\n * We catch it and throw it to trigger notification middleware\n */\ngrapqlInstance.interceptors.response.use(({ data }) => {\n  if (data.errors) {\n    throw {\n      message: data.errors[0].errorType,\n      data: data.errors[0].message\n    };\n  }\n\n  return data;\n});\n\nexport function getGraphqlInstance() {\n  return grapqlInstance;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nconst ApprovalBreadcrumbs = ({ breadcrumbs }) => breadcrumbs\n  ? (\n    <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        <BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n          { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n        </BreadcrumbItem>\n      )) }\n    </Breadcrumb>\n  ) : null;\n\nApprovalBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    isActive: PropTypes.bool,\n    to: PropTypes.string\n  }))\n};\n\nexport default ApprovalBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport ApprovalBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <ApprovalBreadcrumbs breadcrumbs={ breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n              <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n                <Text component={ TextVariants.p }>{ description }</Text>\n              </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <div className=\"toolbar-filter-input-group\">\n      <TextInput\n        placeholder={ placeholder }\n        value={ searchValue }\n        type=\"text\"\n        onChange={ onFilterChange }\n        aria-label={ placeholder }\n      />\n      <span className=\"filter-icons-container\">\n        { (isClearable && searchValue && (\n          <CloseIcon\n            className=\"clear-filter\"\n            width=\"16\"\n            height=\"16\"\n            onClick={ () => onFilterChange('') }\n          />\n        )) || <SearchIcon /> }\n      </span>\n    </div>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={ className }>\n      <Pagination\n        perPage={ limit || 50 }\n        itemCount={ count || 0 }\n        onPerPageSelect={ handleOnPerPageSelect }\n        page={ getCurrentPage(limit, offset) }\n        onSetPage={ handleSetPage }\n        direction=\"down\"\n        isCompact={ isCompact }\n        { ...props }\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Level, LevelItem } from '@patternfly/react-core';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings  } from '../../helpers/shared/pagination';\nimport FilterToolbar from '../../presentational-components/shared/filter-toolbar-item';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { DataListLoader } from './loader-placeholders';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse\n}) => {\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (data, id) => {\n    const newData = data.map(row => row.id === id ?\n      {\n        ...row,\n        selected: !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return newData;\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse ?\n    onCollapse(id, setRows, setOpen) :\n    setRows((rows) => setOpen(rows, id));\n\n  const selectRow = (_event, selected, index, { id } = {}) => index === -1\n    ? setRows(rows.map(row => ({ ...row, selected })))\n    : setRows((rows) => setSelected(rows, id));\n\n  const renderToolbar = (isLoading) => {\n    return (<Toolbar className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg pf-u-pb-lg top-toolbar` }>\n      <Level style={ { flex: 1 } }>\n        <LevelItem>\n          <Toolbar>\n            <FilterToolbar onFilterChange={ onFilterChange } searchValue={ filterValue } isClearable={ true }\n              placeholder={ `Filter by ${titleSingular}` }/>\n            { toolbarButtons() }\n          </Toolbar>\n        </LevelItem>\n\n        <LevelItem>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <AsyncPagination\n                  apiRequest={ fetchData }\n                  isDisabled={ isLoading }\n                  meta={ pagination }\n                  isCompact\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n        </LevelItem>\n      </Level>\n    </Toolbar>);\n  };\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading ? <DataListLoader/> :\n        <Table\n          aria-label={ `${titlePlural} table` }\n          onCollapse={ onCollapseInternal }\n          rows={ rows }\n          cells={ columns }\n          onSelect={ isSelectable && selectRow }\n          actionResolver={ actionResolver }\n          className=\"table-fix\"\n        >\n          <TableHeader />\n          <TableBody />\n        </Table> }\n    </Section>\n  );\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  toolbarButtons: () => null,\n  isSelectable: null,\n  routes: () => null\n};\n","import { getRbacGroupApi, getAxiosInstance } from '../shared/user-login';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst api = getRbacGroupApi();\n\nexport async function getRbacGroups() {\n  return await api.listGroups();\n}\n\nexport async function fetchGroupNames(groupRefs) {\n  if (groupRefs) {\n    return Promise.all(groupRefs.map(async id => {\n      try {\n        const group = await api.getGroup(id);\n        return group.name;\n      } catch (error) {\n        if (error.status !== 404) {\n          throw error;\n        }\n        else {\n          return id;\n        }\n      }\n    }));\n  }\n}\n\nexport const fetchGroupName = (id) =>\n  getAxiosInstance().get(`${RBAC_API_BASE}/groups/${id}/`)\n  .then((data) => data.name).catch((error) => {\n    if (error.status !== 404) {\n      throw error;\n    } else {\n      return id;\n    }\n  });\n\nexport const fetchFilterGroups = (filterValue) =>\n  getAxiosInstance().get(`${RBAC_API_BASE}/groups/${filterValue.length > 0\n    ? `?name=${filterValue}`\n    : ''}`)\n  .then(({ data }) => data.map(({ uuid, name }) => ({ label: name, value: uuid })));\n\n","import { getWorkflowApi, getTemplateApi, getAxiosInstance } from '../shared/user-login';\nimport { fetchGroupNames } from '../group/group-helper';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\n\nconst workflowApi = getWorkflowApi();\nconst templateApi = getTemplateApi();\n\nexport function fetchWorkflows(filter = '', pagination = defaultSettings) {\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains_i]=${filter}`;\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows/?${filterQuery}${paginationQuery}`\n  );\n}\n\nexport async function fetchWorkflowsWithGroups({ appName = undefined,\n  objectId = undefined,\n  objectType = undefined,\n  limit = 10,\n  offset = 0,\n  filter = '' }) {\n  const wfData = await workflowApi.listWorkflows(appName, objectId, objectType, limit, offset, filter);\n  const workflows = wfData.data;\n  return Promise.all(workflows.map(async wf => {\n    const wfWithGroups = await fetchGroupNames(wf.group_refs);\n    return { ...wf, group_names: wfWithGroups };\n  })).then(data => ({\n    ...wfData,\n    data\n  }));\n}\n\nexport async function fetchWorkflowWithGroups(id) {\n  const wfData = await workflowApi.showWorkflow(id);\n  const  wfWithGroups = await fetchGroupNames(wfData.group_refs);\n  return { ...wfData, group_names: wfWithGroups };\n}\n\nexport async function fetchWorkflow(id) {\n  return await workflowApi.showWorkflow(id);\n}\n\nexport function updateWorkflow(data) {\n  return workflowApi.updateWorkflow(data.id, data);\n}\n\nexport  function addWorkflow(workflow) {\n  return templateApi.listTemplates().then(({ data }) => {\n    // workaround for v1. Need to pass template ID with the workflow. Assigning to first template\n    if (!data[0]) {\n      throw new Error('No template exists');\n    }\n\n    return data[0].id;\n\n  }).then(id => workflowApi.addWorkflowToTemplate(id, workflow, {}));\n}\n\nexport async function removeWorkflow(workflowId) {\n  return await workflowApi.destroyWorkflow(workflowId);\n}\n\nexport async function removeWorkflows(selectedWorkflows) {\n  return Promise.all(selectedWorkflows.map(async workflowId => await workflowApi.destroyWorkflow(workflowId)));\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as WorkflowHelper from '../../helpers/workflow/workflow-helper';\n\nexport const fetchWorkflows = (filter, pagination) => ({\n  type: ActionTypes.FETCH_WORKFLOWS,\n  payload: WorkflowHelper.fetchWorkflows(filter, pagination)\n});\n\nexport const fetchWorkflow = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW,\n  payload: WorkflowHelper.fetchWorkflowWithGroups(apiProps)\n});\n\nexport const addWorkflow = (workflowData) => ({\n  type: ActionTypes.ADD_WORKFLOW,\n  payload: WorkflowHelper.addWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding approval process',\n        description: 'The approval process was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding approval process',\n        description: 'The approval process was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateWorkflow = (workflowData) => ({\n  type: ActionTypes.UPDATE_WORKFLOW,\n  payload: WorkflowHelper.updateWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating approval process',\n        description: 'The approval process was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating approval process',\n        description: 'The approval process was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflow = (workflow) => ({\n  type: ActionTypes.REMOVE_WORKFLOW,\n  payload: WorkflowHelper.removeWorkflow(workflow),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval process',\n        description: 'The approval process was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflows = (workflows) => ({\n  type: ActionTypes.REMOVE_WORKFLOWS,\n  payload: WorkflowHelper.removeWorkflows(workflows),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval processes',\n        description: 'The selected approval processes were removed successfully.'\n      }\n    }\n  }\n});\n\nexport const expandWorkflow = (id) => ({\n  type: ActionTypes.EXPAND_WORKFLOW,\n  payload: id\n});\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst SummaryContent = ({ formData }) => {\n  const { name, description, wfGroups } = formData ? formData : { name: '', description: '', wfGroups: []};\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                    Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              { (wfGroups !== undefined) && wfGroups.map((stage, idx)  =>\n              { return (<Fragment key={ `Group-${idx}` }>\n                <Grid gutter=\"md\">\n                  <GridItem span={ 2 }>\n                    <Text key={ stage.value } className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                      { `Group ${idx + 1}` }\n                    </Text>\n                  </GridItem>\n                  <GridItem span={ 10 }>\n                    <Text key={ stage.label } className=\"data-table-detail content\" component={ TextVariants.p }>\n                      { `${wfGroups[idx].label}` }\n                    </Text>\n                  </GridItem>\n                </Grid>\n              </Fragment>); })\n              }\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  formData: PropTypes.object\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst WorkflowInfoForm = ({ formData, handleChange, isValid, title = undefined }) => {\n  const { name, description } = formData;\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Approval process name\"\n              isRequired\n              fieldId=\"workflow-name\"\n              isValid={ isValid() }\n              helperTextInvalid={ 'Enter a name for the approval process' }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"workflow-name\"\n                name=\"workflow-name\"\n                aria-describedby=\"workflow-name\"\n                value={ name }\n                isValid={ isValid() }\n                onChange={ (_, event) => handleChange({ name: event.currentTarget.value }) }\n              />\n            </FormGroup>\n            <FormGroup label=\"Description\" fieldId=\"workflow-description\">\n              <TextArea\n                type=\"text\"\n                id=\"workflow-description\"\n                name=\"workflow-description\"\n                value={ description }\n                onChange={ (_, event) => handleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowInfoForm.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired\n};\n\nexport default WorkflowInfoForm;\n","import { FETCH_RBAC_GROUPS } from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchRbacGroups = () => ({\n  type: FETCH_RBAC_GROUPS,\n  payload: GroupHelper.getRbacGroups().then(({ data }) => [\n    ...data.map(({ uuid, name }) => ({ value: uuid, label: name }))\n  ])\n});\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { PlusIcon, TrashIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport AsyncSelect from 'react-select/async';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchFilterGroups } from '../../../helpers/group/group-helper';\nimport { WorkflowInfoFormLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button,\n  FormGroup,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Title\n} from '@patternfly/react-core';\nimport { fetchRbacGroups } from '../../../redux/actions/group-actions';\n\nconst SetStages = ({ formData, handleChange, title }) => {\n  const [ isExpanded, setExpanded ] = useState(false);\n  const [ stageValues, setStageValues ] = useState([]);\n  const [ stageIndex, setStageIndex ] = useState(1);\n  const [ inputValue, setInputValue ] = useState([]);\n  const [ isFetching, setIsFetching ] = useState([]);\n\n  const defaultOptions = useSelector(({ groupReducer: { groups }}) => groups || []);\n\n  const onInputChange = (newValue) => {\n    const value = newValue.replace(/\\W/g, '');\n    setInputValue(value);\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      fetchRbacGroups()).then(() => setIsFetching(false));\n  }, []);\n\n  useEffect(() => {\n    setStageValues(formData.wfGroups ? formData.wfGroups : []);\n    setStageIndex(formData.wfGroups ? formData.wfGroups.length : 1);\n  }, [ formData.wfGroups ]);\n\n  const onToggle = (isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  const onStageChange = (value, index) => {\n    const values = stageValues;\n    values[index] = value;\n    setStageValues(values);\n    handleChange({ wfGroups: values });\n  };\n\n  const addStage = () => {\n    setStageValues([ ...stageValues, undefined ]);\n    setStageIndex(stageIndex + 1);\n  };\n\n  const removeStage = (idx) => {\n    const i = parseInt(idx.target.id);\n    const values = [ ...stageValues.filter((_, j) => i !== j) ];\n    setStageValues(values);\n    setStageIndex(stageIndex - 1);\n    handleChange({ wfGroups: values });\n  };\n\n  const loadGroupOptions = (inputValue) => fetchFilterGroups(inputValue);\n\n  const createStageInput = (idx) => (\n    <StackItem key={ `Stack_${idx + 1}` }>\n      <FormGroup\n        label={ `Group ${idx + 1}` }\n        fieldId={ `${idx + 1}_stage_label` }\n      >\n        <Grid gutter=\"md\">\n          <GridItem span={ 8 }>\n            <AsyncSelect\n              cacheOptions\n              isClearable\n              label={ `${idx + 1} Group` }\n              aria-label={ `${idx + 1} Group` }\n              onToggle={ onToggle }\n              key={ `stage-${idx + 1}` }\n              onChange={ (e) => onStageChange(e, idx) }\n              value={ stageValues[idx] }\n              inpuValue={ inputValue }\n              isexpanded={ isExpanded }\n              loadOptions={ asyncDebounce(loadGroupOptions) }\n              defaultOptions={ defaultOptions }\n              onInputChange={ (e) => onInputChange(e, idx) }\n            />\n          </GridItem>\n          <GridItem span={ 1 } style={ { display: 'flex' } }>\n            { idx > 0 && <Button variant=\"link\" isInline key={ idx } id={ idx } onClick={ removeStage }>\n              <TrashIcon/> { 'Remove' }\n            </Button> }\n          </GridItem>\n        </Grid>\n      </FormGroup>\n    </StackItem>\n  );\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\">{ title || 'Set groups' }</Title>\n        </StackItem>\n        <StackItem>\n          { isFetching && <WorkflowInfoFormLoader/> }\n          { !isFetching &&\n          <Stack gutter=\"sm\">\n            { stageValues.map((_stage, idx) => createStageInput(idx)) }\n            <StackItem style={ { borderTop: 10 } }>\n              <Button id=\"add-workflow-stage\" variant=\"link\" isInline onClick={ addStage }>\n                <PlusIcon/> { `Add ${ stageValues.length > 0 ? 'another' : 'a'} group` }\n              </Button>\n            </StackItem>\n          </Stack> }\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetStages.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func\n};\n\nexport default SetStages;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, fetchWorkflow } from '../../../redux/actions/workflow-actions';\nimport SummaryContent from './summary-content';\nimport WorkflowInfoForm from './stage-information';\nimport SetStages from './set-stages';\n\nconst AddWorkflow = ({\n  history: { push },\n  addWorkflow,\n  addNotification,\n  postMethod,\n  rbacGroups\n}) => {\n  const [ formData, setValues ] = useState({});\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const isInfoValid = () =>\n    formData.name && formData.name.length > 0;\n\n  const steps = [\n    { name: 'General information', component: <WorkflowInfoForm formData={ formData }\n      handleChange={ handleChange }\n      isValid={ isInfoValid }/> },\n    { name: 'Set groups', component: <SetStages formData={ formData }\n      handleChange={ handleChange } options={ rbacGroups } /> },\n    { name: 'Review', component: <SummaryContent formData={ formData }\n      options={ rbacGroups } />, nextButtonText: 'Confirm' }\n  ];\n\n  const onSave = () => {\n    const { name, description, wfGroups } = formData;\n    const workflowData = { name, description, group_refs: wfGroups ? wfGroups.map(group => group.value) : []};\n    return addWorkflow(workflowData).then(() => postMethod()).then(() => (push('/workflows')));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Creating approval process',\n      dismissable: true,\n      description: 'Creating approval process was cancelled by the user.'\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Wizard\n      title={ 'Create approval process' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSave  }\n      steps={ steps }\n    />\n  );\n};\n\nAddWorkflow.defaultProps = {\n  rbacGroups: [],\n  initialValues: {}\n};\n\nAddWorkflow.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addWorkflow: PropTypes.func.isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    rbacGroups: state.groupReducer.groups\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddWorkflow));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  Title\n} from '@patternfly/react-core';\n\nconst WorkflowSequence = ({ formData, handleChange, isValid, title = undefined }) => {\n  const { sequence } = formData;\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Enter sequence\"\n              isRequired\n              fieldId=\"workflow-sequence\"\n              isValid={ isValid() }\n              helperTextInvalid={ 'Enter a positive number' }\n            >\n              <TextInput\n                isRequired\n                type=\"number\"\n                id=\"workflow-sequence\"\n                isValid={ isValid() }\n                name=\"workflow-sequence\"\n                aria-describedby=\"workflow-name\"\n                value={ sequence }\n                onChange={ (_, event) => handleChange({ sequence: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowSequence.propTypes = {\n  sequence: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired\n};\n\nexport default WorkflowSequence;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport WorkflowInfoForm from './add-stages/stage-information';\nimport WorkflowSequenceForm from './add-stages/workflow-sequence';\nimport '../../App.scss';\n\nconst EditWorkflowInfoModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  workflow,\n  isFetching,\n  editType\n}) => {\n  const [ formData, setFormData ] = useState({});\n\n  const handleChange = data => setFormData({ ...formData, ...data });\n\n  useEffect(() => {\n    fetchWorkflow(id).then((data) => setFormData({ ...formData, ...data.value }));\n  }, []);\n\n  const isSequenceValid = () =>\n    formData.sequence && formData.sequence >= 0;\n\n  const isInfoValid = () =>\n    formData.name && formData.name.length > 0;\n\n  const formValid = () =>(editType === 'sequence' ?\n    isSequenceValid() : isInfoValid());\n\n  const onSave = () => {\n    if (!formValid()) {return;}\n\n    const { name, description, sequence } = formData;\n    const workflowData = { id, name, description, sequence };\n    updateWorkflow(workflowData).then(() => postMethod()).then(() => push('/workflows'));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Edit approval process`,\n      dismissable: true,\n      description: `Edit approval process was cancelled by the user.`\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ `Edit approval process` }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"edit-workflow-info-modal-info\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (editType === 'info' ?\n              <WorkflowInfoForm formData={ formData }\n                handleChange={ handleChange }\n                isValid={ isInfoValid }\n                title={ `Make any changes to approval process ${workflow.name}` }/> :\n              <WorkflowSequenceForm formData={ formData }\n                handleChange={ handleChange }\n                isValid={ isSequenceValid }\n                title={ `Set the sequence for the approval process ${workflow.name}` }/>\n            ) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label={ 'Save' }\n                  id=\"save-edit-workflow-info\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  validated={ !isFetching && formValid(formData) }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  id=\"cancel-edit-workflow-info\"\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowInfoModal.defaultProps = {\n  isFetching: false,\n  editType: 'info'\n};\n\nEditWorkflowInfoModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  workflow: PropTypes.object,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { workflow, isRecordLoading }}) => ({\n  workflow,\n  isFetching: isRecordLoading\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditWorkflowInfoModal));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { fetchRbacGroups } from '../../redux/actions/group-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport SetStages from './add-stages/set-stages';\nimport '../../App.scss';\n\nconst EditWorkflowStagesModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  isFetching\n}) => {\n  const [ formData, setValues ] = useState({});\n\n  const handleChange = data => {\n    setValues({ ...formData, ...data });\n  };\n\n  const initialValues = (wfData) => {\n    const stageOptions = wfData.group_refs.map((group, idx) => {\n      return { label: (wfData.group_names[idx] ? wfData.group_names[idx] : group), value: group };\n    });\n    const data = { ...wfData, wfGroups: stageOptions };\n    return data;\n  };\n\n  useEffect(() => {\n    fetchWorkflow(id).then((result) => setValues(initialValues(result.value)));\n  }, []);\n\n  const onSave = () => {\n    const { wfGroups } = formData;\n    const workflowData = { group_refs: wfGroups.map(group => group.value)  };\n    updateWorkflow({ id, ...workflowData }).then(() => postMethod()).then(()=>push('/workflows'));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Edit approval process's groups`,\n      dismissable: true,\n      description: `Edit approval process's groups was cancelled by the user.`\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ `Edit approval process's groups` }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"workflow-stages-formgroup\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (\n              <StackItem className=\"stages-modal\">\n                <SetStages className=\"stages-modal\" formData={ formData }\n                  handleChange={ handleChange }\n                  title={ `Add or remove ${formData.name}'s groups` }/>\n              </StackItem>) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button aria-label={ 'Save' }\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isDisabled={ isFetching }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowStagesModal.defaultProps = {\n  rbacGroups: [],\n  isFetching: false\n};\n\nEditWorkflowStagesModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  addWorkflow: PropTypes.func.isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  fetchRbacGroups: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isFetching: PropTypes.bool,\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string\n  })\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow,\n  fetchRbacGroups\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { isRecordLoading }}) => ({\n  isFetching: isRecordLoading\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditWorkflowStagesModal));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal, Button, Bullseye, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { removeWorkflow, removeWorkflows } from '../../redux/actions/workflow-actions';\n\nconst RemoveWorkflowModal = ({\n  history: { goBack, push },\n  match: { params: { id: workflowId  }},\n  ids,\n  removeWorkflow,\n  removeWorkflows,\n  fetchData,\n  setSelectedWorkflows\n}) => {\n  if (!workflowId && (!ids || ids.length === 0)) {\n    return null;\n  }\n\n  const onSubmit = () => { return ((workflowId ? removeWorkflow(workflowId) : removeWorkflows(ids))\n  .then(setSelectedWorkflows([])).then(fetchData()).then(push('/workflows')));\n  };\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      width={ '40%' }\n      title={ '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button id=\"cancel-remove-workflow\" key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button id=\"submit-remove-workflow\" key=\"submit\" variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Bullseye>\n        <TextContent>\n          <Text component={ TextVariants.h1 }>\n            <FormattedMessage\n              id=\"remove-workflow-modal\"\n              defaultMessage={ `Removing {count, number} {count, plural,\n              one {approval process}\n              other {approval processes}\n            }` }\n              values={ {\n                count: workflowId !== undefined ? 1 : ids.length\n              } }\n            />\n          </Text>\n        </TextContent>\n      </Bullseye>\n    </Modal>\n  );\n};\n\nRemoveWorkflowModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.object,\n  removeWorkflows: PropTypes.func.isRequired,\n  removeWorkflow: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  setSelectedWorkflows: PropTypes.func.isRequired,\n  workflowId: PropTypes.string,\n  ids: PropTypes.array\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  removeWorkflow,\n  removeWorkflows\n}, dispatch);\n\nexport default withRouter(connect(null, mapDispatchToProps)(RemoveWorkflowModal));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport { fetchGroupName } from '../../helpers/group/group-helper';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/Skeleton';\n\nconst ExpandableContent = ({ description, groupRefs, id }) => {\n  const [ groupNames, setGroupNames ] = useState([]);\n  const [ isLoaded, setIsLoaded ] = useState();\n  const [ fetching, setFetching ] = useState();\n\n  const expandedWorkflows = useSelector(({ workflowReducer: { expandedWorkflows }}) => expandedWorkflows);\n\n  const fetchGroupNames = () => Promise.all(groupRefs.map((ref) => fetchGroupName(ref)));\n\n  useEffect(() => {\n    if (!isLoaded && expandedWorkflows.includes(id) && !fetching) {\n      setFetching(true);\n      fetchGroupNames(groupRefs).then((data) => { setGroupNames(data); setIsLoaded(true); }).catch(() => setIsLoaded(true));\n    }\n  }, [ expandedWorkflows ]);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Description</Text>\n        <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ description }</Text>\n      </TextContent>\n      <TextContent>\n        <Fragment>\n          <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Groups</Text>\n          { isLoaded ?\n            <Text className=\"data-table-detail content\"\n              component={ TextVariants.h5 }>\n              { groupNames.join(',') }\n            </Text> :\n            <div>\n              <Skeleton size={ SkeletonSize.sm } />\n            </div> }\n        </Fragment>\n      </TextContent>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  description: PropTypes.string,\n  groupRefs: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default ExpandableContent;\n","import React from 'react';\n\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data) =>\n  data.filter(item => {\n    return (item.name !== 'Always approve');\n  }).reduce((acc,\n    {\n      id,\n      name,\n      description,\n      sequence,\n      group_refs\n    }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      selected: false,\n      cells: [ name, description, sequence ]\n    }, {\n      parent: key * 2,\n      cells: [{ title: <ExpandableContent\n        description={ description }\n        groupRefs={ group_refs }\n        id={ id }\n      /> }]\n    }\n  ]), []);\n\n","import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Link, useHistory } from 'react-router-dom';\nimport { ToolbarGroup, ToolbarItem, Button } from '@patternfly/react-core';\nimport { expandable } from '@patternfly/react-table';\nimport { fetchWorkflows, expandWorkflow } from '../../redux/actions/workflow-actions';\nimport AddWorkflow from './add-stages/add-stages-wizard';\nimport EditWorkflowInfo from './edit-workflow-info-modal';\nimport EditWorkflowStages from './edit-workflow-stages-modal';\nimport RemoveWorkflow from './remove-workflow-modal';\nimport { createRows } from './workflow-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../../smart-components/app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\n\nconst columns = [{\n  title: 'Name',\n  cellFormatters: [ expandable ]\n},\n'Description',\n'Sequence'\n];\n\nconst debouncedFilter = asyncDebounce(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchWorkflows(filter, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst workflowsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Workflows = () => {\n  const [ selectedWorkflows, setSelectedWorkflows ] = useState([]);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch ] = useReducer(\n    workflowsListState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ workflowReducer: { workflows }}) => workflows\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchWorkflows(filterValue, defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const tabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n    { eventKey: 1, title: 'Approval processes', name: '/workflows' }];\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(fetchWorkflows(filterValue, pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/workflows/add-workflow\" render={ props => <AddWorkflow { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-info/:id\" render={ props => <EditWorkflowInfo editType='info' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-stages/:id\" render={ props => <EditWorkflowStages editType='stages' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-sequence/:id\" render={ props => <EditWorkflowInfo editType='sequence' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/remove/:id\"\n      render={ props => <RemoveWorkflow { ...props }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows } /> }/>\n    <Route exact path=\"/workflows/remove\"\n      render={ props => <RemoveWorkflow { ...props }\n        ids={ selectedWorkflows }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows } /> }/>\n  </Fragment>;\n\n  const actionResolver = (workflowData, { rowIndex }) => rowIndex % 2 === 1 ?\n    null\n    : [\n      {\n        title: 'Edit info',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-info/${workflow.id}`)\n      },\n      {\n        title: 'Edit groups',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-stages/${workflow.id}`)\n      },\n      {\n        title: 'Edit sequence',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-sequence/${workflow.id}`)\n      },\n      {\n        title: 'Delete',\n        style: { color: 'var(--pf-global--danger-color--100)'\t},\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/remove/${workflow.id}`)\n      }\n    ];\n\n  const setCheckedItems = (checkedWorkflows) =>\n    setSelectedWorkflows(checkedWorkflows.map(wf => wf.id));\n\n  const anyWorkflowsSelected = selectedWorkflows.length > 0;\n\n  const toolbarButtons = () => <ToolbarGroup className={ `pf-u-pl-lg top-toolbar` }>\n    <ToolbarItem>\n      <Link id=\"add-workflow-link\" to=\"/workflows/add-workflow\">\n        <Button\n          variant=\"primary\"\n          aria-label=\"Create approval process\"\n        >\n          Create approval process\n        </Button>\n      </Link>\n    </ToolbarItem>\n    <ToolbarItem>\n      <Link id=\"remove-multiple-workflows\" className={ anyWorkflowsSelected ? '' : 'disabled-link' } to={ { pathname: '/workflows/remove' } }>\n        <Button\n          variant=\"link\"\n          isDisabled={ !anyWorkflowsSelected }\n          style={ { color: anyWorkflowsSelected ? 'var(--pf-global--danger-color--100)' : 'var(--pf-global--disabled-color--100)'\t} }\n          aria-label=\"Delete approval process\"\n        >\n          Delete\n        </Button>\n      </Link>\n    </ToolbarItem>\n  </ToolbarGroup>;\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandWorkflow(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        <AppTabs tabItems={ tabItems }/>\n      </TopToolbar>\n      <TableToolbarView\n        data={ data }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ handlePagination }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"approval processes\"\n        titleSingular=\"approval process\"\n        pagination={ meta }\n        setCheckedItems={ setCheckedItems }\n        toolbarButtons={ toolbarButtons }\n        filterValue={ filterValue }\n        onFilterChange={ handleFilterChange }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n      />\n    </Fragment>\n  );\n};\n\nWorkflows.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  workflows: PropTypes.array,\n  isLoading: PropTypes.bool,\n  selectedWorkflows: PropTypes.array\n};\n\nWorkflows.defaultProps = {\n  workflows: [],\n  rbacGroups: {},\n  isLoading: false\n};\n\nexport default Workflows;\n"],"sourceRoot":""}