{"version":3,"sources":["webpack:///./src/helpers/workflow/workflow-helper.js","webpack:///./src/redux/actions/workflow-actions.js","webpack:///./src/smart-components/workflow/add-groups/summary-content.js","webpack:///./src/smart-components/workflow/add-groups/workflow-information.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/smart-components/workflow/add-groups/set-groups.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/smart-components/workflow/add-groups/add-workflow-wizard.js","webpack:///./src/smart-components/workflow/add-groups/workflow-sequence.js","webpack:///./src/smart-components/workflow/edit-workflow-info-modal.js","webpack:///./src/smart-components/workflow/edit-workflow-groups-modal.js","webpack:///./src/smart-components/workflow/remove-workflow-modal.js","webpack:///./src/smart-components/workflow/expandable-content.js","webpack:///./src/smart-components/workflow/workflow-table-helpers.js","webpack:///./src/smart-components/workflow/workflows.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js"],"names":["workflowApi","getWorkflowApi","templateApi","getTemplateApi","fetchWorkflows","filter","pagination","defaultSettings","paginationQuery","limit","offset","filterQuery","getAxiosInstance","get","APPROVAL_API_BASE","fetchWorkflow","id","a","showWorkflow","removeWorkflow","workflowId","destroyWorkflow","removeWorkflows","selectedWorkflows","Promise","all","map","type","ActionTypes","payload","WorkflowHelper","apiProps","addWorkflow","workflowData","workflow","listTemplates","then","data","Error","addWorkflowToTemplate","meta","notifications","fulfilled","variant","title","description","updateWorkflow","workflows","SummaryContent","formData","name","wfGroups","Stack","gutter","StackItem","Title","size","TextContent","Text","className","component","TextVariants","h5","Grid","GridItem","span","p","length","group","idx","key","value","label","propTypes","PropTypes","object","validateName","fetchWorkflowByName","find","wf","undefined","WorkflowInfoForm","initialValue","handleChange","setIsValid","useState","error","setError","setResult","result","handleNameChange","validateCallback","asyncDebounce","Form","FormGroup","isRequired","fieldId","isValid","helperTextInvalid","TextInput","aria-describedby","onBlur","onChange","_","event","onHandleChange","currentTarget","TextArea","string","func","bool","shape","getRbacGroupApi","fetchFilterApprovalGroups","filterValue","RBAC_API_BASE","uuid","SetGroups","isExpanded","setExpanded","groupValues","setGroupValues","inputValue","setInputValue","isFetching","setIsFetching","defaultOptions","useSelector","groupReducer","groups","dispatch","useDispatch","useEffect","FETCH_RBAC_GROUPS","GroupHelper","cacheOptions","isClearable","isMulti","styles","menuPortal","base","zIndex","menuPortalTarget","document","body","menuPosition","menuPlacement","aria-label","onToggle","e","values","inpuValue","isexpanded","loadOptions","onInputChange","replace","AddWorkflow","setValues","push","useHistory","rbacGroups","stepIdReached","setStepIdReached","steps","enableNext","canJumpTo","options","nextButtonText","Wizard","isOpen","onClose","addNotification","dismissable","onSave","group_refs","onNext","prevStepIdReached","defaultProps","initialValues","match","arrayOf","oneOfType","number","WorkflowSequence","sequence","handleSequenceChange","EditWorkflowInfoModal","history","params","postMethod","editType","setFormData","setInitialValue","onCancel","Modal","width","ActionGroup","Split","SplitItem","Button","onClick","withRouter","connect","workflowReducer","isRecordLoading","bindActionCreators","EditWorkflowGroupsModal","wfData","groupOptions","isDisabled","item","RemoveWorkflowModal","goBack","ids","fetchData","setSelectedWorkflows","isSmall","actions","Bullseye","h1","defaultMessage","count","array","ExpandableContent","groupRefs","small","ref","listGroupNames","join","createRows","reduce","acc","selected","cells","parent","columns","cellFormatters","expandable","debouncedFilter","filteringCallback","initialState","isFiltering","workflowsListState","state","action","Workflows","useReducer","stateDispatch","scrollToTop","handleFilterChange","handlePagination","_apiProps","anyWorkflowsSelected","tabItems","eventKey","isSelectable","routes","exact","path","render","props","actionResolver","rowIndex","_event","_rowId","style","color","titlePlural","titleSingular","setCheckedItems","checkedWorkflows","toolbarButtons","ToolbarGroup","ToolbarItem","to","pathname","onFilterChange","isLoading","onCollapse","setRows","setOpen","expandWorkflow","rows","renderEmptyState","Icon","SearchIcon","PrimaryAction","asyncFunction","debounceTime","onlyResolvesLast","awesomeDebouncePromise","ApprovalBreadcrumbs","breadcrumbs","Breadcrumb","Object","BreadcrumbItem","isActive","TopToolbar","children","paddingBottom","Level","node","TopToolbarTitle","LevelItem","AppTabs","location","activeTab","includes","activeKey","onSelect","tabIndex","TableEmptyState","renderDescription","centered","icon","any","FilterToolbarItem","searchValue","placeholder","height","AsyncPagination","apiRequest","isCompact","Pagination","perPage","itemCount","onPerPageSelect","page","getCurrentPage","onSetPage","debounce","getNewPage","request","debouncePromise","direction","BottomPaginationContainer","TableToolbarView","row","setSelected","newData","checkedItems","page-type","Toolbar","flex","renderToolbar","Table","_index","_isOpen","index","dropDirection","requests"],"mappings":"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","file":"js/workflows.js","sourcesContent":["import { getWorkflowApi, getTemplateApi, getAxiosInstance } from '../shared/user-login';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\n\nconst workflowApi = getWorkflowApi();\nconst templateApi = getTemplateApi();\n\nexport function fetchWorkflows(filter = '', pagination = defaultSettings) {\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains_i]=${filter}`;\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows/?${filterQuery}${paginationQuery}`\n  );\n}\n\nexport async function fetchWorkflow(id) {\n  return await workflowApi.showWorkflow(id);\n}\n\nexport function fetchWorkflowByName(name) {\n  return fetchWorkflows(name);\n}\n\nexport function updateWorkflow(data) {\n  return workflowApi.updateWorkflow(data.id, data);\n}\n\nexport  function addWorkflow(workflow) {\n  return templateApi.listTemplates().then(({ data }) => {\n    // workaround for v1. Need to pass template ID with the workflow. Assigning to first template\n    if (!data[0]) {\n      throw new Error('No template exists');\n    }\n\n    return data[0].id;\n\n  }).then(id => workflowApi.addWorkflowToTemplate(id, workflow, {}));\n}\n\nexport async function removeWorkflow(workflowId) {\n  return await workflowApi.destroyWorkflow(workflowId);\n}\n\nexport async function removeWorkflows(selectedWorkflows) {\n  return Promise.all(selectedWorkflows.map(async workflowId => await workflowApi.destroyWorkflow(workflowId)));\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as WorkflowHelper from '../../helpers/workflow/workflow-helper';\n\nexport const fetchWorkflows = (filter, pagination) => ({\n  type: ActionTypes.FETCH_WORKFLOWS,\n  payload: WorkflowHelper.fetchWorkflows(filter, pagination)\n});\n\nexport const fetchWorkflow = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW,\n  payload: WorkflowHelper.fetchWorkflow(apiProps)\n});\n\nexport const addWorkflow = (workflowData) => ({\n  type: ActionTypes.ADD_WORKFLOW,\n  payload: WorkflowHelper.addWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding approval process',\n        description: 'The approval process was added successfully.'\n      }\n    }\n  }\n});\n\nexport const updateWorkflow = (workflowData) => ({\n  type: ActionTypes.UPDATE_WORKFLOW,\n  payload: WorkflowHelper.updateWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating approval process',\n        description: 'The approval process was updated successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflow = (workflow) => ({\n  type: ActionTypes.REMOVE_WORKFLOW,\n  payload: WorkflowHelper.removeWorkflow(workflow),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval process',\n        description: 'The approval process was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflows = (workflows) => ({\n  type: ActionTypes.REMOVE_WORKFLOWS,\n  payload: WorkflowHelper.removeWorkflows(workflows),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval processes',\n        description: 'The selected approval processes were removed successfully.'\n      }\n    }\n  }\n});\n\nexport const expandWorkflow = (id) => ({\n  type: ActionTypes.EXPAND_WORKFLOW,\n  payload: id\n});\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst SummaryContent = ({ formData }) => {\n  const { name, description, wfGroups } = formData ? formData : { name: '', description: '', wfGroups: []};\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                    Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              { wfGroups && wfGroups.length > 0 && wfGroups.map((group, idx)  =>\n              { return (<Fragment key={ `Groups` }>\n                <Grid gutter=\"md\">\n                  <GridItem span={ 2 }>\n                    <Text key={ group.value } className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                      { idx === 0 ? 'Groups' : '' }\n                    </Text>\n                  </GridItem>\n                  <GridItem span={ 10 }>\n                    <Text key={ group.label } className=\"data-table-detail content\" component={ TextVariants.p }>\n                      { `${wfGroups[idx].label}` }\n                    </Text>\n                  </GridItem>\n                </Grid>\n              </Fragment>); })\n              }\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  formData: PropTypes.object\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchWorkflowByName } from '../../../helpers/workflow/workflow-helper';\n\nconst validateName = (name) => fetchWorkflowByName(name)\n.then(({ data }) => {\n  return data.find(wf => name === wf.name)\n    ? 'Name has already been taken'\n    : undefined;\n});\n\nconst debouncedValidator = (data, validateCallback) => asyncDebounce(validateName(data).then((result) => validateCallback(result)));\n\nconst WorkflowInfoForm = ({ formData, initialValue, handleChange, setIsValid, title = undefined }) => {\n  const name = formData.name || '';\n  const description = formData.description || '';\n  const [ error, setError ] = useState(undefined);\n\n  const setResult = (result) => {\n    setError(result);\n    setIsValid(!result);\n  };\n\n  const onHandleChange = (name) => {\n    setError(!name || name.length < 1 ? 'Enter a name for the approval process' : undefined);\n    handleChange({ name });\n  };\n\n  const handleNameChange = (name) => {\n    if (!name || name.length < 1) {\n      setError('Enter a name for the approval process');\n    }\n    else if (!initialValue || initialValue.name !== name) {\n      debouncedValidator(name, setResult);\n    }\n    else {\n      setError(undefined);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Approval process name\"\n              isRequired\n              fieldId=\"workflow-name\"\n              isValid={ !error }\n              helperTextInvalid={ error }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"workflow-name\"\n                name=\"workflow-name\"\n                aria-describedby=\"workflow-name\"\n                value={ name }\n                isValid={ !error }\n                onBlur={ () => handleNameChange(name) }\n                onChange={ (_, event) => onHandleChange(event.currentTarget.value) }\n              />\n            </FormGroup>\n            <FormGroup label=\"Description\" fieldId=\"workflow-description\">\n              <TextArea\n                type=\"text\"\n                id=\"workflow-description\"\n                name=\"workflow-description\"\n                value={ description }\n                onChange={ (_, event) => handleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowInfoForm.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  isValid: PropTypes.bool,\n  setIsValid: PropTypes.func.isRequired,\n  initialValue: PropTypes.shape({\n    name: PropTypes.string })\n};\n\nexport default WorkflowInfoForm;\n","import { getRbacGroupApi, getAxiosInstance } from '../shared/user-login';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst api = getRbacGroupApi();\n\nexport async function fetchGroupNames(groupRefs) {\n  if (groupRefs) {\n    return Promise.all(groupRefs.map(async id => {\n      try {\n        const group = await api.getGroup(id);\n        return group.name;\n      } catch (error) {\n        if (error.status !== 404) {\n          throw error;\n        }\n        else {\n          return id;\n        }\n      }\n    }));\n  }\n}\n\nexport const fetchGroupName = (id) =>\n  getAxiosInstance().get(`${RBAC_API_BASE}/groups/${id}/`)\n  .then((data) => data.name).catch((error) => {\n    if (error.status !== 404) {\n      throw error;\n    } else {\n      return id;\n    }\n  });\n\nexport const fetchFilterApprovalGroups = (filterValue) => {\n  const filterQuery = `&name=${filterValue}`;\n  return getAxiosInstance().get(`${RBAC_API_BASE}/groups/?role_names=\",Approval Administrator,Approval Approver,\"\n  ${filterValue && filterValue.length > 0\n    ? filterQuery : ''}`)\n  .then(({ data }) => (data && data.length > 0 ? data.map(({ uuid, name }) => ({ label: name, value: uuid })) : undefined));\n};\n\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AsyncSelect from 'react-select/async';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchFilterApprovalGroups } from '../../../helpers/group/group-helper';\nimport { WorkflowInfoFormLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Stack,\n  StackItem,\n  Title\n} from '@patternfly/react-core';\nimport { fetchRbacApprovalGroups } from '../../../redux/actions/group-actions';\n\nconst SetGroups = ({ formData, handleChange, title }) => {\n  const [ isExpanded, setExpanded ] = useState(false);\n  const [ groupValues, setGroupValues ] = useState([]);\n  const [ inputValue, setInputValue ] = useState([]);\n  const [ isFetching, setIsFetching ] = useState([]);\n\n  const defaultOptions = useSelector(({ groupReducer: { groups }}) => groups || []);\n\n  const onInputChange = (newValue) => {\n    const value = newValue.replace(/\\W/g, '');\n    setInputValue(value);\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      fetchRbacApprovalGroups()).then(() => setIsFetching(false));\n  }, []);\n\n  useEffect(() => {\n    setGroupValues(formData.wfGroups ? formData.wfGroups : []);\n  }, [ formData.wfGroups ]);\n\n  const onToggle = (isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  const onGroupChange = (values) => {\n    setGroupValues(values);\n    handleChange({ wfGroups: values });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem key={ 'title' }>\n          <Title size=\"md\">{ title || 'Set groups' }</Title>\n        </StackItem>\n        <StackItem key={ 'group' }>\n          { isFetching && <WorkflowInfoFormLoader/> }\n          { !isFetching &&\n              <AsyncSelect\n                cacheOptions\n                isClearable\n                isMulti\n                styles={ { menuPortal: base => ({ ...base, zIndex: 9999 }) } }\n                menuPortalTarget={ document.body }\n                menuPosition={ 'fixed' }\n                menuPlacement={ 'bottom' }\n                label={ 'Group' }\n                aria-label={ 'Group' }\n                onToggle={ onToggle }\n                key={ `groups` }\n                onChange={ (e) => onGroupChange(e) }\n                value={ groupValues }\n                inpuValue={ inputValue }\n                isexpanded={ isExpanded }\n                loadOptions={ asyncDebounce(fetchFilterApprovalGroups) }\n                defaultOptions={ defaultOptions }\n                onInputChange={ (e) => onInputChange(e) }\n              /> }\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetGroups.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func\n};\n\nexport default SetGroups;\n","import { FETCH_RBAC_GROUPS } from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchRbacApprovalGroups = () => ({\n  type: FETCH_RBAC_GROUPS,\n  payload: GroupHelper.fetchFilterApprovalGroups()\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow } from '../../../redux/actions/workflow-actions';\nimport SummaryContent from './summary-content';\nimport WorkflowInfoForm from './workflow-information';\nimport SetGroups from './set-groups';\n\nconst AddWorkflow = () => {\n  const [ formData, setValues ] = useState({ wfGroups: []});\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  const rbacGroups = useSelector(({ groupReducer: { groups }}) => groups);\n  const [ isValid, setIsValid ] = useState(formData.name !== undefined && formData.name.length > 0);\n  const [ stepIdReached, setStepIdReached ] = useState(1);\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const onNext = ({ id }) => {\n    setStepIdReached(prevStepIdReached =>  prevStepIdReached < id ? id : prevStepIdReached);\n  };\n\n  const steps = [\n    { id: 1,\n      name: 'General information',\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      component: <WorkflowInfoForm formData={ formData }\n        handleChange={ handleChange }\n        setIsValid={ setIsValid }/> },\n    { id: 2,\n      name: 'Set groups',\n      canJumpTo: stepIdReached >= 2,\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      component: <SetGroups formData={ formData }\n        handleChange={ handleChange } options={ rbacGroups } /> },\n    { id: 3,\n      canJumpTo: stepIdReached >= 3,\n      enableNext: isValid && formData.name && formData.name.length > 0,\n      name: 'Review', component: <SummaryContent formData={ formData }\n        options={ rbacGroups } />, nextButtonText: 'Confirm' }\n  ];\n\n  const onSave = () => {\n    const { name, description, wfGroups } = formData;\n    const workflowData = { name, description,\n      group_refs: wfGroups && wfGroups.length > 0 ? wfGroups.map(group => ({ name: group.label, uuid: group.value })) : []};\n    push('/workflows');\n    dispatch(addWorkflow(workflowData));\n  };\n\n  const onCancel = () => {\n    dispatch(addNotification({\n      variant: 'warning',\n      title: 'Creating approval process',\n      dismissable: true,\n      description: 'Creating approval process was cancelled by the user.'\n    }));\n    push('/workflows');\n  };\n\n  return (\n    <Wizard\n      title={ 'Create approval process' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSave  }\n      onNext={  onNext }\n      steps={ steps }\n    />\n  );\n};\n\nAddWorkflow.defaultProps = {\n  rbacGroups: [],\n  initialValues: {}\n};\n\nAddWorkflow.propTypes = {\n  match: PropTypes.object,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n};\n\nexport default AddWorkflow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  Title\n} from '@patternfly/react-core';\n\nconst WorkflowSequence = ({ formData, handleChange, isValid, setIsValid, title = undefined }) => {\n  const { sequence } = formData;\n\n  const handleSequenceChange = (sequence) => {\n    setIsValid(sequence >= 0);\n    handleChange({ sequence });\n  };\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Enter sequence\"\n              isRequired\n              fieldId=\"workflow-sequence\"\n              isValid={ isValid }\n              helperTextInvalid={ 'Enter a positive number' }\n            >\n              <TextInput\n                isRequired\n                type=\"number\"\n                id=\"workflow-sequence\"\n                isValid={ isValid }\n                name=\"workflow-sequence\"\n                aria-describedby=\"workflow-name\"\n                value={ sequence }\n                onChange={ (_, event) => handleSequenceChange(event.currentTarget.value) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowSequence.propTypes = {\n  sequence: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  setIsValid: PropTypes.func.isRequired,\n  isValid: PropTypes.bool\n};\n\nexport default WorkflowSequence;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport WorkflowInfoForm from './add-groups/workflow-information';\nimport WorkflowSequenceForm from './add-groups/workflow-sequence';\nimport '../../App.scss';\n\nconst EditWorkflowInfoModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  workflow,\n  isFetching,\n  editType\n}) => {\n  const [ formData, setFormData ] = useState({});\n  const [ initialValue, setInitialValue ] = useState({});\n  const [ isValid, setIsValid ] = useState(true);\n\n  const handleChange = data => setFormData({ ...formData, ...data });\n\n  useEffect(() => {\n    fetchWorkflow(id).then((data) => { setFormData({ ...formData, ...data.value }); setInitialValue({ ...data.value });});\n  }, []);\n\n  const onSave = () => {\n    if (!isValid) {return;}\n\n    const { name, description, sequence } = formData;\n    const workflowData = { id, name, description, sequence };\n    updateWorkflow(workflowData).then(() => postMethod()).then(() => push('/workflows'));\n  };\n\n  const onCancel = () => {\n    const { title, description } =\n        editType === 'sequence' ? { title: `Edit approval process's sequence`,\n          description: `Edit approval process's sequence was cancelled by the user.` } :\n          { title: `Edit approval process's information`,\n            description: `Edit approval process's information was cancelled by the user.` };\n    addNotification({\n      variant: 'warning',\n      title,\n      dismissable: true,\n      description\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ editType === 'sequence' ? 'Edit sequence' : 'Edit information' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"edit-workflow-info-modal-info\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (editType === 'info' ?\n              <WorkflowInfoForm formData={ formData } initialValue={ initialValue }\n                handleChange={ handleChange }\n                setIsValid={ setIsValid }\n                title={ `Make any changes to approval process ${workflow.name}` }/> :\n              <WorkflowSequenceForm formData={ formData }\n                initialValue={ initialValue }\n                handleChange={ handleChange }\n                isValid={ isValid }\n                setIsValid={ setIsValid }\n                title={ `Set the sequence for the approval process ${workflow.name}` }/>\n            ) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label={ 'Save' }\n                  id=\"save-edit-workflow-info\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  id=\"cancel-edit-workflow-info\"\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowInfoModal.defaultProps = {\n  isFetching: false,\n  editType: 'info'\n};\n\nEditWorkflowInfoModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  workflow: PropTypes.object,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { workflow, isRecordLoading }}) => ({\n  workflow,\n  isFetching: isRecordLoading\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditWorkflowInfoModal));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport SetGroups from './add-groups/set-groups';\nimport '../../App.scss';\n\nconst EditWorkflowGroupsModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  isFetching\n}) => {\n  const [ formData, setValues ] = useState({});\n\n  const handleChange = data => {\n    setValues({ ...formData, ...data });\n  };\n\n  const initialValues = (wfData) => {\n    const groupOptions = wfData.group_refs.map((group) => {\n      return { label: group.name, value: group.uuid };\n    });\n    const data = { ...wfData, wfGroups: groupOptions };\n    return data;\n  };\n\n  useEffect(() => {\n    fetchWorkflow(id).then((result) => setValues(initialValues(result.value)));\n  }, []);\n\n  const onSave = () => {\n    const { wfGroups } = formData;\n    const workflowData = { group_refs: wfGroups ? wfGroups.map(group => ({ name: group.label, uuid: group.value })) : []};\n    updateWorkflow({ id, ...workflowData }).then(() => postMethod()).then(()=>push('/workflows'));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Edit approval process's groups`,\n      dismissable: true,\n      description: `Edit approval process's groups was cancelled by the user.`\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ `Edit approval process's groups` }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"workflow-groups-formgroup\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (\n              <StackItem className=\"groups-modal\">\n                <SetGroups className=\"groups-modal\" formData={ formData }\n                  handleChange={ handleChange }\n                  title={ `Add or remove ${formData.name}'s groups` }/>\n              </StackItem>) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button aria-label={ 'Save' }\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isDisabled={ isFetching }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowGroupsModal.defaultProps = {\n  rbacGroups: [],\n  isFetching: false\n};\n\nEditWorkflowGroupsModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  addWorkflow: PropTypes.func.isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isFetching: PropTypes.bool,\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string\n  })\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { isRecordLoading }}) => ({\n  isFetching: isRecordLoading\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditWorkflowGroupsModal));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal, Button, Bullseye, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { removeWorkflow, removeWorkflows } from '../../redux/actions/workflow-actions';\n\nconst RemoveWorkflowModal = ({\n  history: { goBack, push },\n  match: { params: { id: workflowId  }},\n  ids,\n  removeWorkflow,\n  removeWorkflows,\n  fetchData,\n  setSelectedWorkflows\n}) => {\n  if (!workflowId && (!ids || ids.length === 0)) {\n    return null;\n  }\n\n  const onSubmit = () => { return ((workflowId ? removeWorkflow(workflowId) : removeWorkflows(ids))\n  .then(setSelectedWorkflows([])).then(fetchData()).then(push('/workflows')));\n  };\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      width={ '40%' }\n      title={ '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button id=\"cancel-remove-workflow\" key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button id=\"submit-remove-workflow\" key=\"submit\" variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Bullseye>\n        <TextContent>\n          <Text component={ TextVariants.h1 }>\n            <FormattedMessage\n              id=\"remove-workflow-modal\"\n              defaultMessage={ `Removing {count, number} {count, plural,\n              one {approval process}\n              other {approval processes}\n            }` }\n              values={ {\n                count: workflowId !== undefined ? 1 : ids.length\n              } }\n            />\n          </Text>\n        </TextContent>\n      </Bullseye>\n    </Modal>\n  );\n};\n\nRemoveWorkflowModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.object,\n  removeWorkflows: PropTypes.func.isRequired,\n  removeWorkflow: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  setSelectedWorkflows: PropTypes.func.isRequired,\n  workflowId: PropTypes.string,\n  ids: PropTypes.array\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  removeWorkflow,\n  removeWorkflows\n}, dispatch);\n\nexport default withRouter(connect(null, mapDispatchToProps)(RemoveWorkflowModal));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ description, groupRefs }) => {\n  const listGroupNames = (groupRefs) => groupRefs.map((ref) => ref.name);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Description</Text>\n        <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ description }</Text>\n      </TextContent>\n      <TextContent>\n        <Fragment>\n          <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Groups</Text>\n          <Text className=\"data-table-detail content\"\n            component={ TextVariants.h5 }>\n            { listGroupNames(groupRefs).join(',') }\n          </Text>\n        </Fragment>\n      </TextContent>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  description: PropTypes.string,\n  groupRefs: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default ExpandableContent;\n","import React from 'react';\n\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data) =>\n  data.reduce((acc,\n    {\n      id,\n      name,\n      description,\n      sequence,\n      group_refs\n    }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      selected: false,\n      cells: [ name, description, sequence ]\n    }, {\n      parent: key * 2,\n      cells: [{ title: <ExpandableContent\n        description={ description }\n        groupRefs={ group_refs }\n        id={ id }\n      /> }]\n    }\n  ]), []);\n\n","import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Link, useHistory } from 'react-router-dom';\nimport { ToolbarGroup, ToolbarItem, Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { expandable } from '@patternfly/react-table';\nimport { fetchWorkflows, expandWorkflow } from '../../redux/actions/workflow-actions';\nimport AddWorkflow from './add-groups/add-workflow-wizard';\nimport EditWorkflowInfo from './edit-workflow-info-modal';\nimport EditWorkflowGroups from './edit-workflow-groups-modal';\nimport RemoveWorkflow from './remove-workflow-modal';\nimport { createRows } from './workflow-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../../smart-components/app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\n\nconst columns = [{\n  title: 'Name',\n  cellFormatters: [ expandable ]\n},\n'Description',\n'Sequence'\n];\n\nconst debouncedFilter = asyncDebounce(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchWorkflows(filter, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst workflowsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Workflows = () => {\n  const [ selectedWorkflows, setSelectedWorkflows ] = useState([]);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch ] = useReducer(\n    workflowsListState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ workflowReducer: { workflows }}) => workflows\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchWorkflows(filterValue, defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const tabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n    { eventKey: 1, title: 'Approval processes', name: '/workflows' }];\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(fetchWorkflows(filterValue, pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/workflows/add-workflow\" render={ props => <AddWorkflow { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-info/:id\" render={ props => <EditWorkflowInfo editType='info' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-groups/:id\" render={ props => <EditWorkflowGroups editType='groups' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-sequence/:id\" render={ props => <EditWorkflowInfo editType='sequence' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/remove/:id\"\n      render={ props => <RemoveWorkflow { ...props }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows } /> }/>\n    <Route exact path=\"/workflows/remove\"\n      render={ props => <RemoveWorkflow { ...props }\n        ids={ selectedWorkflows }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows } /> }/>\n  </Fragment>;\n\n  const actionResolver = (workflowData, { rowIndex }) => rowIndex % 2 === 1 ?\n    null\n    : [\n      {\n        title: 'Edit info',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-info/${workflow.id}`)\n      },\n      {\n        title: 'Edit groups',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-groups/${workflow.id}`)\n      },\n      {\n        title: 'Edit sequence',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-sequence/${workflow.id}`)\n      },\n      {\n        title: 'Delete',\n        style: { color: 'var(--pf-global--danger-color--100)'\t},\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/remove/${workflow.id}`)\n      }\n    ];\n\n  const setCheckedItems = (checkedWorkflows) =>\n    setSelectedWorkflows(checkedWorkflows.map(wf => wf.id));\n\n  const anyWorkflowsSelected = selectedWorkflows.length > 0;\n\n  const toolbarButtons = () => <ToolbarGroup className={ `pf-u-pl-lg top-toolbar` }>\n    <ToolbarItem>\n      <Link id=\"add-workflow-link\" to=\"/workflows/add-workflow\">\n        <Button\n          variant=\"primary\"\n          aria-label=\"Create approval process\"\n        >\n          Create approval process\n        </Button>\n      </Link>\n    </ToolbarItem>\n    <ToolbarItem>\n      <Link id=\"remove-multiple-workflows\" className={ anyWorkflowsSelected ? '' : 'disabled-link' } to={ { pathname: '/workflows/remove' } }>\n        <Button\n          variant=\"link\"\n          isDisabled={ !anyWorkflowsSelected }\n          style={ { color: anyWorkflowsSelected ? 'var(--pf-global--danger-color--100)' : 'var(--pf-global--disabled-color--100)'\t} }\n          aria-label=\"Delete approval process\"\n        >\n          Delete\n        </Button>\n      </Link>\n    </ToolbarItem>\n  </ToolbarGroup>;\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandWorkflow(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        <AppTabs tabItems={ tabItems }/>\n      </TopToolbar>\n      <TableToolbarView\n        data={ data }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ handlePagination }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"approval processes\"\n        titleSingular=\"approval process\"\n        pagination={ meta }\n        setCheckedItems={ setCheckedItems }\n        toolbarButtons={ toolbarButtons }\n        filterValue={ filterValue }\n        onFilterChange={ handleFilterChange }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n        renderEmptyState={ () => (\n          <TableEmptyState\n            title={ filterValue === '' ? 'No approval processes' : 'No results found' }\n            Icon={ SearchIcon }\n            PrimaryAction={ () =>\n              filterValue !== '' ? (\n                <Button onClick={ () => handleFilterChange('') } variant=\"link\">\n                  Clear all filters\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? 'No approval processes.'\n                : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n            }\n          />\n        ) }\n      />\n    </Fragment>\n  );\n};\n\nWorkflows.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  workflows: PropTypes.array,\n  isLoading: PropTypes.bool,\n  selectedWorkflows: PropTypes.array\n};\n\nWorkflows.defaultProps = {\n  workflows: [],\n  rbacGroups: {},\n  isLoading: false\n};\n\nexport default Workflows;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nconst ApprovalBreadcrumbs = ({ breadcrumbs }) => breadcrumbs\n  ? (\n    <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        <BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n          { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n        </BreadcrumbItem>\n      )) }\n    </Breadcrumb>\n  ) : null;\n\nApprovalBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    isActive: PropTypes.bool,\n    to: PropTypes.string\n  }))\n};\n\nexport default ApprovalBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport ApprovalBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <ApprovalBreadcrumbs breadcrumbs={ breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n              <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n                <Text component={ TextVariants.p }>{ description }</Text>\n              </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\nimport { Link }  from 'react-router-dom';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered\n    aria-label=\"No records\"\n  >\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={ Icon } />\n      <TextContent>\n        <Text component={ TextVariants.h1 }>{ title }</Text>\n      </TextContent>\n      <EmptyStateBody>\n        { description }\n        { renderDescription() }\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        { PrimaryAction && <PrimaryAction /> }\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n\nexport const EmptyStatePrimaryAction = ({ url, label }) => (\n  <Link to={ url }>\n    <Button variant=\"secondary\">{ label }</Button>\n  </Link>\n);\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <div className=\"toolbar-filter-input-group\">\n      <TextInput\n        placeholder={ placeholder }\n        value={ searchValue }\n        type=\"text\"\n        onChange={ onFilterChange }\n        aria-label={ placeholder }\n      />\n      <span className=\"filter-icons-container\">\n        { (isClearable && searchValue && (\n          <CloseIcon\n            className=\"clear-filter\"\n            width=\"16\"\n            height=\"16\"\n            onClick={ () => onFilterChange('') }\n          />\n        )) || <SearchIcon /> }\n      </span>\n    </div>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={ className }>\n      <Pagination\n        perPage={ limit || 50 }\n        itemCount={ count || 0 }\n        onPerPageSelect={ handleOnPerPageSelect }\n        page={ getCurrentPage(limit, offset) }\n        onSetPage={ handleSetPage }\n        direction=\"down\"\n        isCompact={ isCompact }\n        { ...props }\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    { children }\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","\nimport React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Level, LevelItem } from '@patternfly/react-core';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings  } from '../../helpers/shared/pagination';\nimport FilterToolbar from '../../presentational-components/shared/filter-toolbar-item';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport { DataListLoader } from './loader-placeholders';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse,\n  renderEmptyState\n}) => {\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (data, id) => {\n    const newData = data.map(row => row.id === id ?\n      {\n        ...row,\n        selected: !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return newData;\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse ?\n    onCollapse(id, setRows, setOpen) :\n    setRows((rows) => setOpen(rows, id));\n\n  const selectRow = (_event, selected, index, { id } = {}) => index === -1\n    ? setRows(rows.map(row => ({ ...row, selected })))\n    : setRows((rows) => setSelected(rows, id));\n\n  const renderToolbar = (isLoading) => {\n    return (<Toolbar className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg pf-u-pb-lg top-toolbar` }>\n      <Level style={ { flex: 1 } }>\n        <LevelItem>\n          <Toolbar>\n            <FilterToolbar onFilterChange={ onFilterChange } searchValue={ filterValue } isClearable={ true }\n              placeholder={ `Filter by ${titleSingular}` }/>\n            { toolbarButtons() }\n          </Toolbar>\n        </LevelItem>\n\n        <LevelItem>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <AsyncPagination\n                  apiRequest={ fetchData }\n                  isDisabled={ isLoading }\n                  meta={ pagination }\n                  isCompact\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n        </LevelItem>\n      </Level>\n    </Toolbar>);\n  };\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ `${titlePlural} table` }\n            onCollapse={ onCollapseInternal }\n            rows={ rows }\n            cells={ columns }\n            onSelect={ isSelectable && selectRow }\n            actionResolver={ actionResolver }\n            className=\"table-fix\"\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 &&\n            <BottomPaginationContainer>\n              <AsyncPagination\n                dropDirection=\"up\"\n                meta={ pagination }\n                apiRequest={ fetchData }\n              />\n            </BottomPaginationContainer>\n          }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func,\n  renderEmptyState: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  toolbarButtons: () => null,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null\n};\n"],"sourceRoot":""}