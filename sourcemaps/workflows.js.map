{"version":3,"sources":["webpack:///./src/helpers/group/group-helper.js","webpack:///./src/helpers/workflow/workflow-helper.js","webpack:///./src/redux/actions/workflow-actions.js","webpack:///./src/smart-components/workflow/add-stages/summary-content.js","webpack:///./src/smart-components/workflow/add-stages/stage-information.js","webpack:///./src/redux/actions/group-actions.js","webpack:///./src/smart-components/workflow/add-stages/set-stages.js","webpack:///./src/smart-components/workflow/add-stages/add-stages-wizard.js","webpack:///./src/smart-components/workflow/add-stages/workflow-sequence.js","webpack:///./src/smart-components/workflow/edit-workflow-info-modal.js","webpack:///./src/smart-components/workflow/edit-workflow-stages-modal.js","webpack:///./src/smart-components/workflow/remove-workflow-modal.js","webpack:///./src/smart-components/workflow/expandable-content.js","webpack:///./src/smart-components/workflow/workflow-table-helpers.js","webpack:///./src/smart-components/workflow/workflows.js","webpack:///./src/utilities/async-debounce.js","webpack:///./src/presentational-components/shared/breadcrubms.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js"],"names":["api","getRbacGroupApi","getRbacGroups","a","listGroups","fetchGroupNames","groupRefs","Promise","all","map","id","getGroup","group","name","status","workflowApi","getWorkflowApi","templateApi","getTemplateApi","fetchWorkflows","filter","pagination","defaultSettings","paginationQuery","limit","offset","filterQuery","getAxiosInstance","get","APPROVAL_API_BASE","fetchWorkflowWithGroupNames","showWorkflow","wfData","group_refs","wfWithGroups","group_names","fetchWorkflow","removeWorkflow","workflowId","destroyWorkflow","removeWorkflows","selectedWorkflows","type","ActionTypes","payload","WorkflowHelper","apiProps","addWorkflow","workflowData","workflow","listTemplates","then","data","Error","addWorkflowToTemplate","meta","notifications","fulfilled","variant","title","description","rejected","updateWorkflow","workflows","SummaryContent","formData","wfGroups","Stack","gutter","StackItem","Title","size","TextContent","Text","className","component","TextVariants","h5","Grid","GridItem","span","p","undefined","stage","idx","key","value","label","propTypes","PropTypes","object","WorkflowInfoForm","handleChange","isValid","Form","FormGroup","isRequired","fieldId","helperTextInvalid","TextInput","aria-describedby","onChange","_","event","currentTarget","TextArea","string","func","fetchRbacGroups","FETCH_RBAC_GROUPS","GroupHelper","uuid","SetStages","useState","isExpanded","setExpanded","stageValues","setStageValues","stageIndex","setStageIndex","inputValue","setInputValue","isFetching","setIsFetching","defaultOptions","useSelector","groupReducer","groups","dispatch","useDispatch","useEffect","length","onToggle","removeStage","i","parseInt","target","values","j","loadGroupOptions","filterValue","RBAC_API_BASE","createStageInput","cacheOptions","isClearable","aria-label","e","inpuValue","isexpanded","loadOptions","asyncDebounce","onInputChange","replace","style","display","Button","isInline","onClick","_stage","borderTop","AddWorkflow","push","history","addNotification","postMethod","rbacGroups","setValues","steps","options","nextButtonText","Wizard","isOpen","onClose","dismissable","onSave","defaultProps","initialValues","shape","match","arrayOf","oneOfType","number","withRouter","connect","state","bindActionCreators","WorkflowSequence","sequence","EditWorkflowInfoModal","params","editType","setFormData","isSequenceValid","isInfoValid","formValid","onCancel","Modal","width","ActionGroup","Split","SplitItem","validated","bool","workflowReducer","isRecordLoading","EditWorkflowStagesModal","result","stageOptions","isDisabled","item","RemoveWorkflowModal","goBack","ids","fetchData","setSelectedWorkflows","isSmall","actions","Bullseye","h1","defaultMessage","count","array","ExpandableContent","groupNames","setGroupNames","isLoaded","setIsLoaded","fetching","setFetching","expandedWorkflows","ref","error","fetchGroupName","includes","small","join","Skeleton","SkeletonSize","sm","createRows","reduce","acc","selected","cells","parent","columns","cellFormatters","expandable","debouncedFilter","filteringCallback","initialState","isFiltering","workflowsListState","action","Workflows","useReducer","stateDispatch","useHistory","scrollToTop","handleFilterChange","handlePagination","_apiProps","anyWorkflowsSelected","tabItems","eventKey","isSelectable","routes","exact","path","render","props","actionResolver","rowIndex","_event","_rowId","color","titlePlural","titleSingular","setCheckedItems","checkedWorkflows","wf","toolbarButtons","ToolbarGroup","ToolbarItem","to","pathname","onFilterChange","isLoading","onCollapse","setRows","setOpen","expandWorkflow","rows","renderEmptyState","Icon","SearchIcon","PrimaryAction","asyncFunction","debounceTime","onlyResolvesLast","awesomeDebouncePromise","ApprovalBreadcrumbs","breadcrumbs","Breadcrumb","Object","BreadcrumbItem","isActive","TopToolbar","children","paddingBottom","Level","node","TopToolbarTitle","LevelItem","AppTabs","location","activeTab","find","activeKey","onSelect","tabIndex","TableEmptyState","renderDescription","centered","icon","any","FilterToolbarItem","searchValue","placeholder","height","AsyncPagination","apiRequest","isCompact","Pagination","perPage","itemCount","onPerPageSelect","page","getCurrentPage","onSetPage","debounce","getNewPage","request","debouncePromise","direction","BottomPaginationContainer","TableToolbarView","row","setSelected","newData","checkedItems","page-type","Toolbar","flex","renderToolbar","Table","_index","_isOpen","index","dropDirection","requests"],"mappings":"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","file":"js/workflows.js","sourcesContent":["import { getRbacGroupApi, getAxiosInstance } from '../shared/user-login';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst api = getRbacGroupApi();\n\nexport async function getRbacGroups() {\n  return await api.listGroups();\n}\n\nexport async function fetchGroupNames(groupRefs) {\n  if (groupRefs) {\n    return Promise.all(groupRefs.map(async id => {\n      try {\n        const group = await api.getGroup(id);\n        return group.name;\n      } catch (error) {\n        if (error.status !== 404) {\n          throw error;\n        }\n        else {\n          return id;\n        }\n      }\n    }));\n  }\n}\n\nexport const fetchGroupName = (id) =>\n  getAxiosInstance().get(`${RBAC_API_BASE}/groups/${id}/`)\n  .then((data) => data.name).catch((error) => {\n    if (error.status !== 404) {\n      throw error;\n    } else {\n      return id;\n    }\n  });\n\nexport const fetchFilterGroups = (filterValue) =>\n  getAxiosInstance().get(`${RBAC_API_BASE}/groups/${filterValue.length > 0\n    ? `?name=${filterValue}`\n    : ''}`)\n  .then(({ data }) => data.map(({ uuid, name }) => ({ label: name, value: uuid })));\n\n","import { getWorkflowApi, getTemplateApi, getAxiosInstance } from '../shared/user-login';\nimport { fetchGroupNames } from '../group/group-helper';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\n\nconst workflowApi = getWorkflowApi();\nconst templateApi = getTemplateApi();\n\nexport function fetchWorkflows(filter = '', pagination = defaultSettings) {\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains_i]=${filter}`;\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows/?${filterQuery}${paginationQuery}`\n  );\n}\n\nexport async function fetchWorkflowWithGroupNames(id) {\n  const wfData = await workflowApi.showWorkflow(id);\n  const  wfWithGroups = await fetchGroupNames(wfData.group_refs);\n  return { ...wfData, group_names: wfWithGroups };\n}\n\nexport async function fetchWorkflow(id) {\n  return await workflowApi.showWorkflow(id);\n}\n\nexport function updateWorkflow(data) {\n  return workflowApi.updateWorkflow(data.id, data);\n}\n\nexport  function addWorkflow(workflow) {\n  return templateApi.listTemplates().then(({ data }) => {\n    // workaround for v1. Need to pass template ID with the workflow. Assigning to first template\n    if (!data[0]) {\n      throw new Error('No template exists');\n    }\n\n    return data[0].id;\n\n  }).then(id => workflowApi.addWorkflowToTemplate(id, workflow, {}));\n}\n\nexport async function removeWorkflow(workflowId) {\n  return await workflowApi.destroyWorkflow(workflowId);\n}\n\nexport async function removeWorkflows(selectedWorkflows) {\n  return Promise.all(selectedWorkflows.map(async workflowId => await workflowApi.destroyWorkflow(workflowId)));\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as WorkflowHelper from '../../helpers/workflow/workflow-helper';\n\nexport const fetchWorkflows = (filter, pagination) => ({\n  type: ActionTypes.FETCH_WORKFLOWS,\n  payload: WorkflowHelper.fetchWorkflows(filter, pagination)\n});\n\nexport const fetchWorkflow = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW,\n  payload: WorkflowHelper.fetchWorkflow(apiProps)\n});\n\nexport const fetchWorkflowWithGroupNames = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW_WITH_GROUP_NAMES,\n  payload: WorkflowHelper.fetchWorkflowWithGroupNames(apiProps)\n});\n\nexport const addWorkflow = (workflowData) => ({\n  type: ActionTypes.ADD_WORKFLOW,\n  payload: WorkflowHelper.addWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding approval process',\n        description: 'The approval process was added successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed adding approval process',\n        description: 'The approval process was not added successfuly.'\n      }\n    }\n  }\n});\n\nexport const updateWorkflow = (workflowData) => ({\n  type: ActionTypes.UPDATE_WORKFLOW,\n  payload: WorkflowHelper.updateWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating approval process',\n        description: 'The approval process was updated successfully.'\n      },\n      rejected: {\n        variant: 'danger',\n        title: 'Failed updating approval process',\n        description: 'The approval process was not updated successfuly.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflow = (workflow) => ({\n  type: ActionTypes.REMOVE_WORKFLOW,\n  payload: WorkflowHelper.removeWorkflow(workflow),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval process',\n        description: 'The approval process was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflows = (workflows) => ({\n  type: ActionTypes.REMOVE_WORKFLOWS,\n  payload: WorkflowHelper.removeWorkflows(workflows),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval processes',\n        description: 'The selected approval processes were removed successfully.'\n      }\n    }\n  }\n});\n\nexport const expandWorkflow = (id) => ({\n  type: ActionTypes.EXPAND_WORKFLOW,\n  payload: id\n});\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nconst SummaryContent = ({ formData }) => {\n  const { name, description, wfGroups } = formData ? formData : { name: '', description: '', wfGroups: []};\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"xl\"> Review </Title>\n        </StackItem>\n        <StackItem>\n          <Stack gutter=\"md\">\n            <StackItem>\n              <TextContent>\n                <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                    Review and confirm your inputs. If there is anything incorrect, click Back and revise.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Name</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ name }</Text>\n                </GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={ 2 }>\n                  <Text className=\"data-table-detail heading\" component={ TextVariants.h5 }>Description</Text>\n                </GridItem>\n                <GridItem span={ 10 }>\n                  <Text className=\"data-table-detail content\" component={ TextVariants.p }>{ description }</Text>\n                </GridItem>\n              </Grid>\n              { (wfGroups !== undefined) && wfGroups.map((stage, idx)  =>\n              { return (<Fragment key={ `Group-${idx}` }>\n                <Grid gutter=\"md\">\n                  <GridItem span={ 2 }>\n                    <Text key={ stage.value } className=\"data-table-detail heading\" component={ TextVariants.h5 }>\n                      { `Group ${idx + 1}` }\n                    </Text>\n                  </GridItem>\n                  <GridItem span={ 10 }>\n                    <Text key={ stage.label } className=\"data-table-detail content\" component={ TextVariants.p }>\n                      { `${wfGroups[idx].label}` }\n                    </Text>\n                  </GridItem>\n                </Grid>\n              </Fragment>); })\n              }\n            </StackItem>\n          </Stack>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSummaryContent.propTypes = {\n  formData: PropTypes.object\n};\n\nexport default SummaryContent;\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  TextArea,\n  Title\n} from '@patternfly/react-core';\n\nconst WorkflowInfoForm = ({ formData, handleChange, isValid, title = undefined }) => {\n  const { name, description } = formData;\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Approval process name\"\n              isRequired\n              fieldId=\"workflow-name\"\n              isValid={ isValid() }\n              helperTextInvalid={ 'Enter a name for the approval process' }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"workflow-name\"\n                name=\"workflow-name\"\n                aria-describedby=\"workflow-name\"\n                value={ name }\n                isValid={ isValid() }\n                onChange={ (_, event) => handleChange({ name: event.currentTarget.value }) }\n              />\n            </FormGroup>\n            <FormGroup label=\"Description\" fieldId=\"workflow-description\">\n              <TextArea\n                type=\"text\"\n                id=\"workflow-description\"\n                name=\"workflow-description\"\n                value={ description }\n                onChange={ (_, event) => handleChange({ description: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowInfoForm.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired\n};\n\nexport default WorkflowInfoForm;\n","import { FETCH_RBAC_GROUPS } from '../action-types';\nimport * as GroupHelper from '../../helpers/group/group-helper';\n\nexport const fetchRbacGroups = () => ({\n  type: FETCH_RBAC_GROUPS,\n  payload: GroupHelper.getRbacGroups().then(({ data }) => [\n    ...data.map(({ uuid, name }) => ({ value: uuid, label: name }))\n  ])\n});\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { PlusIcon, TrashIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport AsyncSelect from 'react-select/async';\nimport asyncDebounce from '../../../utilities/async-debounce';\nimport { fetchFilterGroups } from '../../../helpers/group/group-helper';\nimport { WorkflowInfoFormLoader } from '../../../presentational-components/shared/loader-placeholders';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button,\n  FormGroup,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Title\n} from '@patternfly/react-core';\nimport { fetchRbacGroups } from '../../../redux/actions/group-actions';\n\nconst SetStages = ({ formData, handleChange, title }) => {\n  const [ isExpanded, setExpanded ] = useState(false);\n  const [ stageValues, setStageValues ] = useState([]);\n  const [ stageIndex, setStageIndex ] = useState(1);\n  const [ inputValue, setInputValue ] = useState([]);\n  const [ isFetching, setIsFetching ] = useState([]);\n\n  const defaultOptions = useSelector(({ groupReducer: { groups }}) => groups || []);\n\n  const onInputChange = (newValue) => {\n    const value = newValue.replace(/\\W/g, '');\n    setInputValue(value);\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      fetchRbacGroups()).then(() => setIsFetching(false));\n  }, []);\n\n  useEffect(() => {\n    setStageValues(formData.wfGroups ? formData.wfGroups : []);\n    setStageIndex(formData.wfGroups ? formData.wfGroups.length : 1);\n  }, [ formData.wfGroups ]);\n\n  const onToggle = (isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  const onStageChange = (value, index) => {\n    const values = stageValues;\n    values[index] = value;\n    setStageValues(values);\n    handleChange({ wfGroups: values });\n  };\n\n  const addStage = () => {\n    setStageValues([ ...stageValues, undefined ]);\n    setStageIndex(stageIndex + 1);\n  };\n\n  const removeStage = (idx) => {\n    const i = parseInt(idx.target.id);\n    const values = [ ...stageValues.filter((_, j) => i !== j) ];\n    setStageValues(values);\n    setStageIndex(stageIndex - 1);\n    handleChange({ wfGroups: values });\n  };\n\n  const loadGroupOptions = (inputValue) => fetchFilterGroups(inputValue);\n\n  const createStageInput = (idx) => (\n    <StackItem key={ `Stack_${idx + 1}` }>\n      <FormGroup\n        label={ `Group ${idx + 1}` }\n        fieldId={ `${idx + 1}_stage_label` }\n      >\n        <Grid gutter=\"md\">\n          <GridItem span={ 8 }>\n            <AsyncSelect\n              cacheOptions\n              isClearable\n              label={ `${idx + 1} Group` }\n              aria-label={ `${idx + 1} Group` }\n              onToggle={ onToggle }\n              key={ `stage-${idx + 1}` }\n              onChange={ (e) => onStageChange(e, idx) }\n              value={ stageValues[idx] }\n              inpuValue={ inputValue }\n              isexpanded={ isExpanded }\n              loadOptions={ asyncDebounce(loadGroupOptions) }\n              defaultOptions={ defaultOptions }\n              onInputChange={ (e) => onInputChange(e, idx) }\n            />\n          </GridItem>\n          <GridItem span={ 1 } style={ { display: 'flex' } }>\n            { idx > 0 && <Button variant=\"link\" isInline key={ idx } id={ idx } onClick={ removeStage }>\n              <TrashIcon/> { 'Remove' }\n            </Button> }\n          </GridItem>\n        </Grid>\n      </FormGroup>\n    </StackItem>\n  );\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\">{ title || 'Set groups' }</Title>\n        </StackItem>\n        <StackItem>\n          { isFetching && <WorkflowInfoFormLoader/> }\n          { !isFetching &&\n          <Stack gutter=\"sm\">\n            { stageValues.map((_stage, idx) => createStageInput(idx)) }\n            <StackItem style={ { borderTop: 10 } }>\n              <Button id=\"add-workflow-stage\" variant=\"link\" isInline onClick={ addStage }>\n                <PlusIcon/> { `Add ${ stageValues.length > 0 ? 'another' : 'a'} group` }\n              </Button>\n            </StackItem>\n          </Stack> }\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nSetStages.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func\n};\n\nexport default SetStages;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, fetchWorkflowWithGroupNames } from '../../../redux/actions/workflow-actions';\nimport SummaryContent from './summary-content';\nimport WorkflowInfoForm from './stage-information';\nimport SetStages from './set-stages';\n\nconst AddWorkflow = ({\n  history: { push },\n  addWorkflow,\n  addNotification,\n  postMethod,\n  rbacGroups\n}) => {\n  const [ formData, setValues ] = useState({});\n\n  const handleChange = data => {\n    setValues({ ...formData,  ...data });\n  };\n\n  const isInfoValid = () =>\n    formData.name && formData.name.length > 0;\n\n  const steps = [\n    { name: 'General information', component: <WorkflowInfoForm formData={ formData }\n      handleChange={ handleChange }\n      isValid={ isInfoValid }/> },\n    { name: 'Set groups', component: <SetStages formData={ formData }\n      handleChange={ handleChange } options={ rbacGroups } /> },\n    { name: 'Review', component: <SummaryContent formData={ formData }\n      options={ rbacGroups } />, nextButtonText: 'Confirm' }\n  ];\n\n  const onSave = () => {\n    const { name, description, wfGroups } = formData;\n    const workflowData = { name, description, group_refs: wfGroups ? wfGroups.map(group => group.value) : []};\n    return addWorkflow(workflowData).then(() => postMethod()).then(() => (push('/workflows')));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: 'Creating approval process',\n      dismissable: true,\n      description: 'Creating approval process was cancelled by the user.'\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Wizard\n      title={ 'Create approval process' }\n      isOpen\n      onClose={ onCancel }\n      onSave={ onSave  }\n      steps={ steps }\n    />\n  );\n};\n\nAddWorkflow.defaultProps = {\n  rbacGroups: [],\n  initialValues: {}\n};\n\nAddWorkflow.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  addWorkflow: PropTypes.func.isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflowWithGroupNames: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    rbacGroups: state.groupReducer.groups\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  fetchWorkflowWithGroupNames\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddWorkflow));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Stack,\n  StackItem,\n  TextInput,\n  Title\n} from '@patternfly/react-core';\n\nconst WorkflowSequence = ({ formData, handleChange, isValid, title = undefined }) => {\n  const { sequence } = formData;\n\n  return (\n    <Fragment>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <Title size=\"md\"> { title || 'Enter your information' } </Title>\n        </StackItem>\n        <StackItem>\n          <Form>\n            <FormGroup\n              label=\"Enter sequence\"\n              isRequired\n              fieldId=\"workflow-sequence\"\n              isValid={ isValid() }\n              helperTextInvalid={ 'Enter a positive number' }\n            >\n              <TextInput\n                isRequired\n                type=\"number\"\n                id=\"workflow-sequence\"\n                isValid={ isValid() }\n                name=\"workflow-sequence\"\n                aria-describedby=\"workflow-name\"\n                value={ sequence }\n                onChange={ (_, event) => handleChange({ sequence: event.currentTarget.value }) }\n              />\n            </FormGroup>\n          </Form>\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nWorkflowSequence.propTypes = {\n  sequence: PropTypes.string,\n  title: PropTypes.string,\n  formData: PropTypes.object,\n  handleChange: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired\n};\n\nexport default WorkflowSequence;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport WorkflowInfoForm from './add-stages/stage-information';\nimport WorkflowSequenceForm from './add-stages/workflow-sequence';\nimport '../../App.scss';\n\nconst EditWorkflowInfoModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  workflow,\n  isFetching,\n  editType\n}) => {\n  const [ formData, setFormData ] = useState({});\n\n  const handleChange = data => setFormData({ ...formData, ...data });\n\n  useEffect(() => {\n    fetchWorkflow(id).then((data) => setFormData({ ...formData, ...data.value }));\n  }, []);\n\n  const isSequenceValid = () =>\n    formData.sequence && formData.sequence >= 0;\n\n  const isInfoValid = () =>\n    formData.name && formData.name.length > 0;\n\n  const formValid = () =>(editType === 'sequence' ?\n    isSequenceValid() : isInfoValid());\n\n  const onSave = () => {\n    if (!formValid()) {return;}\n\n    const { name, description, sequence } = formData;\n    const workflowData = { id, name, description, sequence };\n    updateWorkflow(workflowData).then(() => postMethod()).then(() => push('/workflows'));\n  };\n\n  const onCancel = () => {\n    const { title, description } =\n        editType === 'sequence' ? { title: `Edit approval process's sequence`,\n          description: `Edit approval process's sequence was cancelled by the user.` } :\n          { title: `Edit approval process's information`,\n            description: `Edit approval process's information was cancelled by the user.` };\n    addNotification({\n      variant: 'warning',\n      title,\n      dismissable: true,\n      description\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ editType === 'sequence' ? 'Edit sequence' : 'Edit information' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"edit-workflow-info-modal-info\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (editType === 'info' ?\n              <WorkflowInfoForm formData={ formData }\n                handleChange={ handleChange }\n                isValid={ isInfoValid }\n                title={ `Make any changes to approval process ${workflow.name}` }/> :\n              <WorkflowSequenceForm formData={ formData }\n                handleChange={ handleChange }\n                isValid={ isSequenceValid }\n                title={ `Set the sequence for the approval process ${workflow.name}` }/>\n            ) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button\n                  aria-label={ 'Save' }\n                  id=\"save-edit-workflow-info\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  validated={ !isFetching && formValid(formData) }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button\n                  id=\"cancel-edit-workflow-info\"\n                  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowInfoModal.defaultProps = {\n  isFetching: false,\n  editType: 'info'\n};\n\nEditWorkflowInfoModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  workflow: PropTypes.object,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  isFetching: PropTypes.bool\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { workflow, isRecordLoading }}) => ({\n  workflow,\n  isFetching: isRecordLoading\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditWorkflowInfoModal));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { ActionGroup, Button, FormGroup, Modal, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { addWorkflow, updateWorkflow, fetchWorkflowWithGroupNames } from '../../redux/actions/workflow-actions';\nimport { fetchRbacGroups } from '../../redux/actions/group-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport SetStages from './add-stages/set-stages';\nimport '../../App.scss';\n\nconst EditWorkflowStagesModal = ({\n  history: { push },\n  match: { params: { id }},\n  addNotification,\n  fetchWorkflowWithGroupNames,\n  updateWorkflow,\n  postMethod,\n  isFetching\n}) => {\n  const [ formData, setValues ] = useState({});\n\n  const handleChange = data => {\n    setValues({ ...formData, ...data });\n  };\n\n  const initialValues = (wfData) => {\n    const stageOptions = wfData.group_refs.map((group, idx) => {\n      return { label: (wfData.group_names[idx] ? wfData.group_names[idx] : group), value: group };\n    });\n    const data = { ...wfData, wfGroups: stageOptions };\n    return data;\n  };\n\n  useEffect(() => {\n    fetchWorkflowWithGroupNames(id).then((result) => setValues(initialValues(result.value)));\n  }, []);\n\n  const onSave = () => {\n    const { wfGroups } = formData;\n    const workflowData = { group_refs: wfGroups.map(group => group.value)  };\n    updateWorkflow({ id, ...workflowData }).then(() => postMethod()).then(()=>push('/workflows'));\n  };\n\n  const onCancel = () => {\n    addNotification({\n      variant: 'warning',\n      title: `Edit approval process's groups`,\n      dismissable: true,\n      description: `Edit approval process's groups was cancelled by the user.`\n    });\n    push('/workflows');\n  };\n\n  return (\n    <Modal\n      title={ `Edit approval process's groups` }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      <Stack gutter=\"md\">\n        <StackItem>\n          <FormGroup fieldId=\"workflow-stages-formgroup\">\n            { isFetching && <WorkflowInfoFormLoader/> }\n            { !isFetching && (\n              <StackItem className=\"stages-modal\">\n                <SetStages className=\"stages-modal\" formData={ formData }\n                  handleChange={ handleChange }\n                  title={ `Add or remove ${formData.name}'s groups` }/>\n              </StackItem>) }\n          </FormGroup>\n        </StackItem>\n        <StackItem>\n          <ActionGroup>\n            <Split gutter=\"md\">\n              <SplitItem>\n                <Button aria-label={ 'Save' }\n                  variant=\"primary\"\n                  type=\"submit\"\n                  isDisabled={ isFetching }\n                  onClick={ onSave }>Save</Button>\n              </SplitItem>\n              <SplitItem>\n                <Button  aria-label='Cancel'\n                  variant='secondary'\n                  type='button'\n                  onClick={ onCancel }>Cancel</Button>\n              </SplitItem>\n            </Split>\n          </ActionGroup>\n        </StackItem>\n      </Stack>\n    </Modal>\n  );\n};\n\nEditWorkflowStagesModal.defaultProps = {\n  rbacGroups: [],\n  isFetching: false\n};\n\nEditWorkflowStagesModal.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  addWorkflow: PropTypes.func.isRequired,\n  match: PropTypes.object,\n  addNotification: PropTypes.func.isRequired,\n  fetchWorkflowWithGroupNames: PropTypes.func.isRequired,\n  fetchRbacGroups: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  editType: PropTypes.string,\n  rbacGroups: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  isFetching: PropTypes.bool,\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string\n  })\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflowWithGroupNames,\n  fetchRbacGroups\n}, dispatch);\n\nconst mapStateToProps = ({ workflowReducer: { isRecordLoading }}) => ({\n  isFetching: isRecordLoading\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditWorkflowStagesModal));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal, Button, Bullseye, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { removeWorkflow, removeWorkflows } from '../../redux/actions/workflow-actions';\n\nconst RemoveWorkflowModal = ({\n  history: { goBack, push },\n  match: { params: { id: workflowId  }},\n  ids,\n  removeWorkflow,\n  removeWorkflows,\n  fetchData,\n  setSelectedWorkflows\n}) => {\n  if (!workflowId && (!ids || ids.length === 0)) {\n    return null;\n  }\n\n  const onSubmit = () => { return ((workflowId ? removeWorkflow(workflowId) : removeWorkflows(ids))\n  .then(setSelectedWorkflows([])).then(fetchData()).then(push('/workflows')));\n  };\n\n  const onCancel = () => goBack();\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      width={ '40%' }\n      title={ '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button id=\"cancel-remove-workflow\" key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button id=\"submit-remove-workflow\" key=\"submit\" variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Bullseye>\n        <TextContent>\n          <Text component={ TextVariants.h1 }>\n            <FormattedMessage\n              id=\"remove-workflow-modal\"\n              defaultMessage={ `Removing {count, number} {count, plural,\n              one {approval process}\n              other {approval processes}\n            }` }\n              values={ {\n                count: workflowId !== undefined ? 1 : ids.length\n              } }\n            />\n          </Text>\n        </TextContent>\n      </Bullseye>\n    </Modal>\n  );\n};\n\nRemoveWorkflowModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.object,\n  removeWorkflows: PropTypes.func.isRequired,\n  removeWorkflow: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  setSelectedWorkflows: PropTypes.func.isRequired,\n  workflowId: PropTypes.string,\n  ids: PropTypes.array\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  removeWorkflow,\n  removeWorkflows\n}, dispatch);\n\nexport default withRouter(connect(null, mapDispatchToProps)(RemoveWorkflowModal));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport { fetchGroupName } from '../../helpers/group/group-helper';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/Skeleton';\n\nconst ExpandableContent = ({ description, groupRefs, id }) => {\n  const [ groupNames, setGroupNames ] = useState([]);\n  const [ isLoaded, setIsLoaded ] = useState();\n  const [ fetching, setFetching ] = useState();\n\n  const expandedWorkflows = useSelector(({ workflowReducer: { expandedWorkflows }}) => expandedWorkflows);\n\n  const fetchGroupNames = () => Promise.all(groupRefs.map((ref) => fetchGroupName(ref)));\n\n  useEffect(() => {\n    if (!isLoaded && expandedWorkflows.includes(id) && !fetching) {\n      setFetching(true);\n      fetchGroupNames(groupRefs).then((data) => { setGroupNames(data); setIsLoaded(true); }).catch(() => setIsLoaded(true));\n    }\n  }, [ expandedWorkflows ]);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Description</Text>\n        <Text className=\"data-table-detail content\" component={ TextVariants.h5 }>{ description }</Text>\n      </TextContent>\n      <TextContent>\n        <Fragment>\n          <Text className=\"data-table-detail heading\" component={ TextVariants.small }>Groups</Text>\n          { isLoaded ?\n            <Text className=\"data-table-detail content\"\n              component={ TextVariants.h5 }>\n              { groupNames.join(',') }\n            </Text> :\n            <div>\n              <Skeleton size={ SkeletonSize.sm } />\n            </div> }\n        </Fragment>\n      </TextContent>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  description: PropTypes.string,\n  groupRefs: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default ExpandableContent;\n","import React from 'react';\n\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data) =>\n  data.reduce((acc,\n    {\n      id,\n      name,\n      description,\n      sequence,\n      group_refs\n    }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      selected: false,\n      cells: [ name, description, sequence ]\n    }, {\n      parent: key * 2,\n      cells: [{ title: <ExpandableContent\n        description={ description }\n        groupRefs={ group_refs }\n        id={ id }\n      /> }]\n    }\n  ]), []);\n\n","import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Link, useHistory } from 'react-router-dom';\nimport { ToolbarGroup, ToolbarItem, Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { expandable } from '@patternfly/react-table';\nimport { fetchWorkflows, expandWorkflow } from '../../redux/actions/workflow-actions';\nimport AddWorkflow from './add-stages/add-stages-wizard';\nimport EditWorkflowInfo from './edit-workflow-info-modal';\nimport EditWorkflowStages from './edit-workflow-stages-modal';\nimport RemoveWorkflow from './remove-workflow-modal';\nimport { createRows } from './workflow-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport AppTabs from '../../smart-components/app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\n\nconst columns = [{\n  title: 'Name',\n  cellFormatters: [ expandable ]\n},\n'Description',\n'Sequence'\n];\n\nconst debouncedFilter = asyncDebounce(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchWorkflows(filter, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst workflowsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Workflows = () => {\n  const [ selectedWorkflows, setSelectedWorkflows ] = useState([]);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch ] = useReducer(\n    workflowsListState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ workflowReducer: { workflows }}) => workflows\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchWorkflows(filterValue, defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const tabItems = [{ eventKey: 0, title: 'Request queue', name: '/requests' },\n    { eventKey: 1, title: 'Approval processes', name: '/workflows' }];\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    dispatch(fetchWorkflows(filterValue, pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path=\"/workflows/add-workflow\" render={ props => <AddWorkflow { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-info/:id\" render={ props => <EditWorkflowInfo editType='info' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-stages/:id\" render={ props => <EditWorkflowStages editType='stages' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/edit-sequence/:id\" render={ props => <EditWorkflowInfo editType='sequence' { ...props }\n      postMethod={ handlePagination } /> }/>\n    <Route exact path=\"/workflows/remove/:id\"\n      render={ props => <RemoveWorkflow { ...props }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows } /> }/>\n    <Route exact path=\"/workflows/remove\"\n      render={ props => <RemoveWorkflow { ...props }\n        ids={ selectedWorkflows }\n        fetchData={ handlePagination }\n        setSelectedWorkflows={ setSelectedWorkflows } /> }/>\n  </Fragment>;\n\n  const actionResolver = (workflowData, { rowIndex }) => rowIndex % 2 === 1 ?\n    null\n    : [\n      {\n        title: 'Edit info',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-info/${workflow.id}`)\n      },\n      {\n        title: 'Edit groups',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-stages/${workflow.id}`)\n      },\n      {\n        title: 'Edit sequence',\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/edit-sequence/${workflow.id}`)\n      },\n      {\n        title: 'Delete',\n        style: { color: 'var(--pf-global--danger-color--100)'\t},\n        onClick: (_event, _rowId, workflow) =>\n          history.push(`/workflows/remove/${workflow.id}`)\n      }\n    ];\n\n  const setCheckedItems = (checkedWorkflows) =>\n    setSelectedWorkflows(checkedWorkflows.map(wf => wf.id));\n\n  const anyWorkflowsSelected = selectedWorkflows.length > 0;\n\n  const toolbarButtons = () => <ToolbarGroup className={ `pf-u-pl-lg top-toolbar` }>\n    <ToolbarItem>\n      <Link id=\"add-workflow-link\" to=\"/workflows/add-workflow\">\n        <Button\n          variant=\"primary\"\n          aria-label=\"Create approval process\"\n        >\n          Create approval process\n        </Button>\n      </Link>\n    </ToolbarItem>\n    <ToolbarItem>\n      <Link id=\"remove-multiple-workflows\" className={ anyWorkflowsSelected ? '' : 'disabled-link' } to={ { pathname: '/workflows/remove' } }>\n        <Button\n          variant=\"link\"\n          isDisabled={ !anyWorkflowsSelected }\n          style={ { color: anyWorkflowsSelected ? 'var(--pf-global--danger-color--100)' : 'var(--pf-global--disabled-color--100)'\t} }\n          aria-label=\"Delete approval process\"\n        >\n          Delete\n        </Button>\n      </Link>\n    </ToolbarItem>\n  </ToolbarGroup>;\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandWorkflow(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        <AppTabs tabItems={ tabItems }/>\n      </TopToolbar>\n      <TableToolbarView\n        data={ data }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ handlePagination }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"approval processes\"\n        titleSingular=\"approval process\"\n        pagination={ meta }\n        setCheckedItems={ setCheckedItems }\n        toolbarButtons={ toolbarButtons }\n        filterValue={ filterValue }\n        onFilterChange={ handleFilterChange }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n        renderEmptyState={ () => (\n          <TableEmptyState\n            title={ filterValue === '' ? 'No approval processes' : 'No results found' }\n            Icon={ SearchIcon }\n            PrimaryAction={ () =>\n              filterValue !== '' ? (\n                <Button onClick={ () => handleFilterChange('') } variant=\"link\">\n                  Clear all filters\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? 'No approval processes.'\n                : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n            }\n          />\n        ) }\n      />\n    </Fragment>\n  );\n};\n\nWorkflows.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  workflows: PropTypes.array,\n  isLoading: PropTypes.bool,\n  selectedWorkflows: PropTypes.array\n};\n\nWorkflows.defaultProps = {\n  workflows: [],\n  rbacGroups: {},\n  isLoading: false\n};\n\nexport default Workflows;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nconst ApprovalBreadcrumbs = ({ breadcrumbs }) => breadcrumbs\n  ? (\n    <Breadcrumb>\n      { Object.values(breadcrumbs).map(item => (\n        <BreadcrumbItem key={ item.title } isActive={ item.isActive }>\n          { (item.to && <NavLink exact to={ item.to }>{ item.title }</NavLink>) || item.title }\n        </BreadcrumbItem>\n      )) }\n    </Breadcrumb>\n  ) : null;\n\nApprovalBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    isActive: PropTypes.bool,\n    to: PropTypes.string\n  }))\n};\n\nexport default ApprovalBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem, Text, TextContent, TextVariants  } from '@patternfly/react-core';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport ApprovalBreadcrumbs from './breadcrubms';\n\nimport './top-toolbar.scss';\n\nexport const TopToolbar = ({ children,  breadcrumbs, paddingBottom }) => (\n  <div className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${paddingBottom ? 'pf-u-pb-sm' : ''} top-toolbar` }>\n    { breadcrumbs && (<Level className=\"pf-u-mb-md\">\n      <ApprovalBreadcrumbs breadcrumbs={ breadcrumbs } />\n    </Level>)\n    }\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  breadcrumbs: PropTypes.array,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: false\n};\n\nexport const TopToolbarTitle = ({ title, description, children }) => (\n  <Fragment>\n    <Level>\n      <LevelItem>\n        <TextContent className=\"pf-u-mb-sm\">\n          { <Text component={ TextVariants.h1 }>{ title || <ToolbarTitlePlaceholder /> }</Text> }\n        </TextContent>\n        { description &&\n              <TextContent className=\"pf-u-pt-sm pf-u-mb-md\">\n                <Text component={ TextVariants.p }>{ description }</Text>\n              </TextContent> }\n      </LevelItem>\n      { children }\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\n\nconst AppTabs = ({ history: { push }, location: { pathname }, tabItems }) => {\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) => push(tabItems[tabIndex].name);\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ item.title } key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default withRouter(AppTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\nimport { Link }  from 'react-router-dom';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered\n    aria-label=\"No records\"\n  >\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={ Icon } />\n      <TextContent>\n        <Text component={ TextVariants.h1 }>{ title }</Text>\n      </TextContent>\n      <EmptyStateBody>\n        { description }\n        { renderDescription() }\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        { PrimaryAction && <PrimaryAction /> }\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n\nexport const EmptyStatePrimaryAction = ({ url, label }) => (\n  <Link to={ url }>\n    <Button variant=\"secondary\">{ label }</Button>\n  </Link>\n);\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <div className=\"toolbar-filter-input-group\">\n      <TextInput\n        placeholder={ placeholder }\n        value={ searchValue }\n        type=\"text\"\n        onChange={ onFilterChange }\n        aria-label={ placeholder }\n      />\n      <span className=\"filter-icons-container\">\n        { (isClearable && searchValue && (\n          <CloseIcon\n            className=\"clear-filter\"\n            width=\"16\"\n            height=\"16\"\n            onClick={ () => onFilterChange('') }\n          />\n        )) || <SearchIcon /> }\n      </span>\n    </div>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={ className }>\n      <Pagination\n        perPage={ limit || 50 }\n        itemCount={ count || 0 }\n        onPerPageSelect={ handleOnPerPageSelect }\n        page={ getCurrentPage(limit, offset) }\n        onSetPage={ handleSetPage }\n        direction=\"down\"\n        isCompact={ isCompact }\n        { ...props }\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    { children }\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","\nimport React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Level, LevelItem } from '@patternfly/react-core';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings  } from '../../helpers/shared/pagination';\nimport FilterToolbar from '../../presentational-components/shared/filter-toolbar-item';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport { DataListLoader } from './loader-placeholders';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  isSelectable,\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  setCheckedItems,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  onCollapse,\n  renderEmptyState\n}) => {\n  const [ rows, setRows ] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [ data ]);\n\n  const setOpen = (data, id) => data.map(row => row.id === id ?\n    {\n      ...row,\n      isOpen: !row.isOpen\n    } : {\n      ...row\n    });\n\n  const setSelected = (data, id) => {\n    const newData = data.map(row => row.id === id ?\n      {\n        ...row,\n        selected: !row.selected\n      } : {\n        ...row\n      });\n\n    const checkedItems = newData.filter(item => (item.id && item.selected));\n    setCheckedItems(checkedItems);\n    return newData;\n  };\n\n  const onCollapseInternal = (_event, _index, _isOpen, { id }) => onCollapse ?\n    onCollapse(id, setRows, setOpen) :\n    setRows((rows) => setOpen(rows, id));\n\n  const selectRow = (_event, selected, index, { id } = {}) => index === -1\n    ? setRows(rows.map(row => ({ ...row, selected })))\n    : setRows((rows) => setSelected(rows, id));\n\n  const renderToolbar = (isLoading) => {\n    return (<Toolbar className={ `pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg pf-u-pb-lg top-toolbar` }>\n      <Level style={ { flex: 1 } }>\n        <LevelItem>\n          <Toolbar>\n            <FilterToolbar onFilterChange={ onFilterChange } searchValue={ filterValue } isClearable={ true }\n              placeholder={ `Filter by ${titleSingular}` }/>\n            { toolbarButtons() }\n          </Toolbar>\n        </LevelItem>\n\n        <LevelItem>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <AsyncPagination\n                  apiRequest={ fetchData }\n                  isDisabled={ isLoading }\n                  meta={ pagination }\n                  isCompact\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n        </LevelItem>\n      </Level>\n    </Toolbar>);\n  };\n\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ `${titlePlural} table` }\n            onCollapse={ onCollapseInternal }\n            rows={ rows }\n            cells={ columns }\n            onSelect={ isSelectable && selectRow }\n            actionResolver={ actionResolver }\n            className=\"table-fix\"\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 &&\n            <BottomPaginationContainer>\n              <AsyncPagination\n                dropDirection=\"up\"\n                meta={ pagination }\n                apiRequest={ fetchData }\n              />\n            </BottomPaginationContainer>\n          }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  isSelectable: propTypes.bool,\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  setCheckedItems: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  onCollapse: propTypes.func,\n  renderEmptyState: propTypes.func\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  toolbarButtons: () => null,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null\n};\n"],"sourceRoot":""}