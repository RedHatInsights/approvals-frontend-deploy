{"version":3,"file":"js/864.js","mappings":"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","sources":["webpack:///./src/messages/table-toolbar.messages.js","webpack:///./src/presentational-components/shared/no-rows-state.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/smart-components/app-tabs/app-tabs.js","webpack:///./src/utilities/async-debounce.js"],"sourcesContent":["const { defineMessages } = require('react-intl');\n\nconst tableToolbarMessages = defineMessages({\n  name: {\n    id: 'tableToolbar.name',\n    defaultMessage: 'Name'\n  },\n  filterByTitle: {\n    id: 'tableToolbar.filterByTitle',\n    defaultMessage: 'Filter by {title}'\n  },\n  noResultsFound: {\n    id: 'tableToolbar.noResultsFound',\n    defaultMessage: 'No results found'\n  },\n  noResult: {\n    id: 'tableToolbar.noResult',\n    defaultMessage: 'No {results}'\n  },\n  clearAllFilters: {\n    id: 'tableToolbar.clearAllFilters',\n    defaultMessage: 'Clear all filters'\n  },\n  clearAllFiltersDescription: {\n    id: 'tableToolbar.clearAllFiltersDescription',\n    defaultMessage: 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  ariaLabel: {\n    id: 'tableToolbar.ariaLabel',\n    defaultMessage: '{title} table'\n  }\n});\n\nexport default tableToolbarMessages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\n\nconst NoRowsState = ({ title,\n  icon,\n  description,\n  PrimaryAction,\n  renderDescription }) =>\n  (<EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n    <EmptyStateIcon icon={ icon } />\n    <TextContent>\n      <Text component={ TextVariants.h1 }>{ title }</Text>\n    </TextContent>\n    <EmptyStateBody>\n      { description }\n      { renderDescription && renderDescription() }\n    </EmptyStateBody>\n    <EmptyStateSecondaryActions>\n      { PrimaryAction && <PrimaryAction /> }\n    </EmptyStateSecondaryActions>\n  </EmptyState>\n  );\n\nNoRowsState.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.any.isRequired,\n  isSearch: PropTypes.bool,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default NoRowsState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport NoRowsState from './no-rows-state';\n\nconst TableEmptyState = ({\n  title,\n  icon,\n  isSearch,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => {\n  return isSearch ? <EmptyTable centered aria-label={ 'No records' }>\n    <NoRowsState title={ title }\n      icon={ icon }\n      description={ description }\n      PrimaryAction={ PrimaryAction }\n      renderDescription={ renderDescription } />\n  </EmptyTable> : <NoRowsState title={ title }\n    icon={ icon }\n    description={ description }\n    PrimaryAction={ PrimaryAction }\n    renderDescription={ renderDescription } />;\n};\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.any.isRequired,\n  isSearch: PropTypes.bool,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n","\nimport React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { defaultSettings, getCurrentPage, getNewPage  } from '../../helpers/shared/pagination';\nimport { DataListLoader } from './loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\n\nimport tableToolbarMessages from '../../messages/table-toolbar.messages';\n\n/**\n * Need to optimize this component\n * There is 7 renders before first table render\n * Should be just 2 - Loader -> Table\n */\n\nexport const TableToolbarView = ({\n  columns,\n  fetchData,\n  toolbarButtons,\n  actionResolver,\n  routes,\n  titlePlural,\n  titleSingular,\n  pagination,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  renderEmptyState,\n  sortBy,\n  onSort,\n  activeFiltersConfig,\n  filterConfig,\n  rows,\n  ouiaId\n}) => {\n  const intl = useIntl();\n\n  const paginationConfig = {\n    itemCount: pagination.count,\n    page: getCurrentPage(pagination.limit, pagination.offset),\n    perPage: pagination.limit,\n    onSetPage: (_e, page) => fetchData({ ...pagination, offset: getNewPage(page, pagination.limit) }),\n    onPerPageSelect: (_e, size) => fetchData({ ...pagination, limit: size }),\n    isDisabled: isLoading\n  };\n\n  const renderToolbar = () => (\n    <PrimaryToolbar\n      className=\"pf-u-p-lg ins__approval__primary_toolbar\"\n      pagination={ paginationConfig }\n      { ...(toolbarButtons && { actionsConfig: {\n        dropdownProps: {\n          position: 'right'\n        },\n        actions: [ toolbarButtons() ]}\n      }) }\n      filterConfig={ {\n        items: [{\n          label: intl.formatMessage(tableToolbarMessages.name),\n          filterValues: {\n            id: 'filter-by-name',\n            placeholder: intl.formatMessage(tableToolbarMessages.filterByTitle, { title: titleSingular }),\n            'aria-label': intl.formatMessage(tableToolbarMessages.filterByTitle, { title: titleSingular }),\n            onChange: (_event, value) => onFilterChange(value),\n            value: filterValue\n          }\n        },\n        ...filterConfig\n        ]\n      } }\n      activeFiltersConfig={ activeFiltersConfig }\n    />\n  );\n  return (\n    <Section type=\"content\" page-type={ `tab-${titlePlural}` } id={ `tab-${titlePlural}` }>\n      { routes() }\n      { (rows.length !== 0 || activeFiltersConfig?.filters?.length > 0) && renderToolbar(isLoading) }\n      { isLoading && <DataListLoader/> }\n      { !isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) :\n        <Fragment>\n          { !isLoading &&\n          <Table\n            aria-label={ intl.formatMessage(tableToolbarMessages.ariaLabel, { title: titlePlural }) }\n            rows={ rows }\n            cells={ columns }\n            actionResolver={ actionResolver }\n            className=\"pf-u-pt-0 vertical-align-inherit\"\n            sortBy={ sortBy }\n            onSort={ onSort }\n            ouiaId={ ouiaId }\n          >\n            <TableHeader />\n            <TableBody/>\n          </Table> }\n          { pagination.count > 0 && (\n            <PrimaryToolbar\n              className=\"pf-u-pl-lg pf-u-pr-lg ins__approval__primary_toolbar\"\n              pagination={ {\n                ...paginationConfig,\n                dropDirection: 'up',\n                variant: 'bottom',\n                isCompact: false,\n                className: 'pf-u-pr-0'\n              } }\n            />\n          ) }\n        </Fragment>\n      }\n    </Section>);\n};\n\nTableToolbarView.propTypes = {\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  titlePlural: propTypes.string,\n  titleSingular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  renderEmptyState: propTypes.func,\n  sortBy: propTypes.object,\n  onSort: propTypes.func,\n  activeFiltersConfig: propTypes.object,\n  filterConfig: propTypes.array,\n  rows: propTypes.array,\n  ouiaId: propTypes.string\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  routes: () => null,\n  renderEmptyState: () => null,\n  filterConfig: []\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Tabs, Tab, TabTitleText } from '@patternfly/react-core';\n\nimport apsTabsMessages from '../../messages/app-tabs.messages';\nimport { useIntl } from 'react-intl';\n\nconst approvalTabItems = [\n  { eventKey: 0, message: apsTabsMessages.myRequests, name: '/requests' },\n  { eventKey: 1, message: apsTabsMessages.allRequests, name: '/allrequests' },\n  { eventKey: 2, message: apsTabsMessages.approvalProccess, name: '/workflows' }\n];\n\nexport const AppTabs = ({ tabItems = approvalTabItems }) => {\n  const intl = useIntl();\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    history.push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs className=\"pf-u-mt-sm\" activeKey={ activeTab ? activeTab.eventKey : 0 } onSelect={ handleTabClick }>\n      { tabItems.map((item) => <Tab title={ <TabTitleText>{ intl.formatMessage(item.message) }</TabTitleText> }\n        key={ item.eventKey } eventKey={ item.eventKey } name={ item.name }/>) }\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array\n};\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n"],"names":["defineMessages","require","name","id","defaultMessage","filterByTitle","noResultsFound","noResult","clearAllFilters","clearAllFiltersDescription","ariaLabel","NoRowsState","title","icon","description","PrimaryAction","renderDescription","EmptyState","className","EmptyStateIcon","TextContent","Text","component","TextVariants","EmptyStateBody","EmptyStateSecondaryActions","propTypes","PropTypes","isSearch","TableEmptyState","EmptyTable","centered","TableToolbarView","columns","fetchData","toolbarButtons","actionResolver","routes","titlePlural","titleSingular","pagination","filterValue","onFilterChange","isLoading","renderEmptyState","sortBy","onSort","activeFiltersConfig","filterConfig","rows","ouiaId","intl","useIntl","paginationConfig","itemCount","count","page","getCurrentPage","limit","offset","perPage","onSetPage","_e","getNewPage","onPerPageSelect","size","isDisabled","type","length","filters","actionsConfig","dropdownProps","position","actions","items","label","formatMessage","tableToolbarMessages","filterValues","placeholder","onChange","_event","value","Fragment","Table","cells","TableHeader","TableBody","dropDirection","variant","isCompact","defaultProps","requests","defaultSettings","approvalTabItems","eventKey","message","apsTabsMessages","AppTabs","tabItems","history","useHistory","useLocation","pathname","search","activeTab","find","includes","activeKey","onSelect","tabIndex","push","map","item","T","key","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise"],"sourceRoot":""}