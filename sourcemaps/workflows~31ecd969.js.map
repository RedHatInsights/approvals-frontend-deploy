{"version":3,"sources":["webpack:///./src/helpers/workflow/workflow-helper.js","webpack:///./src/redux/actions/workflow-actions.js","webpack:///./node_modules/react-intl/lib/components/message.js","webpack:///./src/forms/name-async-validator.js","webpack:///./src/forms/workflow-info.schema.js","webpack:///./src/forms/load-groups-debounced.js","webpack:///./src/helpers/group/group-helper.js","webpack:///./src/forms/set-group-select.schema.js","webpack:///./src/forms/add-workflow.schema.js","webpack:///./src/smart-components/workflow/add-groups/add-workflow-wizard.js","webpack:///./src/utilities/use-workflows.js","webpack:///./src/smart-components/workflow/edit-workflow-info-modal.js","webpack:///./src/smart-components/workflow/edit-workflow-groups-modal.js","webpack:///./src/smart-components/workflow/remove-workflow-modal.js","webpack:///./src/smart-components/workflow/expandable-content.js","webpack:///./src/smart-components/workflow/workflow-table-helpers.js","webpack:///./src/smart-components/workflow/workflows.js"],"names":["workflowApi","getWorkflowApi","templateApi","getTemplateApi","fetchWorkflows","filter","pagination","defaultSettings","sortBy","paginationQuery","Math","max","limit","offset","filterQuery","sortQuery","property","direction","getAxiosInstance","get","APPROVAL_API_BASE","fetchWorkflow","id","a","showWorkflow","removeWorkflow","workflowId","destroyWorkflow","removeWorkflows","selectedWorkflows","Promise","all","map","extendStatics","dispatch","getState","workflowReducer","workflows","filterValue","finalPagination","meta","type","ActionTypes","payload","WorkflowHelper","apiProps","addWorkflow","workflowData","workflow","listTemplates","then","data","Error","addWorkflowToTemplate","notifications","fulfilled","variant","title","description","updateWorkflow","setFilterValueWorkflows","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArrays","il","r","k","j","jl","shallowEquals","defaultFormatMessage","descriptor","values","locale","_super","FormattedMessage","shouldComponentUpdate","nextProps","_a","props","otherProps","nextValues","nextOtherProps","render","_this","Consumer","intl","defaultMessage","_b","formatMessage","_c","textComponent","Text","_d","children","_e","tagName","Component","nodes","isArray","displayName","defaultProps","asyncDebounce","name","fetchWorkflowByName","find","wf","workflowInfoSchema","component","componentTypes","TEXT_FIELD","isRequired","label","validate","value","debouncedValidatorName","validatorTypes","REQUIRED","message","TEXTAREA","RBAC_API_BASE","uuid","undefined","setGroupSelectSchema","SELECT","loadOptions","noValueUpdates","isMulti","isSearchable","simpleValue","menuIsPortal","isClearable","placeholder","addWorkflowSchema","fields","WIZARD","inModal","showTitle","customTitle","Title","size","nextStep","AddWorkflow","useDispatch","push","useHistory","useIntl","showFormControls","onSubmit","wfGroups","routes","index","group_refs","group","onCancel","schema","useWorkflow","useSelector","shallowEqual","createSchema","editType","SUB_FORM","className","reducer","state","initialValues","isLoading","EditWorkflowInfoModal","postMethod","useReducer","useQuery","loadedWorkflow","useEffect","Modal","width","isOpen","onClose","FormTemplate","submitLabel","buttonClassName","disableSubmit","sequence","propTypes","PropTypes","func","string","connect","bindActionCreators","prepareInitialValues","wfData","groupOptions","EditWorkflowGroupsModal","result","RemoveWorkflowModal","ids","fetchData","setSelectedWorkflows","useState","submitting","setSubmitting","isSmall","actions","Button","key","onClick","isDisabled","Fragment","Spinner","Split","gutter","SplitItem","fill","TextContent","TextVariants","count","array","ExpandableContent","groupRefs","small","ref","listGroupNames","join","createRows","reduce","acc","selected","cells","parent","columns","cellFormatters","expandable","transforms","sortable","debouncedFilter","filteringCallback","prepareChips","category","chips","workflowsListState","action","isFetching","isFiltering","Workflows","filterValueRedux","initialState","stateDispatch","history","updateWorkflows","scrollToTop","handleFilterChange","anyWorkflowsSelected","onSort","sortWorkflows","isSelectable","exact","path","routesLinks","add","editInfo","editGroups","editSequence","remove","actionResolver","_workflowData","rowIndex","_event","_rowId","pathname","search","titlePlural","titleSingular","setCheckedItems","checkedWorkflows","toolbarButtons","ToolbarGroup","ToolbarItem","to","aria-label","style","color","onFilterChange","onCollapse","setRows","setOpen","expandWorkflow","rows","renderEmptyState","Icon","SearchIcon","PrimaryAction","activeFiltersConfig","filters","onDelete"],"mappings":"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","file":"js/workflows~31ecd969.f40360301072855a0b88.js","sourcesContent":["import { getWorkflowApi, getTemplateApi, getAxiosInstance } from '../shared/user-login';\nimport { defaultSettings } from '../shared/pagination';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\n\nconst workflowApi = getWorkflowApi();\nconst templateApi = getTemplateApi();\n\nexport function fetchWorkflows(filter = '', pagination = defaultSettings, sortBy) {\n  const paginationQuery = `&limit=${Math.max(pagination.limit, 10)}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains_i]=${filter}`;\n  const sortQuery = sortBy ? `&sort_by=${sortBy.property}:${sortBy.direction}` : '';\n\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows/?${filterQuery}${paginationQuery}${sortQuery}`\n  );\n}\n\nexport async function fetchWorkflow(id) {\n  return await workflowApi.showWorkflow(id);\n}\n\nexport function fetchWorkflowByName(name) {\n  return fetchWorkflows(name);\n}\n\nexport function updateWorkflow(data) {\n  return workflowApi.updateWorkflow(data.id, data);\n}\n\nexport  function addWorkflow(workflow) {\n  return templateApi.listTemplates().then(({ data }) => {\n    // workaround for v1. Need to pass template ID with the workflow. Assigning to first template\n    if (!data[0]) {\n      throw new Error('No template exists');\n    }\n\n    return data[0].id;\n\n  }).then(id => workflowApi.addWorkflowToTemplate(id, workflow, {}));\n}\n\nexport async function removeWorkflow(workflowId) {\n  return await workflowApi.destroyWorkflow(workflowId);\n}\n\nexport async function removeWorkflows(selectedWorkflows) {\n  return Promise.all(selectedWorkflows.map(async workflowId => await workflowApi.destroyWorkflow(workflowId)));\n}\n\n","import * as ActionTypes from '../action-types';\nimport * as WorkflowHelper from '../../helpers/workflow/workflow-helper';\n\nexport const fetchWorkflows = (pagination) => (dispatch, getState) => {\n  const { sortBy, workflows, filterValue } = getState().workflowReducer;\n\n  let finalPagination = pagination;\n\n  if (!pagination && workflows) {\n    const { limit, offset } = workflows.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch ({\n    type: ActionTypes.FETCH_WORKFLOWS,\n    payload: WorkflowHelper.fetchWorkflows(filterValue, finalPagination, sortBy)\n  });\n};\n\nexport const fetchWorkflow = apiProps => ({\n  type: ActionTypes.FETCH_WORKFLOW,\n  payload: WorkflowHelper.fetchWorkflow(apiProps)\n});\n\nexport const addWorkflow = (workflowData) => ({\n  type: ActionTypes.ADD_WORKFLOW,\n  payload: WorkflowHelper.addWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding approval process',\n        description: 'The approval process was added successfully.'\n      }\n    }\n  }\n});\n\nexport const updateWorkflow = (workflowData) => ({\n  type: ActionTypes.UPDATE_WORKFLOW,\n  payload: WorkflowHelper.updateWorkflow(workflowData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success updating approval process',\n        description: 'The approval process was updated successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflow = (workflow) => ({\n  type: ActionTypes.REMOVE_WORKFLOW,\n  payload: WorkflowHelper.removeWorkflow(workflow),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval process',\n        description: 'The approval process was removed successfully.'\n      }\n    }\n  }\n});\n\nexport const removeWorkflows = (workflows) => ({\n  type: ActionTypes.REMOVE_WORKFLOWS,\n  payload: WorkflowHelper.removeWorkflows(workflows),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success removing approval processes',\n        description: 'The selected approval processes were removed successfully.'\n      }\n    }\n  }\n});\n\nexport const expandWorkflow = (id) => ({\n  type: ActionTypes.EXPAND_WORKFLOW,\n  payload: id\n});\n\nexport const sortWorkflows = (sortBy) => ({\n  type: ActionTypes.SORT_WORKFLOWS,\n  payload: sortBy\n});\n\nexport const setFilterValueWorkflows = (filterValue) => ({\n  type: ActionTypes.SET_FILTER_WORKFLOWS,\n  payload: filterValue\n});\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { formatMessage } from '../formatters/message';\nimport { invariantIntlContext, DEFAULT_INTL_CONFIG, createFormatters, } from '../utils';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction defaultFormatMessage(descriptor, values) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error('[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry. Using default message as fallback.');\n    }\n    return formatMessage(__assign(__assign({}, DEFAULT_INTL_CONFIG), { locale: 'en' }), createFormatters(), descriptor, values);\n}\nvar FormattedMessage = /** @class */ (function (_super) {\n    __extends(FormattedMessage, _super);\n    function FormattedMessage() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormattedMessage.prototype.shouldComponentUpdate = function (nextProps) {\n        var _a = this.props, values = _a.values, otherProps = __rest(_a, [\"values\"]);\n        var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    };\n    FormattedMessage.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Context.Consumer, null, function (intl) {\n            if (!_this.props.defaultMessage) {\n                invariantIntlContext(intl);\n            }\n            var _a = intl || {}, _b = _a.formatMessage, formatMessage = _b === void 0 ? defaultFormatMessage : _b, _c = _a.textComponent, Text = _c === void 0 ? React.Fragment : _c;\n            var _d = _this.props, id = _d.id, description = _d.description, defaultMessage = _d.defaultMessage, values = _d.values, children = _d.children, _e = _d.tagName, Component = _e === void 0 ? Text : _e;\n            var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n            var nodes = formatMessage(descriptor, values);\n            if (!Array.isArray(nodes)) {\n                nodes = [nodes];\n            }\n            if (typeof children === 'function') {\n                return children.apply(void 0, nodes);\n            }\n            if (Component) {\n                // Needs to use `createElement()` instead of JSX, otherwise React will\n                // warn about a missing `key` prop with rich-text message formatting.\n                return React.createElement.apply(React, __spreadArrays([Component, null], nodes));\n            }\n            return nodes;\n        }));\n    };\n    FormattedMessage.displayName = 'FormattedMessage';\n    FormattedMessage.defaultProps = {\n        values: {},\n    };\n    return FormattedMessage;\n}(React.Component));\nexport default FormattedMessage;\n//# sourceMappingURL=message.js.map","import { fetchWorkflowByName } from '../helpers/workflow/workflow-helper';\nimport asyncDebounce from '../utilities/async-debounce';\n\nconst validateName = (name, id) => fetchWorkflowByName(name)\n.then(({ data }) => {\n  const workflow = id ?\n    data.find(wf => name === wf.name && id !== wf.id)\n    : data.find(wf => name === wf.name);\n\n  if (workflow) {\n    throw 'Name has already been taken';\n  }\n});\n\nexport default asyncDebounce(validateName);\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport debouncedValidatorName from './name-async-validator';\n\nconst workflowInfoSchema = (id) => ([{\n  component: componentTypes.TEXT_FIELD,\n  name: 'name',\n  isRequired: true,\n  id: 'workflow-name',\n  label: <FormattedMessage\n    id=\"create-approval-process-name-label\"\n    defaultMessage=\"Approval process name\"\n  />,\n  validate: [\n    (value) => debouncedValidatorName(value, id),\n    {\n      type: validatorTypes.REQUIRED,\n      message: <FormattedMessage\n        id=\"approval-procces-name-warning\"\n        defaultMessage=\"Enter a name for the approval process\"\n      />\n    }]\n}, {\n  component: componentTypes.TEXTAREA,\n  name: 'description',\n  id: 'workflow-description',\n  label: <FormattedMessage\n    id=\"create-approval-process-description-label\"\n    defaultMessage=\"Description\"\n  />\n}]);\n\nexport default workflowInfoSchema;\n","import asyncDebounce from '../utilities/async-debounce';\nimport { fetchFilterApprovalGroups } from '../helpers/group/group-helper';\n\nexport default asyncDebounce(fetchFilterApprovalGroups);\n","import { getAxiosInstance } from '../shared/user-login';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nexport const fetchFilterApprovalGroups = (filterValue) => {\n  const filterQuery = `&name=${filterValue}`;\n  return getAxiosInstance().get(`${RBAC_API_BASE}/groups/?role_names=\",Approval Administrator,Approval Approver,\"\n  ${filterValue && filterValue.length > 0\n    ? filterQuery : ''}`)\n  .then(({ data }) => (data && data.length > 0 ? data.map(({ uuid, name }) => ({ label: name, value: uuid })) : undefined));\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport loadOptions from './load-groups-debounced';\n\nconst setGroupSelectSchema = (intl) => ({\n  component: componentTypes.SELECT,\n  name: 'wfGroups',\n  label: <FormattedMessage\n    id=\"create-approval-process-set-groups\"\n    defaultMessage=\"Set groups\"\n  />,\n  loadOptions,\n  noValueUpdates: true,\n  isMulti: true,\n  isSearchable: true,\n  simpleValue: false,\n  menuIsPortal: true,\n  isClearable: true,\n  placeholder: intl.formatMessage({\n    id: 'create-approval-process-set-groups-placeholder',\n    defaultMessage: 'Select...'\n  })\n});\n\nexport default setGroupSelectSchema;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Title } from '@patternfly/react-core';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\n\nimport workflowInfoSchema from './workflow-info.schema';\nimport setGroupSelectSchema from './set-group-select.schema';\n\nconst addWorkflowSchema = (intl) => ({\n  fields: [{\n    name: 'wizard',\n    title: intl.formatMessage({\n      id: 'create-approval-process-title',\n      defaultMessage: 'Create approval process'\n    }),\n    component: componentTypes.WIZARD,\n    inModal: true,\n    fields: [{\n      name: 'general-information',\n      showTitle: true,\n      customTitle: <Title size=\"md\"> { <FormattedMessage id=\"enter-info\" defaultMessage=\"Enter your information\" /> } </Title>,\n      title: intl.formatMessage({\n        id: 'create-approval-process-gen-info',\n        defaultMessage: 'General information'\n      }),\n      nextStep: 'set-groups',\n      fields: workflowInfoSchema()\n    }, {\n      name: 'set-groups',\n      nextStep: 'review',\n      title: intl.formatMessage({\n        id: 'create-approval-process-set-groups',\n        defaultMessage: 'Set groups'\n      }),\n      fields: [ setGroupSelectSchema(intl) ]\n    }, {\n      name: 'review',\n      title: intl.formatMessage({\n        id: 'create-approval-process-review',\n        defaultMessage: 'Review'\n      }),\n      fields: [{\n        name: 'summary',\n        component: 'summary'\n      }]\n    }]\n  }]\n});\n\nexport default addWorkflowSchema;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addWorkflow, fetchWorkflows } from '../../../redux/actions/workflow-actions';\nimport routes from '../../../constants/routes';\nimport FormRenderer from '../../common/form-renderer';\nimport addWorkflowSchema from '../../../forms/add-workflow.schema';\n\nconst AddWorkflow = () => {\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const intl = useIntl();\n\n  const onSave = ({ wfGroups = [], ...values }) => {\n    push(routes.workflows.index);\n    return dispatch(addWorkflow({\n      ...values,\n      group_refs: wfGroups.length > 0 ? wfGroups.map(group => ({ name: group.label, uuid: group.value })) : []\n    })).then(() => dispatch(fetchWorkflows()));\n  };\n\n  const onCancel = () => push(routes.workflows.index);\n\n  return (\n    <FormRenderer\n      showFormControls={ false }\n      onSubmit={ onSave }\n      onCancel={ onCancel }\n      schema={ addWorkflowSchema(intl) }\n    />\n  );\n};\n\nexport default AddWorkflow;\n","import { shallowEqual, useSelector } from 'react-redux';\n\nconst useWorkflow = (id) => {\n  const { workflows } = useSelector(({ workflowReducer: { workflows }}) => ({ workflows }), shallowEqual);\n\n  return workflows && workflows.data && workflows.data.find((wf) => wf.id === id);\n};\n\nexport default useWorkflow;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { useHistory } from 'react-router-dom';\nimport { Modal } from '@patternfly/react-core';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport useQuery from '../../utilities/use-query';\nimport useWorkflow from '../../utilities/use-workflows';\nimport FormRenderer from '../common/form-renderer';\nimport routes from '../../constants/routes';\nimport workflowInfoSchema from '../../forms/workflow-info.schema';\n\nconst createSchema = (editType, name, id) => editType === 'info' ? ({\n  fields: [{\n    component: componentTypes.SUB_FORM,\n    title: <span className=\"pf-c-title pf-m-md\">\n      <FormattedMessage\n        id=\"edit-info-title-subform\"\n        defaultMessage=\"Make any changes to approval process {name}\"\n        values={ { name } } />\n    </span>,\n    name: 'info-sub',\n    fields: workflowInfoSchema(id)\n  }]\n}) : ({\n  fields: [{\n    component: componentTypes.SUB_FORM,\n    title: <span className=\"pf-c-title pf-m-md\">\n      <FormattedMessage\n        id=\"edit-sequence-title-subform\"\n        defaultMessage=\"Set the sequence for the approval process {name}\"\n        values={ { name } } />\n    </span>,\n    name: 'info-sub',\n    fields: [{\n      component: componentTypes.TEXT_FIELD,\n      name: 'sequence',\n      label: <FormattedMessage\n        id=\"sequence-label\"\n        defaultMessage=\"Enter sequence\"\n      />,\n      isRequired: true,\n      validate: [{ type: validatorTypes.REQUIRED }]\n    }]\n  }]\n});\n\nconst reducer = (state, { type, initialValues, schema }) => {\n  switch (type) {\n    case 'loaded':\n      return {\n        ...state,\n        initialValues,\n        schema,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst EditWorkflowInfoModal = ({\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod,\n  editType\n}) => {\n  const [ state, dispatch ] = useReducer(reducer, { isLoading: true });\n\n  const { push } = useHistory();\n  const [{ workflow: id }] = useQuery([ 'workflow' ]);\n  const loadedWorkflow = useWorkflow(id);\n  const intl = useIntl();\n\n  useEffect(() => {\n    if (!loadedWorkflow) {\n      fetchWorkflow(id)\n      .then((data) => dispatch({ type: 'loaded', initialValues: data.value, schema: createSchema(editType, data.value.name, intl, data.value.id) }));\n    } else {\n      dispatch({ type: 'loaded', initialValues: loadedWorkflow, schema: createSchema(editType, loadedWorkflow.name, intl, loadedWorkflow.id) });\n    }\n  }, []);\n\n  const onSave = ({ name, description, sequence }) => {\n    const workflowData = { id, name, description, sequence };\n    return updateWorkflow(workflowData).then(() => postMethod()).then(() => push(routes.workflows.index));\n  };\n\n  const onCancel = () => push(routes.workflows.index);\n\n  return (\n    <Modal\n      title={ editType === 'sequence' ? 'Edit sequence' : 'Edit information' }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }\n    >\n      { state.isLoading && <WorkflowInfoFormLoader/> }\n      {\n        !state.isLoading && <FormRenderer\n          FormTemplate={ (props) => <FormTemplate\n            { ...props }\n            submitLabel={ <FormattedMessage id=\"save\" defaultMessage=\"Save\" /> }\n            buttonClassName=\"pf-u-mt-0\"\n            disableSubmit={ [ 'submitting' ] }\n          /> }\n          onCancel={ onCancel }\n          onSubmit={ onSave }\n          initialValues={ state.initialValues }\n          schema={ state.schema }\n        />\n      }\n    </Modal>\n  );\n};\n\nEditWorkflowInfoModal.defaultProps = {\n  editType: 'info'\n};\n\nEditWorkflowInfoModal.propTypes = {\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired,\n  editType: PropTypes.string\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(EditWorkflowInfoModal);\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { useHistory } from 'react-router-dom';\nimport { Modal } from '@patternfly/react-core';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport { useIntl, FormattedMessage } from 'react-intl';\n\nimport FormRenderer from '../common/form-renderer';\nimport { addWorkflow, updateWorkflow, fetchWorkflow } from '../../redux/actions/workflow-actions';\nimport { WorkflowInfoFormLoader } from '../../presentational-components/shared/loader-placeholders';\nimport useQuery from '../../utilities/use-query';\nimport useWorkflow from '../../utilities/use-workflows';\nimport setGroupSelectSchema from '../../forms/set-group-select.schema';\n\nconst createSchema = (name, intl) => ({\n  fields: [{\n    ...setGroupSelectSchema(intl),\n    label: <FormattedMessage\n      id=\"edit-groups-select-label\"\n      defaultMessage=\"Add or remove {name}'s groups\"\n      values={ {  name } }\n    />\n  }]\n});\n\nconst prepareInitialValues = (wfData) => {\n  const groupOptions = wfData.group_refs.map((group) =>\n    ({ label: group.name, value: group.uuid })\n  );\n  return { ...wfData, wfGroups: groupOptions };\n};\n\nconst reducer = (state, { type, initialValues, intl }) => {\n  switch (type) {\n    case 'loaded':\n      return {\n        ...state,\n        schema: createSchema(initialValues.name, intl),\n        initialValues: prepareInitialValues(initialValues),\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst EditWorkflowGroupsModal = ({\n  fetchWorkflow,\n  updateWorkflow,\n  postMethod\n}) => {\n  const [ state, dispatch ] = useReducer(reducer, { isLoading: true });\n\n  const intl = useIntl();\n\n  const { push } = useHistory();\n  const [{ workflow: id }] = useQuery([ 'workflow' ]);\n  const loadedWorkflow = useWorkflow(id);\n\n  useEffect(() => {\n    if (!loadedWorkflow) {\n      fetchWorkflow(id).then((result) => dispatch({ type: 'loaded', initialValues: prepareInitialValues(result.value), intl }));\n    } else {\n      dispatch({ type: 'loaded', initialValues: prepareInitialValues(loadedWorkflow), intl });\n    }\n  }, []);\n\n  const onSave = ({ wfGroups }) => {\n    const workflowData = { group_refs: wfGroups ? wfGroups.map(group => ({ name: group.label, uuid: group.value })) : []};\n    return updateWorkflow({ id, ...workflowData }).then(() => postMethod()).then(()=>push('/workflows'));\n  };\n\n  const onCancel = () => push('/workflows');\n\n  return (\n    <Modal\n      title={ `Edit approval process's groups` }\n      width={ '40%' }\n      isOpen\n      onClose={ onCancel }>\n      { state.isLoading ? <WorkflowInfoFormLoader/> : <FormRenderer\n        FormTemplate={ (props) => <FormTemplate\n          { ...props }\n          submitLabel={ <FormattedMessage id=\"save\" defaultMessage=\"Save\" /> }\n          buttonClassName=\"pf-u-mt-0\"\n          disableSubmit={ [ 'submitting' ] }\n        /> }\n        onCancel={ onCancel }\n        onSubmit={ onSave }\n        initialValues={ state.initialValues }\n        schema={ state.schema }\n      /> }\n    </Modal>\n  );\n};\n\nEditWorkflowGroupsModal.propTypes = {\n  fetchWorkflow: PropTypes.func.isRequired,\n  postMethod: PropTypes.func.isRequired,\n  updateWorkflow: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addWorkflow,\n  updateWorkflow,\n  fetchWorkflow\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(EditWorkflowGroupsModal);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal, Button, Split, SplitItem, Text, TextContent, TextVariants, Spinner } from '@patternfly/react-core';\nimport { WarningTriangleIcon } from '@patternfly/react-icons';\nimport { removeWorkflow, removeWorkflows } from '../../redux/actions/workflow-actions';\nimport useQuery from '../../utilities/use-query';\nimport routes from '../../constants/routes';\n\nconst RemoveWorkflowModal = ({\n  ids,\n  removeWorkflow,\n  removeWorkflows,\n  fetchData,\n  setSelectedWorkflows\n}) => {\n  const [ submitting, setSubmitting ] = useState(false);\n  const { push } = useHistory();\n  const [{ workflow: workflowId }] = useQuery([ 'workflow' ]);\n\n  if (!workflowId && (!ids || ids.length === 0)) {\n    return null;\n  }\n\n  const removeWf = () =>(workflowId ? removeWorkflow(workflowId) : removeWorkflows(ids))\n  .catch(() => setSubmitting(false))\n  .then(() => push(routes.workflows.index))\n  .then(() => setSelectedWorkflows([]))\n  .then(() => fetchData());\n\n  const onCancel = () => push(routes.workflows.index);\n\n  const onSubmit = () => {\n    setSubmitting(true);\n    return removeWf();\n  };\n\n  return (\n    <Modal\n      isOpen\n      isSmall\n      width={ '40%' }\n      title={ '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button id=\"cancel-remove-workflow\" key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button id=\"submit-remove-workflow\" key=\"submit\" variant=\"primary\" type=\"button\" isDisabled={ submitting } onClick={ onSubmit }>\n          { submitting ? <React.Fragment><Spinner size=\"sm\" /> Removing </React.Fragment> : 'Remove' }\n        </Button>\n      ] }\n    >\n      <Split gutter=\"md\">\n        <SplitItem>\n          <WarningTriangleIcon size=\"xl\" fill=\"#f0ab00\" />\n        </SplitItem>\n        <SplitItem>\n          <TextContent>\n            <Text component={ TextVariants.p }>\n              <FormattedMessage\n                id=\"remove-workflow-modal\"\n                defaultMessage={ `Removing {count, number} {count, plural,\n              one {approval process}\n              other {approval processes}\n            }` }\n                values={ {\n                  count: workflowId ? 1 : ids.length\n                } }\n              />\n            </Text>\n          </TextContent>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemoveWorkflowModal.propTypes = {\n  removeWorkflows: PropTypes.func.isRequired,\n  removeWorkflow: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  setSelectedWorkflows: PropTypes.func.isRequired,\n  ids: PropTypes.array\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  removeWorkflow,\n  removeWorkflows\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(RemoveWorkflowModal);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ExpandableContent = ({ description, groupRefs }) => {\n  const listGroupNames = (groupRefs) => groupRefs.map((ref) => ref.name);\n\n  return (\n    <Fragment>\n      <TextContent>\n        <Text className=\"pf-u-mb-0\" component={ TextVariants.small }>Description</Text>\n        <Text className=\"pf-u-mb-md\" component={ TextVariants.p }>{ description }</Text>\n      </TextContent>\n      <TextContent>\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component={ TextVariants.small }>Groups</Text>\n          <Text className=\"pf-u-mb-md\"\n            component={ TextVariants.p }>\n            { listGroupNames(groupRefs).join(',') }\n          </Text>\n        </Fragment>\n      </TextContent>\n    </Fragment>\n  );\n};\n\nExpandableContent.propTypes = {\n  description: PropTypes.string,\n  groupRefs: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default ExpandableContent;\n","import React from 'react';\n\nimport ExpandableContent from './expandable-content';\n\nexport const createRows = (data) =>\n  data.reduce((acc,\n    {\n      id,\n      name,\n      description,\n      sequence,\n      group_refs\n    }, key) => ([\n    ...acc, {\n      id,\n      isOpen: false,\n      selected: false,\n      cells: [ name, description, sequence ]\n    }, {\n      parent: key * 2,\n      cells: [{ title: <ExpandableContent\n        description={ description }\n        groupRefs={ group_refs }\n        id={ id }\n      /> }]\n    }\n  ]), []);\n\n","import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Route, Link, useHistory } from 'react-router-dom';\nimport { ToolbarGroup, ToolbarItem, Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { expandable, sortable } from '@patternfly/react-table';\nimport { fetchWorkflows, expandWorkflow, sortWorkflows, setFilterValueWorkflows } from '../../redux/actions/workflow-actions';\nimport AddWorkflow from './add-groups/add-workflow-wizard';\nimport EditWorkflowInfo from './edit-workflow-info-modal';\nimport EditWorkflowGroups from './edit-workflow-groups-modal';\nimport RemoveWorkflow from './remove-workflow-modal';\nimport { createRows } from './workflow-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport { TopToolbar, TopToolbarTitle } from '../../presentational-components/shared/top-toolbar';\nimport { AppTabs } from '../../smart-components/app-tabs/app-tabs';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncDebounce from '../../utilities/async-debounce';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\nimport routesLinks from '../../constants/routes';\n\nconst columns = [{\n  title: 'Name',\n  cellFormatters: [ expandable ],\n  transforms: [ sortable ]\n},\n{ title: 'Description', transforms: [ sortable ]},\n{ title: 'Sequence', transforms: [ sortable ]}\n];\n\nconst debouncedFilter = asyncDebounce(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(setFilterValueWorkflows(filter, meta));\n    return dispatch(fetchWorkflows(meta))\n    .then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst prepareChips = (filterValue) => filterValue ? [{\n  category: 'Name',\n  key: 'name',\n  chips: [{ name: filterValue, value: filterValue }]\n}] : [];\n\nconst initialState = (filterValue = '') => ({\n  filterValue,\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n});\n\nconst workflowsListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Workflows = () => {\n  const [ selectedWorkflows, setSelectedWorkflows ] = useState([]);\n  const { workflows: { data, meta }, sortBy, filterValueRedux } = useSelector(\n    ({ workflowReducer: { workflows, sortBy, filterValue: filterValueRedux }}) => ({ workflows, sortBy, filterValueRedux })\n    , shallowEqual\n  );\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch ] = useReducer(\n    workflowsListState,\n    initialState(filterValueRedux)\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const updateWorkflows = (pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchWorkflows(pagination))\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n    .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    updateWorkflows(defaultSettings);\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) => stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      { ...meta, offset: 0 }\n    );\n  };\n\n  const onSort = (_e, index, direction, { property }) => {\n    dispatch(sortWorkflows({ index, direction, property }));\n    return updateWorkflows();\n  };\n\n  const routes = () => <Fragment>\n    <Route exact path={ routesLinks.workflows.add } render={ props => <AddWorkflow { ...props }\n      postMethod={ updateWorkflows } /> }/>\n    <Route exact path={ routesLinks.workflows.editInfo } render={ props => <EditWorkflowInfo editType='info' { ...props }\n      postMethod={ updateWorkflows } /> }/>\n    <Route exact path={ routesLinks.workflows.editGroups } render={ props => <EditWorkflowGroups editType='groups' { ...props }\n      postMethod={ updateWorkflows } /> }/>\n    <Route exact path={ routesLinks.workflows.editSequence } render={ props => <EditWorkflowInfo editType='sequence' { ...props }\n      postMethod={ updateWorkflows } /> }/>\n    <Route exact path={ routesLinks.workflows.remove }\n      render={ props => <RemoveWorkflow\n        { ...props }\n        ids={ selectedWorkflows }\n        fetchData={ updateWorkflows }\n        setSelectedWorkflows={ setSelectedWorkflows }\n      /> }\n    />\n  </Fragment>;\n\n  const actionResolver = (_workflowData, { rowIndex }) => rowIndex % 2 === 1 ?\n    null\n    : [\n      {\n        title: 'Edit info',\n        component: 'button',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editInfo, search: `?workflow=${workflow.id}` })\n      },\n\n      {\n        title: 'Edit groups',\n        component: 'button',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editGroups, search: `?workflow=${workflow.id}` })\n      },\n      {\n        title: 'Edit sequence',\n        component: 'button',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.editSequence, search: `?workflow=${workflow.id}` })\n      },\n      {\n        title: 'Delete',\n        component: 'button',\n        onClick: (_event, _rowId, workflow) =>\n          history.push({ pathname: routesLinks.workflows.remove, search: `?workflow=${workflow.id}` })\n      }\n    ];\n\n  const setCheckedItems = (checkedWorkflows) =>\n    setSelectedWorkflows(checkedWorkflows.map(wf => wf.id));\n\n  const anyWorkflowsSelected = selectedWorkflows.length > 0;\n\n  const toolbarButtons = () => <ToolbarGroup className={ `pf-u-pl-lg top-toolbar` }>\n    <ToolbarItem>\n      <Link id=\"add-workflow-link\" to={ { pathname: routesLinks.workflows.add } }>\n        <Button\n          variant=\"primary\"\n          aria-label=\"Create approval process\"\n        >\n          Create approval process\n        </Button>\n      </Link>\n    </ToolbarItem>\n    <ToolbarItem>\n      <Link\n        id=\"remove-multiple-workflows\"\n        className={ anyWorkflowsSelected ? '' : 'disabled-link' }\n        to={ { pathname: routesLinks.workflows.remove } }\n      >\n        <Button\n          variant=\"link\"\n          isDisabled={ !anyWorkflowsSelected }\n          style={ { color: anyWorkflowsSelected ? 'var(--pf-global--danger-color--100)' : 'var(--pf-global--disabled-color--100)'\t} }\n          aria-label=\"Delete approval process\"\n        >\n          Delete\n        </Button>\n      </Link>\n    </ToolbarItem>\n  </ToolbarGroup>;\n\n  const onCollapse = (id, setRows, setOpen) => {\n    dispatch(expandWorkflow(id));\n    setRows((rows) => setOpen(rows, id));\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle title=\"Approval\"/>\n        <AppTabs/>\n      </TopToolbar>\n      <TableToolbarView\n        sortBy={ sortBy }\n        onSort={ onSort }\n        data={ data }\n        isSelectable={ true }\n        createRows={ createRows }\n        columns={ columns }\n        fetchData={ updateWorkflows }\n        routes={ routes }\n        actionResolver={ actionResolver }\n        titlePlural=\"approval processes\"\n        titleSingular=\"approval process\"\n        pagination={ meta }\n        setCheckedItems={ setCheckedItems }\n        toolbarButtons={ toolbarButtons }\n        filterValue={ filterValue }\n        onFilterChange={ handleFilterChange }\n        isLoading={ isFetching || isFiltering }\n        onCollapse={ onCollapse }\n        renderEmptyState={ () => (\n          <TableEmptyState\n            title={ filterValue === '' ? 'No approval processes' : 'No results found' }\n            Icon={ SearchIcon }\n            PrimaryAction={ () =>\n              filterValue !== '' ? (\n                <Button onClick={ () => handleFilterChange('') } variant=\"link\">\n                  Clear all filters\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? 'No approval processes.'\n                : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n            }\n          />\n        ) }\n        activeFiltersConfig={ {\n          filters: prepareChips(filterValue),\n          onDelete: () => handleFilterChange('')\n        } }\n      />\n    </Fragment>\n  );\n};\n\nexport default Workflows;\n"],"sourceRoot":""}